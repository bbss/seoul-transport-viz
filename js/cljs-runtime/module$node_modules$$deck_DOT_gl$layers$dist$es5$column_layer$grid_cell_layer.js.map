{
"version":3,
"file":"module$node_modules$$deck_DOT_gl$layers$dist$es5$column_layer$grid_cell_layer.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,8EAAA,CAAkG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGtIC,MAAAA,CAAyBH,OAAA,CAAQ,kEAAR,CAE7BI,OAAAC,eAAA,CAAsBH,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CI,MAAO,CAAA,CADoC,CAA7C,CAGAJ,QAAA,CAAQ,SAAR,CAAA,CAAqB,IAAK,EAE1B,KAAIK,iBAAmBJ,MAAA,CAAuBH,OAAA,CAAQ,2DAAR,CAAvB,CAAvB,CAEIQ,cAAgBL,MAAA,CAAuBH,OAAA,CAAQ,wDAAR,CAAvB,CAFpB,CAIIS;AAA8BN,MAAA,CAAuBH,OAAA,CAAQ,sEAAR,CAAvB,CAJlC,CAMIU,iBAAmBP,MAAA,CAAuBH,OAAA,CAAQ,2DAAR,CAAvB,CANvB,CAQIW,WAAaR,MAAA,CAAuBH,OAAA,CAAQ,qDAAR,CAAvB,CARjB,CAUIY,MAAQZ,OAAA,CAAQ,sDAAR,CAiBRa,QAAAA,CAAgB,QAAS,CAACC,YAAD,CAAe,CAG1CD,QAASA,cAAa,EAAG,CACvB,CAAC,CAAA,CAAGN,gBAAA,CAAiB,SAAjB,CAAJ,EAAiC,IAAjC,CAAuCM,aAAvC,CACA,OAAO,CAAC,CAAA,CAAGJ,2BAAA,CAA4B,SAA5B,CAAJ,EAA4C,IAA5C,CAAkD,CAAC,CAAA,CAAGC,gBAAA,CAAiB,SAAjB,CAAJ,EAAiCG,aAAjC,CAAAE,MAAA,CAAsD,IAAtD;AAA4DC,SAA5D,CAAlD,CAFgB,CAFzB,CAAC,CAAA,CAAGL,UAAA,CAAW,SAAX,CAAJ,EAA2BE,aAA3B,CAA0CC,YAA1C,CAOA,EAAC,CAAA,CAAGN,aAAA,CAAc,SAAd,CAAJ,EAA8BK,aAA9B,CAA6C,CAAC,CAC5CI,IAAK,aADuC,CAE5CX,MAAOY,QAAoB,CAACC,cAAD,CAAiB,CAC1C,MAAO,KAAIP,KAAAQ,aAD+B,CAFA,CAAD,CAK1C,CACDH,IAAK,MADJ,CAEDX,MAAOe,QAAa,CAACC,IAAD,CAAO,CAAA,IAErBC,YAAc,IAAAC,MAOlB,KAAAC,MAAAC,MAAAC,YAAA,CAA6BvB,MAAAwB,OAAA,CAAc,EAAd,CARdN,IAAAO,SAQc,CAA4B,CACvDC,OAHaP,WAAAQ,SAGbD,CAAmB,CADoC,CAEvDE,MAHUT,WAAAS,MAC6C,CAGvDC,OAPWV,WAAAU,OAI4C,CAIvDC,SATaX,WAAAW,SAK0C,CAKvDC,SARaZ,WAAAY,SAG0C,CAMvDC,eAZmBb,WAAAa,eAMoC,CAOvDC,aAAc,CAPyC;AAQvDC,YAAa,CAAA,CAR0C,CAA5B,CAA7B,CAAAjB,KAAA,EATyB,CAF1B,CAL0C,CAA7C,CA4BA,OAAOR,cApCmC,CAAxB,CAfDV,MAAAoC,CAAuBvC,OAAA,CAAQ,4EAAR,CAAvBuC,CAoDjB,CAAa,SAAb,CArCkB,CAuCpBrC,QAAA,CAAQ,SAAR,CAAA,CAAqBW,OACrBA,QAAA2B,UAAA,CAA0B,eAC1B3B,QAAA4B,aAAA,CAtDmBA,CACjBV,SAAU,CACRW,KAAM,QADE,CAERC,IAAK,CAFG,CAGRrC,MAAO,GAHC,CADOmC,CAMjBR,OAAQ,CACNS,KAAM,OADA,CAENC,IAAK,CAFC,CAGNrC,MAAO,CAAC,CAAD,CAAI,CAAJ,CAHD,CANSmC,CAxBuH;",
"sources":["node_modules/@deck_DOT_gl/layers/dist/es5/column-layer/grid-cell-layer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$deck_DOT_gl$layers$dist$es5$column_layer$grid_cell_layer\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _core = require(\"@luma.gl/core\");\n\nvar _columnLayer = _interopRequireDefault(require(\"./column-layer\"));\n\nvar defaultProps = {\n  cellSize: {\n    type: 'number',\n    min: 0,\n    value: 1000\n  },\n  offset: {\n    type: 'array',\n    min: 0,\n    value: [1, 1]\n  }\n};\n\nvar GridCellLayer = function (_ColumnLayer) {\n  (0, _inherits2[\"default\"])(GridCellLayer, _ColumnLayer);\n\n  function GridCellLayer() {\n    (0, _classCallCheck2[\"default\"])(this, GridCellLayer);\n    return (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(GridCellLayer).apply(this, arguments));\n  }\n\n  (0, _createClass2[\"default\"])(GridCellLayer, [{\n    key: \"getGeometry\",\n    value: function getGeometry(diskResolution) {\n      return new _core.CubeGeometry();\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(_ref) {\n      var uniforms = _ref.uniforms;\n      var _this$props = this.props,\n          elevationScale = _this$props.elevationScale,\n          extruded = _this$props.extruded,\n          offset = _this$props.offset,\n          coverage = _this$props.coverage,\n          cellSize = _this$props.cellSize,\n          angle = _this$props.angle;\n      this.state.model.setUniforms(Object.assign({}, uniforms, {\n        radius: cellSize / 2,\n        angle: angle,\n        offset: offset,\n        extruded: extruded,\n        coverage: coverage,\n        elevationScale: elevationScale,\n        edgeDistance: 1,\n        isWireframe: false\n      })).draw();\n    }\n  }]);\n  return GridCellLayer;\n}(_columnLayer[\"default\"]);\n\nexports[\"default\"] = GridCellLayer;\nGridCellLayer.layerName = 'GridCellLayer';\nGridCellLayer.defaultProps = defaultProps;\n//# sourceMappingURL=grid-cell-layer.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","Object","defineProperty","value","_classCallCheck2","_createClass2","_possibleConstructorReturn2","_getPrototypeOf2","_inherits2","_core","GridCellLayer","_ColumnLayer","apply","arguments","key","getGeometry","diskResolution","CubeGeometry","draw","_ref","_this$props","props","state","model","setUniforms","assign","uniforms","radius","cellSize","angle","offset","extruded","coverage","elevationScale","edgeDistance","isWireframe","_columnLayer","layerName","defaultProps","type","min"]
}
