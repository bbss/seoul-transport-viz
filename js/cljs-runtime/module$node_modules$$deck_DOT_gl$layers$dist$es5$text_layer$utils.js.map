{
"version":3,
"file":"module$node_modules$$deck_DOT_gl$layers$dist$es5$text_layer$utils.js",
"lineCount":13,
"mappings":"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",
"sources":["node_modules/@deck_DOT_gl/layers/dist/es5/text-layer/utils.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$deck_DOT_gl$layers$dist$es5$text_layer$utils\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.nextPowOfTwo = nextPowOfTwo;\nexports.buildMapping = buildMapping;\nexports.autoWrapping = autoWrapping;\nexports.transformParagraph = transformParagraph;\nexports.getTextFromBuffer = getTextFromBuffer;\n\nvar _core = require(\"@deck.gl/core\");\n\nvar MISSING_CHAR_WIDTH = 32;\n\nfunction nextPowOfTwo(number) {\n  return Math.pow(2, Math.ceil(Math.log2(number)));\n}\n\nfunction buildMapping(_ref) {\n  var characterSet = _ref.characterSet,\n      getFontWidth = _ref.getFontWidth,\n      fontHeight = _ref.fontHeight,\n      buffer = _ref.buffer,\n      maxCanvasWidth = _ref.maxCanvasWidth,\n      _ref$mapping = _ref.mapping,\n      mapping = _ref$mapping === void 0 ? {} : _ref$mapping,\n      _ref$xOffset = _ref.xOffset,\n      xOffset = _ref$xOffset === void 0 ? 0 : _ref$xOffset,\n      _ref$yOffset = _ref.yOffset,\n      yOffset = _ref$yOffset === void 0 ? 0 : _ref$yOffset;\n  var row = 0;\n  var x = xOffset;\n  var i = 0;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = characterSet[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var _char = _step.value;\n\n      if (!mapping[_char]) {\n        var width = getFontWidth(_char, i++);\n\n        if (x + width + buffer * 2 > maxCanvasWidth) {\n          x = 0;\n          row++;\n        }\n\n        mapping[_char] = {\n          x: x + buffer,\n          y: yOffset + row * (fontHeight + buffer * 2) + buffer,\n          width: width,\n          height: fontHeight\n        };\n        x += width + buffer * 2;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n        _iterator[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var rowHeight = fontHeight + buffer * 2;\n  return {\n    mapping: mapping,\n    xOffset: x,\n    yOffset: yOffset + row * rowHeight,\n    canvasHeight: nextPowOfTwo(yOffset + (row + 1) * rowHeight)\n  };\n}\n\nfunction getTextWidth(text, mapping) {\n  var width = 0;\n\n  for (var i = 0; i < text.length; i++) {\n    var character = text[i];\n    var frameWidth = null;\n    var frame = mapping && mapping[character];\n\n    if (frame) {\n      frameWidth = frame.width;\n    }\n\n    width += frameWidth;\n  }\n\n  return width;\n}\n\nfunction breakAll(text, maxWidth, iconMapping) {\n  var rows = [];\n  var rowStartCharIndex = 0;\n  var rowOffsetLeft = 0;\n\n  for (var i = 0; i < text.length; i++) {\n    var textWidth = getTextWidth(text[i], iconMapping);\n\n    if (rowOffsetLeft + textWidth > maxWidth) {\n      if (rowStartCharIndex < i) {\n        rows.push(text.substring(rowStartCharIndex, i));\n      }\n\n      rowStartCharIndex = i;\n      rowOffsetLeft = 0;\n    }\n\n    rowOffsetLeft += textWidth;\n  }\n\n  if (rowStartCharIndex < text.length) {\n    rows.push(text.substring(rowStartCharIndex));\n  }\n\n  return {\n    rows: rows,\n    lastRowStartCharIndex: rowStartCharIndex,\n    lastRowOffsetLeft: rowOffsetLeft\n  };\n}\n\nfunction breakWord(text, maxWidth, iconMapping) {\n  var rows = [];\n  var rowStartCharIndex = 0;\n  var groupStartCharIndex = 0;\n  var rowOffsetLeft = 0;\n  var group = null;\n\n  for (var i = 0; i < text.length; i++) {\n    if (text[i] === ' ') {\n      group = text[i];\n      groupStartCharIndex = i + 1;\n    } else if (i + 1 < text.length && text[i + 1] === ' ' || i + 1 === text.length) {\n      group = text.substring(groupStartCharIndex, i + 1);\n      groupStartCharIndex = i + 1;\n    } else {\n      group = null;\n    }\n\n    if (group) {\n      var groupWidth = getTextWidth(group, iconMapping);\n\n      if (rowOffsetLeft + groupWidth > maxWidth) {\n        var lastGroupStartIndex = groupStartCharIndex - group.length;\n\n        if (rowStartCharIndex < lastGroupStartIndex) {\n          rows.push(text.substring(rowStartCharIndex, lastGroupStartIndex));\n          rowStartCharIndex = lastGroupStartIndex;\n          rowOffsetLeft = 0;\n        }\n\n        if (groupWidth > maxWidth) {\n          var subGroups = breakAll(group, maxWidth, iconMapping);\n\n          if (subGroups.rows.length > 1) {\n            rows = rows.concat(subGroups.rows.slice(0, subGroups.rows.length - 1));\n          }\n\n          rowStartCharIndex = rowStartCharIndex + subGroups.lastRowStartCharIndex;\n          groupWidth = subGroups.lastRowOffsetLeft;\n        }\n      }\n\n      rowOffsetLeft += groupWidth;\n    }\n  }\n\n  if (rowStartCharIndex < text.length) {\n    rows.push(text.substring(rowStartCharIndex));\n  }\n\n  return {\n    rows: rows,\n    lastRowStartCharIndex: rowStartCharIndex,\n    lastRowOffsetLeft: rowOffsetLeft\n  };\n}\n\nfunction autoWrapping(text, wordBreak, maxWidth, iconMapping) {\n  if (wordBreak === 'break-all') {\n    return breakAll(text, maxWidth, iconMapping);\n  }\n\n  return breakWord(text, maxWidth, iconMapping);\n}\n\nfunction transformRow(row, iconMapping) {\n  var x = 0;\n  var rowHeight = 0;\n  var leftOffsets = new Array(row.length);\n\n  for (var i = 0; i < row.length; i++) {\n    var character = row[i];\n    var frame = iconMapping[character];\n\n    if (frame) {\n      if (!rowHeight) {\n        rowHeight = frame.height;\n      }\n\n      leftOffsets[i] = x + frame.width / 2;\n      x += frame.width;\n    } else {\n      _core.log.warn(\"Missing character: \".concat(character))();\n\n      leftOffsets[i] = x;\n      x += MISSING_CHAR_WIDTH;\n    }\n  }\n\n  return {\n    leftOffsets: leftOffsets,\n    rowWidth: x,\n    rowHeight: rowHeight\n  };\n}\n\nfunction transformParagraph(paragraph, lineHeight, wordBreak, maxWidth, iconMapping) {\n  var result = new Array(paragraph.length);\n  var autoWrappingEnabled = (wordBreak === 'break-word' || wordBreak === 'break-all') && isFinite(maxWidth) && maxWidth > 0;\n  var size = [0, 0];\n  var rowOffsetTop = 0;\n  var lineStartIndex = 0;\n\n  for (var i = 0; i <= paragraph.length; i++) {\n    var _char2 = paragraph[i];\n    var line = void 0;\n\n    if (_char2 === '\\n' || _char2 === undefined) {\n      line = paragraph.slice(lineStartIndex, i);\n    }\n\n    if (line) {\n      var rows = autoWrappingEnabled ? autoWrapping(line, wordBreak, maxWidth, iconMapping).rows : [line];\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = rows[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var row = _step2.value;\n\n          var _transformRow = transformRow(row, iconMapping, lineHeight),\n              rowWidth = _transformRow.rowWidth,\n              rowHeight = _transformRow.rowHeight,\n              leftOffsets = _transformRow.leftOffsets;\n\n          var _iteratorNormalCompletion3 = true;\n          var _didIteratorError3 = false;\n          var _iteratorError3 = undefined;\n\n          try {\n            for (var _iterator3 = leftOffsets[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n              var x = _step3.value;\n              result[lineStartIndex++] = {\n                x: x,\n                y: rowOffsetTop + rowHeight / 2,\n                rowWidth: rowWidth\n              };\n            }\n          } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n                _iterator3[\"return\"]();\n              }\n            } finally {\n              if (_didIteratorError3) {\n                throw _iteratorError3;\n              }\n            }\n          }\n\n          rowOffsetTop = rowOffsetTop + rowHeight * lineHeight;\n          size[0] = autoWrappingEnabled ? maxWidth : Math.max(size[0], rowWidth);\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n            _iterator2[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n\n    if (_char2 === '\\n') {\n      result[lineStartIndex++] = {\n        x: 0,\n        y: 0,\n        rowWidth: 0\n      };\n    }\n  }\n\n  size[1] = rowOffsetTop;\n  return {\n    characters: result,\n    size: size\n  };\n}\n\nfunction getTextFromBuffer(_ref2) {\n  var value = _ref2.value,\n      length = _ref2.length,\n      stride = _ref2.stride,\n      offset = _ref2.offset,\n      startIndices = _ref2.startIndices;\n  var bytesPerElement = value.BYTES_PER_ELEMENT;\n  var elementStride = stride ? stride / bytesPerElement : 1;\n  var elementOffset = offset ? offset / bytesPerElement : 0;\n  var characterCount = startIndices[length] || Math.floor((value.length - elementOffset - bytesPerElement) / elementStride) + 1;\n  var texts = new Array(length);\n  var codes = value;\n\n  if (elementStride > 1 || elementOffset > 0) {\n    codes = new value.constructor(characterCount);\n\n    for (var i = 0; i < characterCount; i++) {\n      codes[i] = value[i * elementStride + elementOffset];\n    }\n  }\n\n  for (var index = 0; index < length; index++) {\n    var startIndex = startIndices[index];\n    var endIndex = startIndices[index + 1] || characterCount;\n    texts[index] = String.fromCodePoint.apply(null, codes.subarray(startIndex, endIndex));\n  }\n\n  return {\n    texts: texts,\n    characterCount: characterCount\n  };\n}\n//# sourceMappingURL=utils.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","nextPowOfTwo","number","Math","pow","ceil","log2","getTextWidth","text","mapping","width","i","length","character","frameWidth","frame","breakAll","maxWidth","iconMapping","rows","rowStartCharIndex","rowOffsetLeft","textWidth","push","substring","lastRowStartCharIndex","lastRowOffsetLeft","autoWrapping","wordBreak","groupStartCharIndex","group","groupWidth","lastGroupStartIndex","subGroups","concat","slice","Object","defineProperty","value","buildMapping","_ref","characterSet","getFontWidth","fontHeight","buffer","maxCanvasWidth","_ref$mapping","_ref$xOffset","xOffset","_ref$yOffset","yOffset","row","x","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iterator","Symbol","iterator","_step","done","next","_char","y","height","err","rowHeight","canvasHeight","transformParagraph","paragraph","lineHeight","result","Array","autoWrappingEnabled","isFinite","size","rowOffsetTop","lineStartIndex","_char2","line","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","leftOffsets","_core","log","warn","MISSING_CHAR_WIDTH","rowWidth","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","max","characters","getTextFromBuffer","_ref2","stride","offset","startIndices","bytesPerElement","BYTES_PER_ELEMENT","elementStride","elementOffset","characterCount","floor","texts","codes","constructor","index","String","fromCodePoint","apply","subarray","startIndex"]
}
