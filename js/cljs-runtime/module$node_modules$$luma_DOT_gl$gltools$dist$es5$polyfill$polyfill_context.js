shadow$provide.module$node_modules$$luma_DOT_gl$gltools$dist$es5$polyfill$polyfill_context=function(global,require,module,exports){function polyfillContext(gl){gl.luma=gl.luma||{};if(!gl.luma.polyfilled){(0,_polyfillVertexArrayObject.polyfillVertexArrayObject)(gl);gl.luma.extensions={};var EXTENSIONS=gl.getSupportedExtensions()||[],_iteratorNormalCompletion=!0,_didIteratorError=!1,_iteratorError=void 0;try{for(var _iterator=EXTENSIONS[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=
!0){var extension=_step.value;gl.luma[extension]=gl.getExtension(extension)}}catch(err){_didIteratorError=!0,_iteratorError=err}finally{try{if(!_iteratorNormalCompletion&&null!=_iterator["return"])_iterator["return"]()}finally{if(_didIteratorError)throw _iteratorError;}}EXTENSIONS=!0;_iteratorNormalCompletion=!1;_didIteratorError=void 0;try{for(var _iterator2=Object.getOwnPropertyNames(_polyfillTable.WEBGL2_CONTEXT_POLYFILLS)[Symbol.iterator](),_step2;!(EXTENSIONS=(_step2=_iterator2.next()).done);EXTENSIONS=
!0){var extension$jscomp$0=_step2.value;"overrides"!==extension$jscomp$0&&polyfillExtension(gl,{extension:extension$jscomp$0,target:gl.luma,target2:gl})}}catch(err){_iteratorNormalCompletion=!0,_didIteratorError=err}finally{try{if(!EXTENSIONS&&null!=_iterator2["return"])_iterator2["return"]()}finally{if(_iteratorNormalCompletion)throw _didIteratorError;}}installOverrides(gl,{target:gl.luma,target2:gl});gl.luma.polyfilled=!0}return gl}function installOverrides(gl,_ref){var target=_ref.target,target2=
_ref.target2;Object.keys(_polyfillTable.WEBGL2_CONTEXT_OVERRIDES).forEach(function(key){if("function"===typeof _polyfillTable.WEBGL2_CONTEXT_OVERRIDES[key]){var originalFunc=gl[key]?gl[key].bind(gl):function(){};originalFunc=_polyfillTable.WEBGL2_CONTEXT_OVERRIDES[key].bind(null,gl,originalFunc);target[key]=originalFunc;target2[key]=originalFunc}})}function polyfillExtension(gl,_ref2){var extension=_ref2.extension,target=_ref2.target,target2=_ref2.target2,defaults=_polyfillTable.WEBGL2_CONTEXT_POLYFILLS[extension];
(0,_utils.assert)(defaults);_ref2=defaults.meta;_ref2=(void 0===_ref2?{}:_ref2).suffix;var suffix=void 0===_ref2?"":_ref2,ext=gl.getExtension(extension);extension=function(){var key=_Object$keys[_i],extKey="".concat(key).concat(suffix),polyfill=null;"meta"!==key&&"function"!==typeof gl[key]&&(ext&&"function"===typeof ext[extKey]?polyfill=function(){return ext[extKey].apply(ext,arguments)}:"function"===typeof defaults[key]&&(polyfill=defaults[key].bind(target)));polyfill&&(target[key]=polyfill,target2[key]=
polyfill)};for(var _i=0,_Object$keys=Object.keys(defaults);_i<_Object$keys.length;_i++)extension()}Object.defineProperty(exports,"__esModule",{value:!0});exports["default"]=polyfillContext;var _polyfillVertexArrayObject=require("module$node_modules$$luma_DOT_gl$gltools$dist$es5$polyfill$polyfill_vertex_array_object"),_utils=require("module$node_modules$$luma_DOT_gl$gltools$dist$es5$utils$index"),_polyfillTable=require("module$node_modules$$luma_DOT_gl$gltools$dist$es5$polyfill$polyfill_table");("undefined"!==
typeof global?global:window).polyfillContext=polyfillContext}
//# sourceMappingURL=module$node_modules$$luma_DOT_gl$gltools$dist$es5$polyfill$polyfill_context.js.map
