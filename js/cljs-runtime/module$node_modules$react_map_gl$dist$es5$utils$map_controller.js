shadow$provide.module$node_modules$react_map_gl$dist$es5$utils$map_controller=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard");module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports["default"]=exports.LINEAR_TRANSITION_PROPS=void 0;var _slicedToArray2=module(require("module$node_modules$$babel$runtime$helpers$slicedToArray")),_classCallCheck2=
module(require("module$node_modules$$babel$runtime$helpers$classCallCheck")),_createClass2=module(require("module$node_modules$$babel$runtime$helpers$createClass")),_defineProperty2=module(require("module$node_modules$$babel$runtime$helpers$defineProperty")),_mapState=module(require("module$node_modules$react_map_gl$dist$es5$utils$map_state")),_transition=require("module$node_modules$react_map_gl$dist$es5$utils$transition$index"),_transitionManager=global(require("module$node_modules$react_map_gl$dist$es5$utils$transition_manager")),
_debounce=module(require("module$node_modules$react_map_gl$dist$es5$utils$debounce")),NO_TRANSITION_PROPS={transitionDuration:0},LINEAR_TRANSITION_PROPS={transitionDuration:300,transitionEasing:function(t){return t},transitionInterpolator:new _transition.LinearInterpolator,transitionInterruption:_transitionManager.TRANSITION_EVENTS.BREAK};exports.LINEAR_TRANSITION_PROPS=LINEAR_TRANSITION_PROPS;var JSCompiler_object_inline_WHEEL_6560=["wheel"],JSCompiler_object_inline_PAN_6561=["panstart","panmove",
"panend"],JSCompiler_object_inline_PINCH_6562=["pinchstart","pinchmove","pinchend","pinchcancel"],JSCompiler_object_inline_DOUBLE_TAP_6563=["doubletap"],JSCompiler_object_inline_KEYBOARD_6564=["keydown"];require=function(){function MapController(){var _this=this;(0,_classCallCheck2["default"])(this,MapController);(0,_defineProperty2["default"])(this,"events",[]);(0,_defineProperty2["default"])(this,"mapState",void 0);(0,_defineProperty2["default"])(this,"onViewportChange",void 0);(0,_defineProperty2["default"])(this,
"onStateChange",void 0);(0,_defineProperty2["default"])(this,"mapStateProps",void 0);(0,_defineProperty2["default"])(this,"eventManager",void 0);(0,_defineProperty2["default"])(this,"scrollZoom",!0);(0,_defineProperty2["default"])(this,"dragPan",!0);(0,_defineProperty2["default"])(this,"dragRotate",!0);(0,_defineProperty2["default"])(this,"doubleClickZoom",!0);(0,_defineProperty2["default"])(this,"touchZoom",!0);(0,_defineProperty2["default"])(this,"touchRotate",!1);(0,_defineProperty2["default"])(this,
"keyboard",!0);(0,_defineProperty2["default"])(this,"_state",{isDragging:!1});(0,_defineProperty2["default"])(this,"_events",{});(0,_defineProperty2["default"])(this,"_transitionManager",new _transitionManager["default"]);(0,_defineProperty2["default"])(this,"setState",function(newState){Object.assign(_this._state,newState);if(_this.onStateChange)_this.onStateChange(_this._state)});this.handleEvent=this.handleEvent.bind(this);this._onWheelEnd=(0,_debounce["default"])(this._onWheelEnd,100)}(0,_createClass2["default"])(MapController,
[{key:"handleEvent",value:function(event){this.mapState=this.getMapState();switch(event.type){case "panstart":return this._onPanStart(event);case "panmove":return this._onPan(event);case "panend":return this._onPanEnd(event);case "pinchstart":return this._onPinchStart(event);case "pinchmove":return this._onPinch(event);case "pinchcancel":case "pinchend":return this._onPinchEnd(event);case "doubletap":return this._onDoubleTap(event);case "wheel":return this._onWheel(event);case "keydown":return this._onKeyDown(event);
default:return!1}}},{key:"getCenter",value:function(event){event=event.offsetCenter;return[event.x,event.y]}},{key:"isFunctionKeyPressed",value:function(event){event=event.srcEvent;return!!(event.metaKey||event.altKey||event.ctrlKey||event.shiftKey)}},{key:"updateViewport",value:function(newMapState){var extraProps=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},extraState=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{},oldViewport=this.mapState?this.mapState.getViewportProps():
{},newViewport=Object.assign({},newMapState.getViewportProps(),extraProps);if(Object.keys(newViewport).some(function(key){return oldViewport[key]!==newViewport[key]}))this.onViewportChange(newViewport,extraState,oldViewport);this.setState(Object.assign({},newMapState.getInteractiveState(),extraState))}},{key:"getMapState",value:function(overrides){return new _mapState["default"](Object.assign({},this.mapStateProps,this._state,overrides))}},{key:"setOptions",value:function(options){var onStateChange=
options.onStateChange,_options$eventManager=options.eventManager;_options$eventManager=void 0===_options$eventManager?this.eventManager:_options$eventManager;var _options$isInteractiv=options.isInteractive;_options$isInteractiv=void 0===_options$isInteractiv?!0:_options$isInteractiv;var _options$scrollZoom=options.scrollZoom;_options$scrollZoom=void 0===_options$scrollZoom?this.scrollZoom:_options$scrollZoom;var _options$dragPan=options.dragPan;_options$dragPan=void 0===_options$dragPan?this.dragPan:
_options$dragPan;var _options$dragRotate=options.dragRotate;_options$dragRotate=void 0===_options$dragRotate?this.dragRotate:_options$dragRotate;var _options$doubleClickZ=options.doubleClickZoom;_options$doubleClickZ=void 0===_options$doubleClickZ?this.doubleClickZoom:_options$doubleClickZ;var _options$touchZoom=options.touchZoom;_options$touchZoom=void 0===_options$touchZoom?this.touchZoom:_options$touchZoom;var _options$touchRotate=options.touchRotate;_options$touchRotate=void 0===_options$touchRotate?
this.touchRotate:_options$touchRotate;var _options$keyboard=options.keyboard;_options$keyboard=void 0===_options$keyboard?this.keyboard:_options$keyboard;this.onViewportChange=options.onViewportChange;this.onStateChange=onStateChange;onStateChange=!this.mapStateProps||this.mapStateProps.height!==options.height;this.mapStateProps=options;onStateChange&&this.updateViewport(new _mapState["default"](options));this._transitionManager.processViewportChange(Object.assign({},options,{onStateChange:this.setState}));
this.eventManager!==_options$eventManager&&(this.eventManager=_options$eventManager,this._events={},this.toggleEvents(this.events,!0));this.toggleEvents(JSCompiler_object_inline_WHEEL_6560,_options$isInteractiv&&_options$scrollZoom);this.toggleEvents(JSCompiler_object_inline_PAN_6561,_options$isInteractiv&&(_options$dragPan||_options$dragRotate));this.toggleEvents(JSCompiler_object_inline_PINCH_6562,_options$isInteractiv&&(_options$touchZoom||_options$touchRotate));this.toggleEvents(JSCompiler_object_inline_DOUBLE_TAP_6563,
_options$isInteractiv&&_options$doubleClickZ);this.toggleEvents(JSCompiler_object_inline_KEYBOARD_6564,_options$isInteractiv&&_options$keyboard);this.scrollZoom=_options$scrollZoom;this.dragPan=_options$dragPan;this.dragRotate=_options$dragRotate;this.doubleClickZoom=_options$doubleClickZ;this.touchZoom=_options$touchZoom;this.touchRotate=_options$touchRotate;this.keyboard=_options$keyboard}},{key:"toggleEvents",value:function(eventNames,enabled){var _this2=this;this.eventManager&&eventNames.forEach(function(eventName){if(_this2._events[eventName]!==
enabled)if(_this2._events[eventName]=enabled)_this2.eventManager.on(eventName,_this2.handleEvent);else _this2.eventManager.off(eventName,_this2.handleEvent)})}},{key:"_onPanStart",value:function(event){event=this.getCenter(event);event=this.mapState.panStart({pos:event}).rotateStart({pos:event});this.updateViewport(event,NO_TRANSITION_PROPS,{isDragging:!0});return!0}},{key:"_onPan",value:function(event){return this.isFunctionKeyPressed(event)||event.rightButton?this._onPanRotate(event):this._onPanMove(event)}},
{key:"_onPanEnd",value:function(event){event=this.mapState.panEnd().rotateEnd();this.updateViewport(event,null,{isDragging:!1,isPanning:!1,isRotating:!1});return!0}},{key:"_onPanMove",value:function(event){if(!this.dragPan)return!1;event=this.getCenter(event);event=this.mapState.pan({pos:event});this.updateViewport(event,NO_TRANSITION_PROPS,{isPanning:!0});return!0}},{key:"_onPanRotate",value:function(event){if(!this.dragRotate)return!1;var deltaX=event.deltaX,deltaY=event.deltaY;event=this.getCenter(event);
event=(0,_slicedToArray2["default"])(event,2)[1];var startY=event-deltaY,_this$mapState$getVie=this.mapState.getViewportProps(),width=_this$mapState$getVie.width;_this$mapState$getVie=_this$mapState$getVie.height;var deltaScaleY=0;0<deltaY?5<Math.abs(_this$mapState$getVie-startY)&&(deltaScaleY=deltaY/(startY-_this$mapState$getVie)*1.2):0>deltaY&&5<startY&&(deltaScaleY=1-event/startY);deltaScaleY=Math.min(1,Math.max(-1,deltaScaleY));deltaX=this.mapState.rotate({deltaScaleX:deltaX/width,deltaScaleY:deltaScaleY});
this.updateViewport(deltaX,NO_TRANSITION_PROPS,{isRotating:!0});return!0}},{key:"_onWheel",value:function(event){if(!this.scrollZoom)return!1;event.preventDefault();var pos=this.getCenter(event);event=event.delta;var scale=2/(1+Math.exp(-Math.abs(.01*event)));0>event&&0!==scale&&(scale=1/scale);pos=this.mapState.zoom({pos:pos,scale:scale});this.updateViewport(pos,NO_TRANSITION_PROPS,{isZooming:!0});this._onWheelEnd();return!0}},{key:"_onWheelEnd",value:function(){this.setState({isZooming:!1})}},{key:"_onPinchStart",
value:function(event){var pos=this.getCenter(event);pos=this.mapState.zoomStart({pos:pos}).rotateStart({pos:pos});this._state.startPinchRotation=event.rotation;this.updateViewport(pos,NO_TRANSITION_PROPS,{isDragging:!0});return!0}},{key:"_onPinch",value:function(event){if(!this.touchZoom&&!this.touchRotate)return!1;var newMapState=this.mapState;if(this.touchZoom){var scale=event.scale,pos=this.getCenter(event);newMapState=newMapState.zoom({pos:pos,scale:scale})}this.touchRotate&&(newMapState=newMapState.rotate({deltaScaleX:-(event.rotation-
this._state.startPinchRotation)/180}));this.updateViewport(newMapState,NO_TRANSITION_PROPS,{isDragging:!0,isPanning:this.touchZoom,isZooming:this.touchZoom,isRotating:this.touchRotate});return!0}},{key:"_onPinchEnd",value:function(event){event=this.mapState.zoomEnd().rotateEnd();this._state.startPinchRotation=0;this.updateViewport(event,null,{isDragging:!1,isPanning:!1,isZooming:!1,isRotating:!1});return!0}},{key:"_onDoubleTap",value:function(event){if(!this.doubleClickZoom)return!1;var pos=this.getCenter(event);
event=this.isFunctionKeyPressed(event);event=this.mapState.zoom({pos:pos,scale:event?.5:2});this.updateViewport(event,Object.assign({},LINEAR_TRANSITION_PROPS,{transitionInterpolator:new _transition.LinearInterpolator({around:pos})}),{isZooming:!0});return!0}},{key:"_onKeyDown",value:function(event){if(!this.keyboard)return!1;var funcKey=this.isFunctionKeyPressed(event),mapStateProps=this.mapStateProps;switch(event.srcEvent.keyCode){case 189:event=funcKey?this.getMapState({zoom:mapStateProps.zoom-
2}):this.getMapState({zoom:mapStateProps.zoom-1});break;case 187:event=funcKey?this.getMapState({zoom:mapStateProps.zoom+2}):this.getMapState({zoom:mapStateProps.zoom+1});break;case 37:event=funcKey?this.getMapState({bearing:mapStateProps.bearing-15}):this.mapState.pan({pos:[100,0],startPos:[0,0]});break;case 39:event=funcKey?this.getMapState({bearing:mapStateProps.bearing+15}):this.mapState.pan({pos:[-100,0],startPos:[0,0]});break;case 38:event=funcKey?this.getMapState({pitch:mapStateProps.pitch+
10}):this.mapState.pan({pos:[0,100],startPos:[0,0]});break;case 40:event=funcKey?this.getMapState({pitch:mapStateProps.pitch-10}):this.mapState.pan({pos:[0,-100],startPos:[0,0]});break;default:return!1}return this.updateViewport(event,LINEAR_TRANSITION_PROPS)}}]);return MapController}();exports["default"]=require}
//# sourceMappingURL=module$node_modules$react_map_gl$dist$es5$utils$map_controller.js.map
