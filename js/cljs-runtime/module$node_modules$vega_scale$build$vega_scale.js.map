{
"version":3,
"file":"module$node_modules$vega_scale$build$vega_scale.js",
"lineCount":41,
"mappings":"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",
"sources":["node_modules/vega-scale/build/vega-scale.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$vega_scale$build$vega_scale\"] = function(global,require,module,exports) {\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('vega-util'), require('d3-array'), require('d3-scale'), require('d3-interpolate'), require('vega-time')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'vega-util', 'd3-array', 'd3-scale', 'd3-interpolate', 'vega-time'], factory) :\n  (global = global || self, factory(global.vega = {}, global.vega, global.d3, global.d3, global.d3, global.vega));\n}(this, (function (exports, vegaUtil, d3Array, $, $$1, vegaTime) { 'use strict';\n\n  function bandSpace(count, paddingInner, paddingOuter) {\n    var space = count - paddingInner + paddingOuter * 2;\n    return count ? (space > 0 ? space : 1) : 0;\n  }\n\n  const Identity = 'identity';\n\n  const Linear = 'linear';\n  const Log = 'log';\n  const Pow = 'pow';\n  const Sqrt = 'sqrt';\n  const Symlog = 'symlog';\n\n  const Time = 'time';\n  const UTC = 'utc';\n\n  const Sequential = 'sequential';\n  const Diverging = 'diverging';\n\n  const Quantile = 'quantile';\n  const Quantize = 'quantize';\n  const Threshold = 'threshold';\n\n  const Ordinal = 'ordinal';\n  const Point = 'point';\n  const Band = 'band';\n  const BinOrdinal = 'bin-ordinal';\n\n  // categories\n  const Continuous = 'continuous';\n  const Discrete = 'discrete';\n  const Discretizing = 'discretizing';\n  const Interpolating = 'interpolating';\n  const Temporal = 'temporal';\n\n  function invertRange(scale) {\n    return function(_) {\n      var lo = _[0],\n          hi = _[1],\n          t;\n\n      if (hi < lo) {\n        t = lo;\n        lo = hi;\n        hi = t;\n      }\n\n      return [\n        scale.invert(lo),\n        scale.invert(hi)\n      ];\n    };\n  }\n\n  function invertRangeExtent(scale) {\n    return function(_) {\n      var range = scale.range(),\n          lo = _[0],\n          hi = _[1],\n          min = -1, max, t, i, n;\n\n      if (hi < lo) {\n        t = lo;\n        lo = hi;\n        hi = t;\n      }\n\n      for (i=0, n=range.length; i<n; ++i) {\n        if (range[i] >= lo && range[i] <= hi) {\n          if (min < 0) min = i;\n          max = i;\n        }\n      }\n\n      if (min < 0) return undefined;\n\n      lo = scale.invertExtent(range[min]);\n      hi = scale.invertExtent(range[max]);\n\n      return [\n        lo[0] === undefined ? lo[1] : lo[0],\n        hi[1] === undefined ? hi[0] : hi[1]\n      ];\n    };\n  }\n\n  function band() {\n    var scale = $.scaleOrdinal().unknown(undefined),\n        domain = scale.domain,\n        ordinalRange = scale.range,\n        range = [0, 1],\n        step,\n        bandwidth,\n        round = false,\n        paddingInner = 0,\n        paddingOuter = 0,\n        align = 0.5;\n\n    delete scale.unknown;\n\n    function rescale() {\n      var n = domain().length,\n          reverse = range[1] < range[0],\n          start = range[reverse - 0],\n          stop = range[1 - reverse],\n          space = bandSpace(n, paddingInner, paddingOuter);\n\n      step = (stop - start) / (space || 1);\n      if (round) {\n        step = Math.floor(step);\n      }\n      start += (stop - start - step * (n - paddingInner)) * align;\n      bandwidth = step * (1 - paddingInner);\n      if (round) {\n        start = Math.round(start);\n        bandwidth = Math.round(bandwidth);\n      }\n      var values = d3Array.range(n).map(function(i) { return start + step * i; });\n      return ordinalRange(reverse ? values.reverse() : values);\n    }\n\n    scale.domain = function(_) {\n      if (arguments.length) {\n        domain(_);\n        return rescale();\n      } else {\n        return domain();\n      }\n    };\n\n    scale.range = function(_) {\n      if (arguments.length) {\n        range = [+_[0], +_[1]];\n        return rescale();\n      } else {\n        return range.slice();\n      }\n    };\n\n    scale.rangeRound = function(_) {\n      range = [+_[0], +_[1]];\n      round = true;\n      return rescale();\n    };\n\n    scale.bandwidth = function() {\n      return bandwidth;\n    };\n\n    scale.step = function() {\n      return step;\n    };\n\n    scale.round = function(_) {\n      if (arguments.length) {\n        round = !!_;\n        return rescale();\n      } else {\n        return round;\n      }\n    };\n\n    scale.padding = function(_) {\n      if (arguments.length) {\n        paddingOuter = Math.max(0, Math.min(1, _));\n        paddingInner = paddingOuter;\n        return rescale();\n      } else {\n        return paddingInner;\n      }\n    };\n\n    scale.paddingInner = function(_) {\n      if (arguments.length) {\n        paddingInner = Math.max(0, Math.min(1, _));\n        return rescale();\n      } else {\n        return paddingInner;\n      }\n    };\n\n    scale.paddingOuter = function(_) {\n      if (arguments.length) {\n        paddingOuter = Math.max(0, Math.min(1, _));\n        return rescale();\n      } else {\n        return paddingOuter;\n      }\n    };\n\n    scale.align = function(_) {\n      if (arguments.length) {\n        align = Math.max(0, Math.min(1, _));\n        return rescale();\n      } else {\n        return align;\n      }\n    };\n\n    scale.invertRange = function(_) {\n      // bail if range has null or undefined values\n      if (_[0] == null || _[1] == null) return;\n\n      var lo = +_[0],\n          hi = +_[1],\n          reverse = range[1] < range[0],\n          values = reverse ? ordinalRange().reverse() : ordinalRange(),\n          n = values.length - 1, a, b, t;\n\n      // bail if either range endpoint is invalid\n      if (lo !== lo || hi !== hi) return;\n\n      // order range inputs, bail if outside of scale range\n      if (hi < lo) {\n        t = lo;\n        lo = hi;\n        hi = t;\n      }\n      if (hi < values[0] || lo > range[1-reverse]) return;\n\n      // binary search to index into scale range\n      a = Math.max(0, d3Array.bisectRight(values, lo) - 1);\n      b = lo===hi ? a : d3Array.bisectRight(values, hi) - 1;\n\n      // increment index a if lo is within padding gap\n      if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n      if (reverse) {\n        // map + swap\n        t = a;\n        a = n - b;\n        b = n - t;\n      }\n      return (a > b) ? undefined : domain().slice(a, b+1);\n    };\n\n    scale.invert = function(_) {\n      var value = scale.invertRange([_, _]);\n      return value ? value[0] : value;\n    };\n\n    scale.copy = function() {\n      return band()\n          .domain(domain())\n          .range(range)\n          .round(round)\n          .paddingInner(paddingInner)\n          .paddingOuter(paddingOuter)\n          .align(align);\n    };\n\n    return rescale();\n  }\n\n  function pointish(scale) {\n    var copy = scale.copy;\n\n    scale.padding = scale.paddingOuter;\n    delete scale.paddingInner;\n\n    scale.copy = function() {\n      return pointish(copy());\n    };\n\n    return scale;\n  }\n\n  function point() {\n    return pointish(band().paddingInner(1));\n  }\n\n  var map = Array.prototype.map;\n\n  function numbers(_) {\n    return map.call(_, function(x) { return +x; });\n  }\n\n  var slice = Array.prototype.slice;\n\n  function scaleBinOrdinal() {\n    var domain = [],\n        range = [];\n\n    function scale(x) {\n      return x == null || x !== x\n        ? undefined\n        : range[(d3Array.bisect(domain, x) - 1) % range.length];\n    }\n\n    scale.domain = function(_) {\n      if (arguments.length) {\n        domain = numbers(_);\n        return scale;\n      } else {\n        return domain.slice();\n      }\n    };\n\n    scale.range = function(_) {\n      if (arguments.length) {\n        range = slice.call(_);\n        return scale;\n      } else {\n        return range.slice();\n      }\n    };\n\n    scale.tickFormat = function(count, specifier) {\n      return $.tickFormat(domain[0], vegaUtil.peek(domain), count == null ? 10 : count, specifier);\n    };\n\n    scale.copy = function() {\n      return scaleBinOrdinal().domain(scale.domain()).range(scale.range());\n    };\n\n    return scale;\n  }\n\n  // scale registry\n  const scales = {};\n\n  /**\n   * Augment scales with their type and needed inverse methods.\n   */\n  function create(type, constructor, metadata) {\n    const ctr = function scale() {\n      var s = constructor();\n\n      if (!s.invertRange) {\n        s.invertRange = s.invert ? invertRange(s)\n          : s.invertExtent ? invertRangeExtent(s)\n          : undefined;\n      }\n\n      s.type = type;\n      return s;\n    };\n\n    ctr.metadata = vegaUtil.toSet(vegaUtil.array(metadata));\n\n    return ctr;\n  }\n\n  function scale(type, scale, metadata) {\n    if (arguments.length > 1) {\n      scales[type] = create(type, scale, metadata);\n      return this;\n    } else {\n      return isValidScaleType(type) ? scales[type] : undefined;\n    }\n  }\n\n  // identity scale\n  scale(Identity, $.scaleIdentity);\n\n  // continuous scales\n  scale(Linear, $.scaleLinear, Continuous);\n  scale(Log, $.scaleLog, [Continuous, Log]);\n  scale(Pow, $.scalePow, Continuous);\n  scale(Sqrt, $.scaleSqrt, Continuous);\n  scale(Symlog, $.scaleSymlog, Continuous);\n  scale(Time, $.scaleTime, [Continuous, Temporal]);\n  scale(UTC, $.scaleUtc, [Continuous, Temporal]);\n\n  // sequential scales\n  scale(Sequential, $.scaleSequential, [Continuous, Interpolating]); // backwards compat\n  scale(`${Sequential}-${Linear}`, $.scaleSequential, [Continuous, Interpolating]);\n  scale(`${Sequential}-${Log}`, $.scaleSequentialLog, [Continuous, Interpolating, Log]);\n  scale(`${Sequential}-${Pow}`, $.scaleSequentialPow, [Continuous, Interpolating]);\n  scale(`${Sequential}-${Sqrt}`, $.scaleSequentialSqrt, [Continuous, Interpolating]);\n  scale(`${Sequential}-${Symlog}`, $.scaleSequentialSymlog, [Continuous, Interpolating]);\n\n  // diverging scales\n  scale(`${Diverging}-${Linear}`, $.scaleDiverging, [Continuous, Interpolating]);\n  scale(`${Diverging}-${Log}`, $.scaleDivergingLog, [Continuous, Interpolating, Log]);\n  scale(`${Diverging}-${Pow}`, $.scaleDivergingPow, [Continuous, Interpolating]);\n  scale(`${Diverging}-${Sqrt}`, $.scaleDivergingSqrt, [Continuous, Interpolating]);\n  scale(`${Diverging}-${Symlog}`, $.scaleDivergingSymlog, [Continuous, Interpolating]);\n\n  // discretizing scales\n  scale(Quantile, $.scaleQuantile, [Discretizing, Quantile]);\n  scale(Quantize, $.scaleQuantize, Discretizing);\n  scale(Threshold, $.scaleThreshold, Discretizing);\n\n  // discrete scales\n  scale(BinOrdinal, scaleBinOrdinal, [Discrete, Discretizing]);\n  scale(Ordinal, $.scaleOrdinal, Discrete);\n  scale(Band, band, Discrete);\n  scale(Point, point, Discrete);\n\n  function isValidScaleType(type) {\n    return vegaUtil.hasOwnProperty(scales, type);\n  }\n\n  function hasType(key, type) {\n    const s = scales[key];\n    return s && s.metadata[type];\n  }\n\n  function isContinuous(key) {\n    return hasType(key, Continuous);\n  }\n\n  function isDiscrete(key) {\n    return hasType(key, Discrete);\n  }\n\n  function isDiscretizing(key) {\n    return hasType(key, Discretizing);\n  }\n\n  function isLogarithmic(key) {\n    return hasType(key, Log);\n  }\n\n  function isTemporal(key) {\n    return hasType(key, Temporal);\n  }\n\n  function isInterpolating(key) {\n    return hasType(key, Interpolating);\n  }\n\n  function isQuantile(key) {\n    return hasType(key, Quantile);\n  }\n\n  const scaleProps = ['clamp', 'base', 'constant', 'exponent'];\n\n  function interpolateRange(interpolator, range) {\n    var start = range[0],\n        span = vegaUtil.peek(range) - start;\n    return function(i) { return interpolator(start + i * span); };\n  }\n\n  function interpolateColors(colors, type, gamma) {\n    return $$1.piecewise(interpolate(type || 'rgb', gamma), colors);\n  }\n\n  function quantizeInterpolator(interpolator, count) {\n    var samples = new Array(count),\n        n = count + 1;\n    for (var i = 0; i < count;) samples[i] = interpolator(++i / n);\n    return samples;\n  }\n\n  function scaleCopy(scale) {\n    const t = scale.type,\n          s = scale.copy();\n    s.type = t;\n    return s;\n  }\n\n  function scaleFraction(scale$1, min, max) {\n    var delta = max - min, i, t, s;\n\n    if (!delta || !Number.isFinite(delta)) {\n      return vegaUtil.constant(0.5);\n    } else {\n      i = (t = scale$1.type).indexOf('-');\n      t = i < 0 ? t : t.slice(i + 1);\n      s = scale(t)().domain([min, max]).range([0, 1]);\n      scaleProps.forEach(m => scale$1[m] ? s[m](scale$1[m]()) : 0);\n      return s;\n    }\n  }\n\n  function interpolate(type, gamma) {\n    var interp = $$1[method(type)];\n    return (gamma != null && interp && interp.gamma)\n      ? interp.gamma(gamma)\n      : interp;\n  }\n\n  function method(type) {\n    return 'interpolate' + type.toLowerCase()\n      .split('-')\n      .map(function(s) { return s[0].toUpperCase() + s.slice(1); })\n      .join('');\n  }\n\n  const continuous = {\n    blues: 'cfe1f2bed8eca8cee58fc1de74b2d75ba3cf4592c63181bd206fb2125ca40a4a90',\n    greens: 'd3eecdc0e6baabdda594d3917bc77d60ba6c46ab5e329a512089430e7735036429',\n    greys: 'e2e2e2d4d4d4c4c4c4b1b1b19d9d9d8888887575756262624d4d4d3535351e1e1e',\n    oranges: 'fdd8b3fdc998fdb87bfda55efc9244f87f2cf06b18e4580bd14904b93d029f3303',\n    purples: 'e2e1efd4d4e8c4c5e0b4b3d6a3a0cc928ec3827cb97566ae684ea25c3696501f8c',\n    reds: 'fdc9b4fcb49afc9e80fc8767fa7051f6573fec3f2fdc2a25c81b1db21218970b13',\n\n    blueGreen: 'd5efedc1e8e0a7ddd18bd2be70c6a958ba9144ad77319c5d2089460e7736036429',\n    bluePurple: 'ccddecbad0e4a8c2dd9ab0d4919cc98d85be8b6db28a55a6873c99822287730f71',\n    greenBlue: 'd3eecec5e8c3b1e1bb9bd8bb82cec269c2ca51b2cd3c9fc7288abd1675b10b60a1',\n    orangeRed: 'fddcaffdcf9bfdc18afdad77fb9562f67d53ee6545e24932d32d1ebf130da70403',\n    purpleBlue: 'dbdaebc8cee4b1c3de97b7d87bacd15b9fc93a90c01e7fb70b70ab056199045281',\n    purpleBlueGreen: 'dbd8eac8cee4b0c3de93b7d872acd1549fc83892bb1c88a3097f8702736b016353',\n    purpleRed: 'dcc9e2d3b3d7ce9eccd186c0da6bb2e14da0e23189d91e6fc61159ab07498f023a',\n    redPurple: 'fccfccfcbec0faa9b8f98faff571a5ec539ddb3695c41b8aa908808d0179700174',\n    yellowGreen: 'e4f4acd1eca0b9e2949ed68880c97c62bb6e47aa5e3297502083440e723b036034',\n    yellowOrangeBrown: 'feeaa1fedd84fecc63feb746fca031f68921eb7215db5e0bc54c05ab3d038f3204',\n    yellowOrangeRed: 'fee087fed16ffebd59fea849fd903efc7335f9522bee3423de1b20ca0b22af0225',\n\n    blueOrange: '134b852f78b35da2cb9dcae1d2e5eff2f0ebfce0bafbbf74e8932fc5690d994a07',\n    brownBlueGreen: '704108a0651ac79548e3c78af3e6c6eef1eac9e9e48ed1c74da79e187a72025147',\n    purpleGreen: '5b1667834792a67fb6c9aed3e6d6e8eff0efd9efd5aedda971bb75368e490e5e29',\n    purpleOrange: '4114696647968f83b7b9b4d6dadbebf3eeeafce0bafbbf74e8932fc5690d994a07',\n    redBlue: '8c0d25bf363adf745ef4ae91fbdbc9f2efeed2e5ef9dcae15da2cb2f78b3134b85',\n    redGrey: '8c0d25bf363adf745ef4ae91fcdccbfaf4f1e2e2e2c0c0c0969696646464343434',\n    yellowGreenBlue: 'eff9bddbf1b4bde5b594d5b969c5be45b4c22c9ec02182b82163aa23479c1c3185',\n    redYellowBlue: 'a50026d4322cf16e43fcac64fedd90faf8c1dcf1ecabd6e875abd04a74b4313695',\n    redYellowGreen: 'a50026d4322cf16e43fcac63fedd8df9f7aed7ee8ea4d86e64bc6122964f006837',\n    pinkYellowGreen: '8e0152c0267edd72adf0b3d6faddedf5f3efe1f2cab6de8780bb474f9125276419',\n    spectral: '9e0142d13c4bf0704afcac63fedd8dfbf8b0e0f3a1a9dda269bda94288b55e4fa2',\n\n    viridis: '440154470e61481a6c482575472f7d443a834144873d4e8a39568c35608d31688e2d708e2a788e27818e23888e21918d1f988b1fa08822a8842ab07f35b77943bf7154c56866cc5d7ad1518fd744a5db36bcdf27d2e21be9e51afde725',\n    magma: '0000040404130b0924150e3720114b2c11603b0f704a107957157e651a80721f817f24828c29819a2e80a8327db6377ac43c75d1426fde4968e95462f1605df76f5cfa7f5efc8f65fe9f6dfeaf78febf84fece91fddea0fcedaffcfdbf',\n    inferno: '0000040403130c0826170c3b240c4f330a5f420a68500d6c5d126e6b176e781c6d86216b932667a12b62ae305cbb3755c73e4cd24644dd513ae65c30ed6925f3771af8850ffb9506fca50afcb519fac62df6d645f2e661f3f484fcffa4',\n    plasma: '0d088723069033059742039d5002a25d01a66a00a87801a88405a7900da49c179ea72198b12a90ba3488c33d80cb4779d35171da5a69e16462e76e5bed7953f2834cf68f44fa9a3dfca636fdb32ffec029fcce25f9dc24f5ea27f0f921',\n\n    rainbow: '6e40aa883eb1a43db3bf3cafd83fa4ee4395fe4b83ff576eff6659ff7847ff8c38f3a130e2b72fcfcc36bee044aff05b8ff4576ff65b52f6673af27828ea8d1ddfa319d0b81cbecb23abd82f96e03d82e14c6edb5a5dd0664dbf6e40aa',\n    sinebow: 'ff4040fc582af47218e78d0bd5a703bfbf00a7d5038de70b72f41858fc2a40ff402afc5818f4720be78d03d5a700bfbf03a7d50b8de71872f42a58fc4040ff582afc7218f48d0be7a703d5bf00bfd503a7e70b8df41872fc2a58ff4040',\n\n    browns: 'eedbbdecca96e9b97ae4a865dc9856d18954c7784cc0673fb85536ad44339f3632',\n    tealBlues: 'bce4d89dd3d181c3cb65b3c245a2b9368fae347da0306a932c5985',\n    teals: 'bbdfdfa2d4d58ac9c975bcbb61b0af4da5a43799982b8b8c1e7f7f127273006667',\n    warmGreys: 'dcd4d0cec5c1c0b8b4b3aaa7a59c9998908c8b827f7e7673726866665c5a59504e',\n\n    goldGreen: 'f4d166d5ca60b6c35c98bb597cb25760a6564b9c533f8f4f33834a257740146c36',\n    goldOrange: 'f4d166f8be5cf8aa4cf5983bf3852aef701be2621fd65322c54923b142239e3a26',\n    goldRed: 'f4d166f6be59f9aa51fc964ef6834bee734ae56249db5247cf4244c43141b71d3e',\n\n    lightGreyRed: 'efe9e6e1dad7d5cbc8c8bdb9bbaea9cd967ddc7b43e15f19df4011dc000b',\n    lightGreyTeal: 'e4eaead6dcddc8ced2b7c2c7a6b4bc64b0bf22a6c32295c11f85be1876bc',\n    lightMulti: 'e0f1f2c4e9d0b0de9fd0e181f6e072f6c053f3993ef77440ef4a3c',\n    lightOrange: 'f2e7daf7d5baf9c499fab184fa9c73f68967ef7860e8645bde515bd43d5b',\n    lightTealBlue: 'e3e9e0c0dccf9aceca7abfc859afc0389fb9328dad2f7ca0276b95255988',\n\n    darkBlue: '3232322d46681a5c930074af008cbf05a7ce25c0dd38daed50f3faffffff',\n    darkGold: '3c3c3c584b37725e348c7631ae8b2bcfa424ecc31ef9de30fff184ffffff',\n    darkGreen: '3a3a3a215748006f4d048942489e4276b340a6c63dd2d836ffeb2cffffaa',\n    darkMulti: '3737371f5287197d8c29a86995ce3fffe800ffffff',\n    darkRed: '3434347036339e3c38cc4037e75d1eec8620eeab29f0ce32ffeb2c'\n  };\n\n  const discrete = {\n    category10: '1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf',\n    category20: '1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5',\n    category20b: '393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6',\n    category20c: '3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9',\n    tableau10: '4c78a8f58518e4575672b7b254a24beeca3bb279a2ff9da69d755dbab0ac',\n    tableau20: '4c78a89ecae9f58518ffbf7954a24b88d27ab79a20f2cf5b43989483bcb6e45756ff9d9879706ebab0acd67195fcbfd2b279a2d6a5c99e765fd8b5a5',\n    accent: '7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666',\n    dark2: '1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666',\n    paired: 'a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928',\n    pastel1: 'fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2',\n    pastel2: 'b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc',\n    set1: 'e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999',\n    set2: '66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3',\n    set3: '8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f'\n  };\n\n  function colors(palette) {\n    var n = palette.length / 6 | 0, c = new Array(n), i = 0;\n    while (i < n) c[i] = '#' + palette.slice(i * 6, ++i * 6);\n    return c;\n  }\n\n  function apply(_, f) {\n    for (let k in _) scheme(k, f(_[k]));\n  }\n\n  const schemes = {};\n  apply(discrete, colors);\n  apply(continuous, _ => interpolateColors(colors(_)));\n\n  function scheme(name, scheme) {\n    name = name && name.toLowerCase();\n    if (arguments.length > 1) {\n      schemes[name] = scheme;\n      return this;\n    } else {\n      return schemes[name];\n    }\n  }\n\n  var SymbolLegend  = 'symbol';\n  var DiscreteLegend = 'discrete';\n  var GradientLegend = 'gradient';\n\n  const defaultFormatter = value => vegaUtil.isArray(value)\n    ? value.map(v => String(v))\n    : String(value);\n\n  const ascending = (a, b) => a[1] - b[1];\n  const descending = (a, b) => b[1] - a[1];\n\n  /**\n   * Determine the tick count or interval function.\n   * @param {Scale} scale - The scale for which to generate tick values.\n   * @param {*} count - The desired tick count or interval specifier.\n   * @param {number} minStep - The desired minimum step between tick values.\n   * @return {*} - The tick count or interval function.\n   */\n  function tickCount(scale, count, minStep) {\n    var step;\n\n    if (vegaUtil.isNumber(count)) {\n      if (scale.bins) {\n        count = Math.max(count, scale.bins.length);\n      }\n      if (minStep != null) {\n        count = Math.min(\n          count,\n          Math.floor((vegaUtil.span(scale.domain()) / minStep) || 1)\n        );\n      }\n    }\n\n    if (vegaUtil.isObject(count)) {\n      step = count.step;\n      count = count.interval;\n    }\n\n    if (vegaUtil.isString(count)) {\n      count = scale.type === Time ? vegaTime.timeInterval(count)\n        : scale.type == UTC ? vegaTime.utcInterval(count)\n        : vegaUtil.error('Only time and utc scales accept interval strings.');\n      if (step) count = count.every(step);\n    }\n\n    return count;\n  }\n\n  /**\n   * Filter a set of candidate tick values, ensuring that only tick values\n   * that lie within the scale range are included.\n   * @param {Scale} scale - The scale for which to generate tick values.\n   * @param {Array<*>} ticks - The candidate tick values.\n   * @param {*} count - The tick count or interval function.\n   * @return {Array<*>} - The filtered tick values.\n   */\n  function validTicks(scale, ticks, count) {\n    let range = scale.range(),\n        lo = range[0],\n        hi = vegaUtil.peek(range),\n        cmp = ascending;\n\n    if (lo > hi) {\n      range = hi;\n      hi = lo;\n      lo = range;\n      cmp = descending;\n    }\n\n    lo = Math.floor(lo);\n    hi = Math.ceil(hi);\n\n    // filter ticks to valid values within the range\n    // additionally sort ticks in range order (#2579)\n    ticks = ticks.map(v => [v, scale(v)])\n      .filter(_ => lo <= _[1] && _[1] <= hi)\n      .sort(cmp)\n      .map(_ => _[0]);\n\n    if (count > 0 && ticks.length > 1) {\n      const endpoints = [ticks[0], vegaUtil.peek(ticks)];\n      while (ticks.length > count && ticks.length >= 3) {\n        ticks = ticks.filter((_, i) => !(i % 2));\n      }\n      if (ticks.length < 3) {\n        ticks = endpoints;\n      }\n    }\n\n    return ticks;\n  }\n\n  /**\n   * Generate tick values for the given scale and approximate tick count or\n   * interval value. If the scale has a 'ticks' method, it will be used to\n   * generate the ticks, with the count argument passed as a parameter. If the\n   * scale lacks a 'ticks' method, the full scale domain will be returned.\n   * @param {Scale} scale - The scale for which to generate tick values.\n   * @param {*} [count] - The approximate number of desired ticks.\n   * @return {Array<*>} - The generated tick values.\n   */\n  function tickValues(scale, count) {\n    return scale.bins ? validTicks(scale, scale.bins)\n      : scale.ticks ? scale.ticks(count)\n      : scale.domain();\n  }\n\n  /**\n   * Generate a label format function for a scale. If the scale has a\n   * 'tickFormat' method, it will be used to generate the formatter, with the\n   * count and specifier arguments passed as parameters. If the scale lacks a\n   * 'tickFormat' method, the returned formatter performs simple string coercion.\n   * If the input scale is a logarithmic scale and the format specifier does not\n   * indicate a desired decimal precision, a special variable precision formatter\n   * that automatically trims trailing zeroes will be generated.\n   * @param {Scale} scale - The scale for which to generate the label formatter.\n   * @param {*} [count] - The approximate number of desired ticks.\n   * @param {string} [specifier] - The format specifier. Must be a legal d3\n   *   specifier string (see https://github.com/d3/d3-format#formatSpecifier) or\n   *   time multi-format specifier object.\n   * @return {function(*):string} - The generated label formatter.\n   */\n  function tickFormat(locale, scale, count, specifier, formatType, noSkip) {\n    var type = scale.type;\n    let format = defaultFormatter;\n\n    if (type === Time || formatType === Time) {\n      format = locale.timeFormat(specifier);\n    }\n    else if (type === UTC || formatType === UTC) {\n      format = locale.utcFormat(specifier);\n    }\n    else if (isLogarithmic(type)) {\n      const varfmt = locale.formatFloat(specifier);\n      if (noSkip || scale.bins) {\n        format = varfmt;\n      } else {\n        const test = tickLog(scale, count, false);\n        format = _ => test(_) ? varfmt(_) : '';\n      }\n    }\n    else if (scale.tickFormat) {\n      // if d3 scale has tickFormat, it must be continuous\n      const d = scale.domain();\n      format = locale.formatSpan(d[0], d[d.length - 1], count, specifier);\n    }\n    else if (specifier) {\n      format = locale.format(specifier);\n    }\n\n    return format;\n  }\n\n  function tickLog(scale, count, values) {\n    const ticks = tickValues(scale, count),\n          base = scale.base(),\n          logb = Math.log(base),\n          k = Math.max(1, base * count / ticks.length);\n\n    // apply d3-scale's log format filter criteria\n    const test = d => {\n      let i = d / Math.pow(base, Math.round(Math.log(d) / logb));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k;\n    };\n\n    return values ? ticks.filter(test) : test;\n  }\n\n  const symbols = {\n    [Quantile]:  'quantiles',\n    [Quantize]:  'thresholds',\n    [Threshold]: 'domain'\n  };\n\n  const formats = {\n    [Quantile]:  'quantiles',\n    [Quantize]:  'domain'\n  };\n\n  function labelValues(scale, count) {\n    return scale.bins ? binValues(scale.bins)\n      : scale.type === Log ? tickLog(scale, count, true)\n      : symbols[scale.type] ? thresholdValues(scale[symbols[scale.type]]())\n      : tickValues(scale, count);\n  }\n\n  function thresholdFormat(locale, scale, specifier) {\n    var _ = scale[formats[scale.type]](),\n        n = _.length,\n        d = n > 1 ? _[1] - _[0] : _[0], i;\n\n    for (i=1; i<n; ++i) {\n      d = Math.min(d, _[i] - _[i-1]);\n    }\n\n    // tickCount = 3 ticks times 10 for increased resolution\n    return locale.formatSpan(0, d, 3 * 10, specifier);\n  }\n\n  function thresholdValues(thresholds) {\n    const values = [-Infinity].concat(thresholds);\n    values.max = +Infinity;\n    return values;\n  }\n\n  function binValues(bins) {\n    const values = bins.slice(0, -1);\n    values.max = vegaUtil.peek(bins);\n    return values;\n  }\n\n  function isDiscreteRange(scale) {\n    return symbols[scale.type] || scale.bins;\n  }\n\n  function labelFormat(locale, scale, count, type, specifier, formatType, noSkip) {\n    const format = formats[scale.type] && formatType !== Time && formatType !== UTC\n      ? thresholdFormat(locale, scale, specifier)\n      : tickFormat(locale, scale, count, specifier, formatType, noSkip);\n\n    return type === SymbolLegend && isDiscreteRange(scale) ? formatRange(format)\n      : type === DiscreteLegend ? formatDiscrete(format)\n      : formatPoint(format);\n  }\n\n  function formatRange(format) {\n    return (value, index, array) => {\n      var limit = get(array[index + 1], get(array.max, +Infinity)),\n          lo = formatValue(value, format),\n          hi = formatValue(limit, format);\n      return lo && hi ? lo + ' \\u2013 ' + hi : hi ? '< ' + hi : '\\u2265 ' + lo;\n    };\n  }\n\n  function get(value, dflt) {\n    return value != null ? value : dflt;\n  }\n\n  function formatDiscrete(format) {\n    return (value, index) => index ? format(value) : null;\n  }\n\n  function formatPoint(format) {\n    return value => format(value);\n  }\n\n  function formatValue(value, format) {\n    return Number.isFinite(value) ? format(value) : null;\n  }\n\n  function labelFraction(scale) {\n    var domain = scale.domain(),\n        count = domain.length - 1,\n        lo = +domain[0],\n        hi = +vegaUtil.peek(domain),\n        span = hi - lo;\n\n    if (scale.type === Threshold) {\n      const adjust = count ? span / count : 0.1;\n      lo -= adjust;\n      hi += adjust;\n      span = hi - lo;\n    }\n\n    return value => (value - lo) / span;\n  }\n\n  function format(locale, scale, specifier, formatType) {\n    const type = formatType || scale.type;\n\n    // replace abbreviated time specifiers to improve screen reader experience\n    if (vegaUtil.isString(specifier) && isTemporal(type)) {\n      specifier = specifier.replace(/%a/g, '%A').replace(/%b/g, '%B');\n    }\n\n    return !specifier && type === Time  ? locale.timeFormat('%A, %d %B %Y, %X')\n      : !specifier && type === UTC ? locale.utcFormat('%A, %d %B %Y, %X UTC')\n      : labelFormat(locale, scale, 5, null, specifier, formatType, true);\n  }\n\n  function domainCaption(locale, scale, opt) {\n    opt = opt || {};\n    const max = Math.max(3, opt.maxlen || 7),\n          fmt = format(locale, scale, opt.format, opt.formatType);\n\n    // if scale breaks domain into bins, describe boundaries\n    if (isDiscretizing(scale.type)) {\n      const v = labelValues(scale).slice(1).map(fmt),\n            n = v.length;\n      return `${n} boundar${n === 1 ? 'y' : 'ies'}: ${v.join(', ')}`;\n    }\n\n    // if scale domain is discrete, list values\n    else if (isDiscrete(scale.type)) {\n      const d = scale.domain(),\n            n = d.length,\n            v = n > max\n              ? d.slice(0, max - 2).map(fmt).join(', ')\n                + ', ending with ' + d.slice(-1).map(fmt)\n              : d.map(fmt).join(', ');\n      return `${n} value${n === 1 ? '' : 's'}: ${v}`;\n    }\n\n    // if scale domain is continuous, describe value range\n    else {\n      const d = scale.domain();\n      return `values from ${fmt(d[0])} to ${fmt(vegaUtil.peek(d))}`;\n    }\n  }\n\n  Object.defineProperty(exports, 'scaleImplicit', {\n    enumerable: true,\n    get: function () {\n      return $.scaleImplicit;\n    }\n  });\n  exports.Band = Band;\n  exports.BinOrdinal = BinOrdinal;\n  exports.DiscreteLegend = DiscreteLegend;\n  exports.Diverging = Diverging;\n  exports.GradientLegend = GradientLegend;\n  exports.Identity = Identity;\n  exports.Linear = Linear;\n  exports.Log = Log;\n  exports.Ordinal = Ordinal;\n  exports.Point = Point;\n  exports.Pow = Pow;\n  exports.Quantile = Quantile;\n  exports.Quantize = Quantize;\n  exports.Sequential = Sequential;\n  exports.Sqrt = Sqrt;\n  exports.SymbolLegend = SymbolLegend;\n  exports.Symlog = Symlog;\n  exports.Threshold = Threshold;\n  exports.Time = Time;\n  exports.UTC = UTC;\n  exports.bandSpace = bandSpace;\n  exports.domainCaption = domainCaption;\n  exports.interpolate = interpolate;\n  exports.interpolateColors = interpolateColors;\n  exports.interpolateRange = interpolateRange;\n  exports.isContinuous = isContinuous;\n  exports.isDiscrete = isDiscrete;\n  exports.isDiscretizing = isDiscretizing;\n  exports.isInterpolating = isInterpolating;\n  exports.isLogarithmic = isLogarithmic;\n  exports.isQuantile = isQuantile;\n  exports.isTemporal = isTemporal;\n  exports.isValidScaleType = isValidScaleType;\n  exports.labelFormat = labelFormat;\n  exports.labelFraction = labelFraction;\n  exports.labelValues = labelValues;\n  exports.quantizeInterpolator = quantizeInterpolator;\n  exports.scale = scale;\n  exports.scaleCopy = scaleCopy;\n  exports.scaleFraction = scaleFraction;\n  exports.scheme = scheme;\n  exports.tickCount = tickCount;\n  exports.tickFormat = tickFormat;\n  exports.tickValues = tickValues;\n  exports.validTicks = validTicks;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n};"],
"names":["shadow$provide","global","require","module","exports","factory","define","amd","self","vega","d3","vegaUtil","d3Array","$","$$1","vegaTime","bandSpace","count","paddingInner","paddingOuter","space","invertRange","scale","_","lo","hi","t","invert","invertRangeExtent","range","min","n","i","length","max","invertExtent","undefined","band","rescale","domain","reverse","start","stop","step","round","Math","floor","align","bandwidth","values","map","ordinalRange","scaleOrdinal","unknown","scale.domain","arguments","scale.range","slice","rangeRound","scale.rangeRound","scale.bandwidth","scale.step","scale.round","padding","scale.padding","scale.paddingInner","scale.paddingOuter","scale.align","scale.invertRange","a","bisectRight","b","scale.invert","value","copy","scale.copy","pointish","numbers","call","x","scaleBinOrdinal","bisect","tickFormat","scale.tickFormat","specifier","peek","create","type","constructor","metadata","ctr","s","toSet","array","scales","isValidScaleType","hasOwnProperty","hasType","key","isDiscrete","Discrete","isDiscretizing","Discretizing","isLogarithmic","Log","isTemporal","Temporal","interpolateColors","colors","gamma","piecewise","interpolate","interp","method","toLowerCase","split","toUpperCase","join","palette","c","Array","apply","f","k","scheme","name","schemes","validTicks","ticks","cmp","ascending","descending","ceil","v","filter","sort","endpoints","tickValues","bins","locale","formatType","noSkip","format","defaultFormatter","Time","timeFormat","UTC","utcFormat","varfmt","formatFloat","test","tickLog","d","formatSpan","base","logb","log","pow","labelValues","Infinity","concat","thresholds","labelFormat","formats","SymbolLegend","symbols","formatRange","DiscreteLegend","formatDiscrete","formatPoint","index","dflt","Number","isFinite","limit","prototype","Identity","scaleIdentity","Linear","scaleLinear","Continuous","scaleLog","Pow","scalePow","Sqrt","scaleSqrt","Symlog","scaleSymlog","scaleTime","scaleUtc","Sequential","scaleSequential","Interpolating","scaleSequentialLog","scaleSequentialPow","scaleSequentialSqrt","scaleSequentialSymlog","scaleDiverging","scaleDivergingLog","scaleDivergingPow","scaleDivergingSqrt","scaleDivergingSymlog","Quantile","scaleQuantile","Quantize","scaleQuantize","Threshold","scaleThreshold","BinOrdinal","Ordinal","Band","Point","point","scaleProps","discrete","category10","category20","category20b","category20c","tableau10","tableau20","accent","dark2","paired","pastel1","pastel2","set1","set2","set3","continuous","blues","greens","greys","oranges","purples","reds","blueGreen","bluePurple","greenBlue","orangeRed","purpleBlue","purpleBlueGreen","purpleRed","redPurple","yellowGreen","yellowOrangeBrown","yellowOrangeRed","blueOrange","brownBlueGreen","purpleGreen","purpleOrange","redBlue","redGrey","yellowGreenBlue","redYellowBlue","redYellowGreen","pinkYellowGreen","spectral","viridis","magma","inferno","plasma","rainbow","sinebow","browns","tealBlues","teals","warmGreys","goldGreen","goldOrange","goldRed","lightGreyRed","lightGreyTeal","lightMulti","lightOrange","lightTealBlue","darkBlue","darkGold","darkGreen","darkMulti","darkRed","isArray","String","Object","defineProperty","enumerable","get","scaleImplicit","Diverging","GradientLegend","domainCaption","opt","maxlen","isString","replace","fmt","interpolateRange","interpolator","span","isContinuous","isInterpolating","isQuantile","labelFraction","adjust","quantizeInterpolator","samples","scaleCopy","scaleFraction","scale$1","delta","indexOf","forEach","m","constant","tickCount","minStep","isNumber","isObject","interval","timeInterval","utcInterval","error","every"]
}
