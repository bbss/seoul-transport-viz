{
"version":3,
"file":"module$node_modules$$luma_DOT_gl$gltools$dist$es5$polyfill$polyfill_context.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/@luma_DOT_gl/gltools/dist/es5/polyfill/polyfill-context.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$luma_DOT_gl$gltools$dist$es5$polyfill$polyfill_context\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = polyfillContext;\n\nvar _polyfillVertexArrayObject = require(\"./polyfill-vertex-array-object\");\n\nvar _utils = require(\"../utils\");\n\nvar _polyfillTable = require(\"./polyfill-table\");\n\nfunction polyfillContext(gl) {\n  gl.luma = gl.luma || {};\n\n  if (!gl.luma.polyfilled) {\n    (0, _polyfillVertexArrayObject.polyfillVertexArrayObject)(gl);\n    initializeExtensions(gl);\n    installPolyfills(gl, _polyfillTable.WEBGL2_CONTEXT_POLYFILLS);\n    installOverrides(gl, {\n      target: gl.luma,\n      target2: gl\n    });\n    gl.luma.polyfilled = true;\n  }\n\n  return gl;\n}\n\nvar global_ = typeof global !== 'undefined' ? global : window;\nglobal_.polyfillContext = polyfillContext;\n\nfunction initializeExtensions(gl) {\n  gl.luma.extensions = {};\n  var EXTENSIONS = gl.getSupportedExtensions() || [];\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = EXTENSIONS[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var extension = _step.value;\n      gl.luma[extension] = gl.getExtension(extension);\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n        _iterator[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n}\n\nfunction installOverrides(gl, _ref) {\n  var target = _ref.target,\n      target2 = _ref.target2;\n  Object.keys(_polyfillTable.WEBGL2_CONTEXT_OVERRIDES).forEach(function (key) {\n    if (typeof _polyfillTable.WEBGL2_CONTEXT_OVERRIDES[key] === 'function') {\n      var originalFunc = gl[key] ? gl[key].bind(gl) : function () {};\n\n      var polyfill = _polyfillTable.WEBGL2_CONTEXT_OVERRIDES[key].bind(null, gl, originalFunc);\n\n      target[key] = polyfill;\n      target2[key] = polyfill;\n    }\n  });\n}\n\nfunction installPolyfills(gl, polyfills) {\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = Object.getOwnPropertyNames(polyfills)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var extension = _step2.value;\n\n      if (extension !== 'overrides') {\n        polyfillExtension(gl, {\n          extension: extension,\n          target: gl.luma,\n          target2: gl\n        });\n      }\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n        _iterator2[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n}\n\nfunction polyfillExtension(gl, _ref2) {\n  var extension = _ref2.extension,\n      target = _ref2.target,\n      target2 = _ref2.target2;\n  var defaults = _polyfillTable.WEBGL2_CONTEXT_POLYFILLS[extension];\n  (0, _utils.assert)(defaults);\n  var _defaults$meta = defaults.meta,\n      meta = _defaults$meta === void 0 ? {} : _defaults$meta;\n  var _meta$suffix = meta.suffix,\n      suffix = _meta$suffix === void 0 ? '' : _meta$suffix;\n  var ext = gl.getExtension(extension);\n\n  var _loop = function _loop() {\n    var key = _Object$keys[_i];\n    var extKey = \"\".concat(key).concat(suffix);\n    var polyfill = null;\n\n    if (key === 'meta') {} else if (typeof gl[key] === 'function') {} else if (ext && typeof ext[extKey] === 'function') {\n      polyfill = function polyfill() {\n        return ext[extKey].apply(ext, arguments);\n      };\n    } else if (typeof defaults[key] === 'function') {\n      polyfill = defaults[key].bind(target);\n    }\n\n    if (polyfill) {\n      target[key] = polyfill;\n      target2[key] = polyfill;\n    }\n  };\n\n  for (var _i = 0, _Object$keys = Object.keys(defaults); _i < _Object$keys.length; _i++) {\n    _loop();\n  }\n}\n//# sourceMappingURL=polyfill-context.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","polyfillContext","gl","luma","polyfilled","_polyfillVertexArrayObject","polyfillVertexArrayObject","extensions","EXTENSIONS","getSupportedExtensions","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iterator","Symbol","iterator","_step","done","next","extension","value","getExtension","err","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","Object","getOwnPropertyNames","_polyfillTable","WEBGL2_CONTEXT_POLYFILLS","_step2","polyfillExtension","target","target2","installOverrides","_ref","keys","WEBGL2_CONTEXT_OVERRIDES","forEach","key","originalFunc","bind","polyfill","_ref2","defaults","_utils","assert","_defaults$meta","meta","_meta$suffix","suffix","ext","_loop","_Object$keys","_i","extKey","concat","apply","arguments","length","defineProperty","global_","window"]
}
