shadow$provide.module$node_modules$$deck_DOT_gl$core$dist$es5$controllers$controller=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports["default"]=void 0;var _classCallCheck2=global(require("module$node_modules$$babel$runtime$helpers$classCallCheck")),_createClass2=global(require("module$node_modules$$babel$runtime$helpers$createClass")),_transitionManager=global(require("module$node_modules$$deck_DOT_gl$core$dist$es5$controllers$transition_manager")),
_log=global(require("module$node_modules$$deck_DOT_gl$core$dist$es5$utils$log")),_assert=global(require("module$node_modules$$deck_DOT_gl$core$dist$es5$utils$assert")),NO_TRANSITION_PROPS={transitionDuration:0},JSCompiler_object_inline_WHEEL_6545=["wheel"],JSCompiler_object_inline_PAN_6546=["panstart","panmove","panend"],JSCompiler_object_inline_PINCH_6547=["pinchstart","pinchmove","pinchend"],JSCompiler_object_inline_DOUBLE_TAP_6548=["doubletap"],JSCompiler_object_inline_KEYBOARD_6549=["keydown"];
require=function(){function Controller(ControllerState){var options=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{};(0,_classCallCheck2["default"])(this,Controller);(0,_assert["default"])(ControllerState);this.ControllerState=ControllerState;this.eventManager=this.controllerStateProps=this.controllerState=null;this.transitionManager=new _transitionManager["default"](ControllerState,options);this._events=null;this._state={isDragging:!1};this._customEvents=[];this.onStateChange=this.onViewStateChange=
null;this.invertPan=!1;this.handleEvent=this.handleEvent.bind(this);this.setProps(options)}(0,_createClass2["default"])(Controller,[{key:"finalize",value:function(){for(var eventName in this._events)this._events[eventName]&&this.eventManager.off(eventName,this.handleEvent);this.transitionManager.finalize()}},{key:"handleEvent",value:function(event){this.controllerState=new this.ControllerState(Object.assign({},this.controllerStateProps,this._state));switch(event.type){case "panstart":return this._onPanStart(event);
case "panmove":return this._onPan(event);case "panend":return this._onPanEnd(event);case "pinchstart":return this._onPinchStart(event);case "pinchmove":return this._onPinch(event);case "pinchend":return this._onPinchEnd(event);case "doubletap":return this._onDoubleTap(event);case "wheel":return this._onWheel(event);case "keydown":return this._onKeyDown(event);default:return!1}}},{key:"getCenter",value:function(event){var _this$controllerState=this.controllerStateProps;event=event.offsetCenter;return[event.x-
_this$controllerState.x,event.y-_this$controllerState.y]}},{key:"isPointInBounds",value:function(pos,event){var _this$controllerState2=this.controllerStateProps,width=_this$controllerState2.width;_this$controllerState2=_this$controllerState2.height;if(event&&event.handled)return!1;(pos=0<=pos[0]&&pos[0]<=width&&0<=pos[1]&&pos[1]<=_this$controllerState2)&&event&&event.stopPropagation();return pos}},{key:"isFunctionKeyPressed",value:function(event){event=event.srcEvent;return!!(event.metaKey||event.altKey||
event.ctrlKey||event.shiftKey)}},{key:"isDragging",value:function(){return this._state.isDragging}},{key:"setProps",value:function(props){"onViewportChange"in props&&_log["default"].removed("onViewportChange")();"onViewStateChange"in props&&(this.onViewStateChange=props.onViewStateChange);"onStateChange"in props&&(this.onStateChange=props.onStateChange);this.controllerStateProps=props;"eventManager"in props&&this.eventManager!==props.eventManager&&(this.eventManager=props.eventManager,this._events=
{},this.toggleEvents(this._customEvents,!0));this.transitionManager.processViewStateChange(this.controllerStateProps);var _props$scrollZoom=props.scrollZoom;_props$scrollZoom=void 0===_props$scrollZoom?!0:_props$scrollZoom;var _props$dragPan=props.dragPan;_props$dragPan=void 0===_props$dragPan?!0:_props$dragPan;var _props$dragRotate=props.dragRotate;_props$dragRotate=void 0===_props$dragRotate?!0:_props$dragRotate;var _props$doubleClickZoo=props.doubleClickZoom;_props$doubleClickZoo=void 0===_props$doubleClickZoo?
!0:_props$doubleClickZoo;var _props$touchZoom=props.touchZoom;_props$touchZoom=void 0===_props$touchZoom?!0:_props$touchZoom;var _props$touchRotate=props.touchRotate;_props$touchRotate=void 0===_props$touchRotate?!1:_props$touchRotate;props=props.keyboard;props=void 0===props?!0:props;var isInteractive=!!this.onViewStateChange;this.toggleEvents(JSCompiler_object_inline_WHEEL_6545,isInteractive&&_props$scrollZoom);this.toggleEvents(JSCompiler_object_inline_PAN_6546,isInteractive&&(_props$dragPan||
_props$dragRotate));this.toggleEvents(JSCompiler_object_inline_PINCH_6547,isInteractive&&(_props$touchZoom||_props$touchRotate));this.toggleEvents(JSCompiler_object_inline_DOUBLE_TAP_6548,isInteractive&&_props$doubleClickZoo);this.toggleEvents(JSCompiler_object_inline_KEYBOARD_6549,isInteractive&&props);this.scrollZoom=_props$scrollZoom;this.dragPan=_props$dragPan;this.dragRotate=_props$dragRotate;this.doubleClickZoom=_props$doubleClickZoo;this.touchZoom=_props$touchZoom;this.touchRotate=_props$touchRotate;
this.keyboard=props}},{key:"updateTransition",value:function(){this.transitionManager.updateTransition()}},{key:"toggleEvents",value:function(eventNames,enabled){var _this=this;this.eventManager&&eventNames.forEach(function(eventName){if(_this._events[eventName]!==enabled)if(_this._events[eventName]=enabled)_this.eventManager.on(eventName,_this.handleEvent);else _this.eventManager.off(eventName,_this.handleEvent)})}},{key:"updateViewport",value:function(newControllerState){var extraProps=1<arguments.length&&
void 0!==arguments[1]?arguments[1]:{},interactionState=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{};extraProps=Object.assign({},newControllerState.getViewportProps(),extraProps);if(this.controllerState!==newControllerState){var oldViewState=this.controllerState?this.controllerState.getViewportProps():null;if(this.onViewStateChange)this.onViewStateChange({viewState:extraProps,interactionState:interactionState,oldViewState:oldViewState})}Object.assign(this._state,newControllerState.getInteractiveState(),
interactionState);if(this.onStateChange)this.onStateChange(this._state)}},{key:"_onPanStart",value:function(event){var pos=this.getCenter(event);if(!this.isPointInBounds(pos,event))return!1;event=this.controllerState.panStart({pos:pos}).rotateStart({pos:pos});this.updateViewport(event,NO_TRANSITION_PROPS,{isDragging:!0});return!0}},{key:"_onPan",value:function(event){if(!this.isDragging())return!1;var alternateMode=this.isFunctionKeyPressed(event)||event.rightButton;return(alternateMode=this.invertPan?
!alternateMode:alternateMode)?this._onPanMove(event):this._onPanRotate(event)}},{key:"_onPanEnd",value:function(event){event=this.controllerState.panEnd().rotateEnd();this.updateViewport(event,null,{isDragging:!1,isPanning:!1,isRotating:!1});return!0}},{key:"_onPanMove",value:function(event){if(!this.dragPan)return!1;event=this.getCenter(event);event=this.controllerState.pan({pos:event});this.updateViewport(event,NO_TRANSITION_PROPS,{isDragging:!0,isPanning:!0});return!0}},{key:"_onPanRotate",value:function(event){if(!this.dragRotate)return!1;
var deltaX=event.deltaX;event=event.deltaY;var _this$controllerState3=this.controllerState.getViewportProps();deltaX=this.controllerState.rotate({deltaScaleX:deltaX/_this$controllerState3.width,deltaScaleY:event/_this$controllerState3.height});this.updateViewport(deltaX,NO_TRANSITION_PROPS,{isDragging:!0,isRotating:!0});return!0}},{key:"_onWheel",value:function(event){if(!this.scrollZoom)return!1;event.preventDefault();var pos=this.getCenter(event);if(!this.isPointInBounds(pos,event))return!1;event=
event.delta;var scale=2/(1+Math.exp(-Math.abs(.01*event)));0>event&&0!==scale&&(scale=1/scale);pos=this.controllerState.zoom({pos:pos,scale:scale});this.updateViewport(pos,NO_TRANSITION_PROPS,{isZooming:!0,isPanning:!0});return!0}},{key:"_onPinchStart",value:function(event){var pos=this.getCenter(event);if(!this.isPointInBounds(pos,event))return!1;pos=this.controllerState.zoomStart({pos:pos}).rotateStart({pos:pos});this._state.startPinchRotation=event.rotation;this.updateViewport(pos,NO_TRANSITION_PROPS,
{isDragging:!0});return!0}},{key:"_onPinch",value:function(event){if(!this.touchZoom&&!this.touchRotate||!this.isDragging())return!1;var newControllerState=this.controllerState;if(this.touchZoom){var scale=event.scale,pos=this.getCenter(event);newControllerState=newControllerState.zoom({pos:pos,scale:scale})}this.touchRotate&&(newControllerState=newControllerState.rotate({deltaScaleX:-(event.rotation-this._state.startPinchRotation)/180}));this.updateViewport(newControllerState,NO_TRANSITION_PROPS,
{isDragging:!0,isPanning:this.touchZoom,isZooming:this.touchZoom,isRotating:this.touchRotate});return!0}},{key:"_onPinchEnd",value:function(event){event=this.controllerState.zoomEnd().rotateEnd();this._state.startPinchRotation=0;this.updateViewport(event,null,{isDragging:!1,isPanning:!1,isZooming:!1,isRotating:!1});return!0}},{key:"_onDoubleTap",value:function(event){if(!this.doubleClickZoom)return!1;var pos=this.getCenter(event);if(!this.isPointInBounds(pos,event))return!1;event=this.isFunctionKeyPressed(event);
pos=this.controllerState.zoom({pos:pos,scale:event?.5:2});this.updateViewport(pos,this._getTransitionProps(),{isZooming:!0,isPanning:!0});return!0}},{key:"_onKeyDown",value:function(event){if(!this.keyboard)return!1;var funcKey=this.isFunctionKeyPressed(event),controllerState=this.controllerState,interactionState={};switch(event.srcEvent.keyCode){case 189:event=funcKey?controllerState.zoomOut().zoomOut():controllerState.zoomOut();interactionState.isZooming=!0;break;case 187:event=funcKey?controllerState.zoomIn().zoomIn():
controllerState.zoomIn();interactionState.isZooming=!0;break;case 37:funcKey?(event=controllerState.rotateLeft(),interactionState.isRotating=!0):(event=controllerState.moveLeft(),interactionState.isPanning=!0);break;case 39:funcKey?(event=controllerState.rotateRight(),interactionState.isRotating=!0):(event=controllerState.moveRight(),interactionState.isPanning=!0);break;case 38:funcKey?(event=controllerState.rotateUp(),interactionState.isRotating=!0):(event=controllerState.moveUp(),interactionState.isPanning=
!0);break;case 40:funcKey?(event=controllerState.rotateDown(),interactionState.isRotating=!0):(event=controllerState.moveDown(),interactionState.isPanning=!0);break;default:return!1}this.updateViewport(event,this._getTransitionProps(),interactionState);return!0}},{key:"_getTransitionProps",value:function(){return NO_TRANSITION_PROPS}},{key:"events",set:function(customEvents){this.toggleEvents(this._customEvents,!1);this.toggleEvents(customEvents,!0);this._customEvents=customEvents;this.setProps(this.controllerStateProps)}}]);
return Controller}();exports["default"]=require}
//# sourceMappingURL=module$node_modules$$deck_DOT_gl$core$dist$es5$controllers$controller.js.map
