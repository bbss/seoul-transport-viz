{
"version":3,
"file":"module$node_modules$$luma_DOT_gl$shadertools$dist$es5$lib$platform_defines.js",
"lineCount":6,
"mappings":"AAAAA,cAAA,2EAAA,CAA+F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGvIC,MAAAC,eAAA,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAAI,yBAAA,CAKAA,QAAiC,CAACC,EAAD,CAAK,CAGpC,OAFgBC,CAAC,CAAA,CAAGC,UAAAC,eAAJF,EAA+BD,EAA/BC,CAERG,UAAAC,YAAA,EAAR,EACE,KAAK,QAAL,CACE,MAAO,6IAET,MAAK,OAAL,CACE,MAAO,mYAET;KAAK,KAAL,CACE,MAAO,mBAET,SACE,MAAO,oZAXX,CAHoC,CAJtCV,QAAAW,kBAAA,CAsBAA,QAA0B,CAACN,EAAD,CAAKO,WAAL;AAAkBC,UAAlB,CAA8B,CAClDC,WAAAA,CAAiB,+IAEjB,EAAC,CAAA,CAAGP,UAAAQ,YAAJ,EAA4BV,EAA5B,CAAgCE,UAAAS,SAAAC,gBAAhC,CAAJ,GACEH,WADF,EACoB,yLADpB,CAII,EAAC,CAAA,CAAGP,UAAAQ,YAAJ,EAA4BV,EAA5B,CAAgCE,UAAAS,SAAAE,iBAAhC,CAAJ;AAA6E,CAAC,CAAA,CAAGX,UAAAY,wBAAJ,EAAwCd,EAAxC,CAA4CE,UAAAS,SAAAE,iBAA5C,CAA7E,GACEJ,WADF,EACoB,kLADpB,CAII,EAAC,CAAA,CAAGP,UAAAQ,YAAJ,EAA4BV,EAA5B,CAAgCE,UAAAS,SAAAI,eAAhC,CAAJ,EAA2E,CAAC,CAAA,CAAGb,UAAAY,wBAAJ,EAAwCd,EAAxC,CAA4CE,UAAAS,SAAAI,eAA5C,CAAgF,CACzJC,SAAU,SAD+I,CAAhF,CAA3E,GAGEP,WAHF,EAGoB,2JAHpB,CAMI;CAAC,CAAA,CAAGP,UAAAQ,YAAJ,EAA4BV,EAA5B,CAAgCE,UAAAS,SAAAM,iBAAhC,CAAJ,GACER,WADF,EACoB,ygBADpB,CAIA;MAAOA,YArB+C,CApBxD,KAAIP,WAAaT,OAAA,CAAQ,wEAAR,CATsH;",
"sources":["node_modules/@luma_DOT_gl/shadertools/dist/es5/lib/platform-defines.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$luma_DOT_gl$shadertools$dist$es5$lib$platform_defines\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getPlatformShaderDefines = getPlatformShaderDefines;\nexports.getVersionDefines = getVersionDefines;\n\nvar _webglInfo = require(\"../utils/webgl-info\");\n\nfunction getPlatformShaderDefines(gl) {\n  var debugInfo = (0, _webglInfo.getContextInfo)(gl);\n\n  switch (debugInfo.gpuVendor.toLowerCase()) {\n    case 'nvidia':\n      return \"#define NVIDIA_GPU\\n// Nvidia optimizes away the calculation necessary for emulated fp64\\n#define LUMA_FP64_CODE_ELIMINATION_WORKAROUND 1\\n\";\n\n    case 'intel':\n      return \"#define INTEL_GPU\\n// Intel optimizes away the calculation necessary for emulated fp64\\n#define LUMA_FP64_CODE_ELIMINATION_WORKAROUND 1\\n// Intel's built-in 'tan' function doesn't have acceptable precision\\n#define LUMA_FP32_TAN_PRECISION_WORKAROUND 1\\n// Intel GPU doesn't have full 32 bits precision in same cases, causes overflow\\n#define LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND 1\\n\";\n\n    case 'amd':\n      return \"#define AMD_GPU\\n\";\n\n    default:\n      return \"#define DEFAULT_GPU\\n// Prevent driver from optimizing away the calculation necessary for emulated fp64\\n#define LUMA_FP64_CODE_ELIMINATION_WORKAROUND 1\\n// Intel's built-in 'tan' function doesn't have acceptable precision\\n#define LUMA_FP32_TAN_PRECISION_WORKAROUND 1\\n// Intel GPU doesn't have full 32 bits precision in same cases, causes overflow\\n#define LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND 1\\n\";\n  }\n}\n\nfunction getVersionDefines(gl, glslVersion, isFragment) {\n  var versionDefines = \"#if (__VERSION__ > 120)\\n\\n# define FRAG_DEPTH\\n# define DERIVATIVES\\n# define DRAW_BUFFERS\\n# define TEXTURE_LOD\\n\\n#endif // __VERSION\\n\";\n\n  if ((0, _webglInfo.hasFeatures)(gl, _webglInfo.FEATURES.GLSL_FRAG_DEPTH)) {\n    versionDefines += \"// FRAG_DEPTH => gl_FragDepth is available\\n#ifdef GL_EXT_frag_depth\\n#extension GL_EXT_frag_depth : enable\\n# define FRAG_DEPTH\\n# define gl_FragDepth gl_FragDepthEXT\\n#endif\\n\";\n  }\n\n  if ((0, _webglInfo.hasFeatures)(gl, _webglInfo.FEATURES.GLSL_DERIVATIVES) && (0, _webglInfo.canCompileGLGSExtension)(gl, _webglInfo.FEATURES.GLSL_DERIVATIVES)) {\n    versionDefines += \"// DERIVATIVES => dxdF, dxdY and fwidth are available\\n#ifdef GL_OES_standard_derivatives\\n#extension GL_OES_standard_derivatives : enable\\n# define DERIVATIVES\\n#endif\\n\";\n  }\n\n  if ((0, _webglInfo.hasFeatures)(gl, _webglInfo.FEATURES.GLSL_FRAG_DATA) && (0, _webglInfo.canCompileGLGSExtension)(gl, _webglInfo.FEATURES.GLSL_FRAG_DATA, {\n    behavior: 'require'\n  })) {\n    versionDefines += \"// DRAW_BUFFERS => gl_FragData[] is available\\n#ifdef GL_EXT_draw_buffers\\n#extension GL_EXT_draw_buffers : require\\n#define DRAW_BUFFERS\\n#endif\\n\";\n  }\n\n  if ((0, _webglInfo.hasFeatures)(gl, _webglInfo.FEATURES.GLSL_TEXTURE_LOD)) {\n    versionDefines += \"// TEXTURE_LOD => texture2DLod etc are available\\n#ifdef GL_EXT_shader_texture_lod\\n#extension GL_EXT_shader_texture_lod : enable\\n# define TEXTURE_LOD\\n#define texture2DLod texture2DLodEXT\\n#define texture2DProjLod texture2DProjLodEXT\\n#define texture2DProjLod texture2DProjLodEXT\\n#define textureCubeLod textureCubeLodEXT\\n#define texture2DGrad texture2DGradEXT\\n#define texture2DProjGrad texture2DProjGradEXT\\n#define texture2DProjGrad texture2DProjGradEXT\\n#define textureCubeGrad textureCubeGradEXT\\n#endif\\n\";\n  }\n\n  return versionDefines;\n}\n//# sourceMappingURL=platform-defines.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","getPlatformShaderDefines","gl","debugInfo","_webglInfo","getContextInfo","gpuVendor","toLowerCase","getVersionDefines","glslVersion","isFragment","versionDefines","hasFeatures","FEATURES","GLSL_FRAG_DEPTH","GLSL_DERIVATIVES","canCompileGLGSExtension","GLSL_FRAG_DATA","behavior","GLSL_TEXTURE_LOD"]
}
