{
"version":3,
"file":"module$node_modules$vega_view_transforms$build$vega_view_transforms.js",
"lineCount":50,
"mappings":"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",
"sources":["node_modules/vega-view-transforms/build/vega-view-transforms.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$vega_view_transforms$build$vega_view_transforms\"] = function(global,require,module,exports) {\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('vega-dataflow'), require('vega-scenegraph'), require('vega-util')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'vega-dataflow', 'vega-scenegraph', 'vega-util'], factory) :\n  (global = global || self, factory((global.vega = global.vega || {}, global.vega.transforms = {}), global.vega, global.vega, global.vega));\n}(this, (function (exports, vegaDataflow, vegaScenegraph, vegaUtil) { 'use strict';\n\n  const Top = 'top';\n  const Left = 'left';\n  const Right = 'right';\n  const Bottom = 'bottom';\n\n  const TopLeft = 'top-left';\n  const TopRight = 'top-right';\n  const BottomLeft = 'bottom-left';\n  const BottomRight = 'bottom-right';\n\n  const Start = 'start';\n  const Middle = 'middle';\n  const End = 'end';\n\n  const X = 'x';\n  const Y = 'y';\n\n  const Group = 'group';\n\n  const AxisRole = 'axis';\n  const TitleRole = 'title';\n  const FrameRole = 'frame';\n  const ScopeRole = 'scope';\n  const LegendRole = 'legend';\n\n  const RowHeader = 'row-header';\n  const RowFooter = 'row-footer';\n  const RowTitle  = 'row-title';\n  const ColHeader = 'column-header';\n  const ColFooter = 'column-footer';\n  const ColTitle  = 'column-title';\n\n  const Padding = 'padding';\n\n  const Symbols = 'symbol';\n\n  const Fit  = 'fit';\n  const FitX = 'fit-x';\n  const FitY = 'fit-y';\n  const Pad  = 'pad';\n  const None = 'none';\n\n  const All = 'all';\n  const Each = 'each';\n  const Flush = 'flush';\n\n  const Column = 'column';\n  const Row = 'row';\n\n  /**\n   * Calculate bounding boxes for scenegraph items.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {object} params.mark - The scenegraph mark instance to bound.\n   */\n  function Bound(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n\n  var prototype = vegaUtil.inherits(Bound, vegaDataflow.Transform);\n\n  prototype.transform = function(_, pulse) {\n    var view = pulse.dataflow,\n        mark = _.mark,\n        type = mark.marktype,\n        entry = vegaScenegraph.Marks[type],\n        bound = entry.bound,\n        markBounds = mark.bounds, rebound;\n\n    if (entry.nested) {\n      // multi-item marks have a single bounds instance\n      if (mark.items.length) view.dirty(mark.items[0]);\n      markBounds = boundItem(mark, bound);\n      mark.items.forEach(function(item) {\n        item.bounds.clear().union(markBounds);\n      });\n    }\n\n    else if (type === Group || _.modified()) {\n      // operator parameters modified -> re-bound all items\n      // updates group bounds in response to modified group content\n      pulse.visit(pulse.MOD, item => view.dirty(item));\n      markBounds.clear();\n      mark.items.forEach(item => markBounds.union(boundItem(item, bound)));\n\n      // force reflow for axes/legends/titles to propagate any layout changes\n      switch (mark.role) {\n        case AxisRole:\n        case LegendRole:\n        case TitleRole:\n          pulse.reflow();\n      }\n    }\n\n    else {\n      // incrementally update bounds, re-bound mark as needed\n      rebound = pulse.changed(pulse.REM);\n\n      pulse.visit(pulse.ADD, item => {\n        markBounds.union(boundItem(item, bound));\n      });\n\n      pulse.visit(pulse.MOD, item => {\n        rebound = rebound || markBounds.alignsWith(item.bounds);\n        view.dirty(item);\n        markBounds.union(boundItem(item, bound));\n      });\n\n      if (rebound) {\n        markBounds.clear();\n        mark.items.forEach(item => markBounds.union(item.bounds));\n      }\n    }\n\n    // ensure mark bounds do not exceed any clipping region\n    vegaScenegraph.boundClip(mark);\n\n    return pulse.modifies('bounds');\n  };\n\n  function boundItem(item, bound, opt) {\n    return bound(item.bounds.clear(), item, opt);\n  }\n\n  var COUNTER_NAME = ':vega_identifier:';\n\n  /**\n   * Adds a unique identifier to all added tuples.\n   * This transform creates a new signal that serves as an id counter.\n   * As a result, the id counter is shared across all instances of this\n   * transform, generating unique ids across multiple data streams. In\n   * addition, this signal value can be included in a snapshot of the\n   * dataflow state, enabling correct resumption of id allocation.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {string} params.as - The field name for the generated identifier.\n   */\n  function Identifier(params) {\n    vegaDataflow.Transform.call(this, 0, params);\n  }\n\n  Identifier.Definition = {\n    'type': 'Identifier',\n    'metadata': {'modifies': true},\n    'params': [\n      { 'name': 'as', 'type': 'string', 'required': true }\n    ]\n  };\n\n  var prototype$1 = vegaUtil.inherits(Identifier, vegaDataflow.Transform);\n\n  prototype$1.transform = function(_, pulse) {\n    var counter = getCounter(pulse.dataflow),\n        id = counter.value,\n        as = _.as;\n\n    pulse.visit(pulse.ADD, t => {\n      if (!t[as]) t[as] = ++id;\n    });\n\n    counter.set(this.value = id);\n    return pulse;\n  };\n\n  function getCounter(view) {\n    var counter = view._signals[COUNTER_NAME];\n    if (!counter) {\n      view._signals[COUNTER_NAME] = (counter = view.add(0));\n    }\n    return counter;\n  }\n\n  /**\n   * Bind scenegraph items to a scenegraph mark instance.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {object} params.markdef - The mark definition for creating the mark.\n   *   This is an object of legal scenegraph mark properties which *must* include\n   *   the 'marktype' property.\n   */\n  function Mark(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n\n  var prototype$2 = vegaUtil.inherits(Mark, vegaDataflow.Transform);\n\n  prototype$2.transform = function(_, pulse) {\n    var mark = this.value;\n\n    // acquire mark on first invocation, bind context and group\n    if (!mark) {\n      mark = pulse.dataflow.scenegraph().mark(_.markdef, lookup(_), _.index);\n      mark.group.context = _.context;\n      if (!_.context.group) _.context.group = mark.group;\n      mark.source = this.source; // point to upstream collector\n      mark.clip = _.clip;\n      mark.interactive = _.interactive;\n      this.value = mark;\n    }\n\n    // initialize entering items\n    var Init = mark.marktype === Group ? vegaScenegraph.GroupItem : vegaScenegraph.Item;\n    pulse.visit(pulse.ADD, item => Init.call(item, mark));\n\n    // update clipping and/or interactive status\n    if (_.modified('clip') || _.modified('interactive')) {\n      mark.clip = _.clip;\n      mark.interactive = !!_.interactive;\n      mark.zdirty = true; // force scenegraph re-eval\n      pulse.reflow();\n    }\n\n    // bind items array to scenegraph mark\n    mark.items = pulse.source;\n    return pulse;\n  };\n\n  function lookup(_) {\n    var g = _.groups, p = _.parent;\n    return g && g.size === 1 ? g.get(Object.keys(g.object)[0])\n      : g && p ? g.lookup(p)\n      : null;\n  }\n\n  /**\n   * Analyze items for overlap, changing opacity to hide items with\n   * overlapping bounding boxes. This transform will preserve at least\n   * two items (e.g., first and last) even if overlap persists.\n   * @param {object} params - The parameters for this operator.\n   * @param {function(*,*): number} [params.sort] - A comparator\n   *   function for sorting items.\n   * @param {object} [params.method] - The overlap removal method to apply.\n   *   One of 'parity' (default, hide every other item until there is no\n   *   more overlap) or 'greedy' (sequentially scan and hide and items that\n   *   overlap with the last visible item).\n   * @param {object} [params.boundScale] - A scale whose range should be used\n   *   to bound the items. Items exceeding the bounds of the scale range\n   *   will be treated as overlapping. If null or undefined, no bounds check\n   *   will be applied.\n   * @param {object} [params.boundOrient] - The orientation of the scale\n   *   (top, bottom, left, or right) used to bound items. This parameter is\n   *   ignored if boundScale is null or undefined.\n   * @param {object} [params.boundTolerance] - The tolerance in pixels for\n   *   bound inclusion testing (default 1). This specifies by how many pixels\n   *   an item's bounds may exceed the scale range bounds and not be culled.\n   * @constructor\n   */\n  function Overlap(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n\n  var prototype$3 = vegaUtil.inherits(Overlap, vegaDataflow.Transform);\n\n  var methods = {\n    parity: items => {\n      return items.filter((item, i) => i % 2 ? (item.opacity = 0) : 1);\n    },\n    greedy: (items, sep) => {\n      var a;\n      return items.filter((b, i) => {\n        if (!i || !intersect(a.bounds, b.bounds, sep)) {\n          a = b;\n          return 1;\n        } else {\n          return b.opacity = 0;\n        }\n      });\n    }\n  };\n\n  // compute bounding box intersection\n  // including padding pixels of separation\n  function intersect(a, b, sep) {\n    return sep > Math.max(\n      b.x1 - a.x2,\n      a.x1 - b.x2,\n      b.y1 - a.y2,\n      a.y1 - b.y2\n    );\n  }\n\n  function hasOverlap(items, pad) {\n    for (var i=1, n=items.length, a=items[0].bounds, b; i<n; a=b, ++i) {\n      if (intersect(a, b = items[i].bounds, pad)) return true;\n    }\n  }\n\n  function hasBounds(item) {\n    var b = item.bounds;\n    return b.width() > 1 && b.height() > 1;\n  }\n\n  function boundTest(scale, orient, tolerance) {\n    var range = scale.range(),\n        b = new vegaScenegraph.Bounds();\n\n    if (orient === Top || orient === Bottom) {\n      b.set(range[0], -Infinity, range[1], +Infinity);\n    } else {\n      b.set(-Infinity, range[0], +Infinity, range[1]);\n    }\n    b.expand(tolerance || 1);\n\n    return item => b.encloses(item.bounds);\n  }\n\n  // reset all items to be fully opaque\n  function reset(source) {\n    source.forEach(item => item.opacity = 1);\n    return source;\n  }\n\n  // add all tuples to mod, fork pulse if parameters were modified\n  // fork prevents cross-stream tuple pollution (e.g., pulse from scale)\n  function reflow(pulse, _) {\n    return pulse.reflow(_.modified()).modifies('opacity');\n  }\n\n  prototype$3.transform = function(_, pulse) {\n    var reduce = methods[_.method] || methods.parity,\n        source = pulse.materialize(pulse.SOURCE).source,\n        sep = _.separation || 0,\n        items, test, bounds;\n\n    if (!source || !source.length) return;\n\n    if (!_.method) {\n      // early exit if method is falsy\n      if (_.modified('method')) {\n        reset(source);\n        pulse = reflow(pulse, _);\n      }\n      return pulse;\n    }\n\n    // skip labels with no content\n    source = source.filter(hasBounds);\n\n    // early exit, nothing to do\n    if (!source.length) return;\n\n    if (_.sort) {\n      source = source.slice().sort(_.sort);\n    }\n\n    items = reset(source);\n    pulse = reflow(pulse, _);\n\n    if (items.length >= 3 && hasOverlap(items, sep)) {\n      do {\n        items = reduce(items, sep);\n      } while (items.length >= 3 && hasOverlap(items, sep));\n\n      if (items.length < 3 && !vegaUtil.peek(source).opacity) {\n        if (items.length > 1) vegaUtil.peek(items).opacity = 0;\n        vegaUtil.peek(source).opacity = 1;\n      }\n    }\n\n    if (_.boundScale && _.boundTolerance >= 0) {\n      test = boundTest(_.boundScale, _.boundOrient, +_.boundTolerance);\n      source.forEach(item => {\n        if (!test(item)) item.opacity = 0;\n      });\n    }\n\n    // re-calculate mark bounds\n    bounds = items[0].mark.bounds.clear();\n    source.forEach(item => {\n      if (item.opacity) bounds.union(item.bounds);\n    });\n\n    return pulse;\n  };\n\n  /**\n   * Queue modified scenegraph items for rendering.\n   * @constructor\n   */\n  function Render(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n\n  var prototype$4 = vegaUtil.inherits(Render, vegaDataflow.Transform);\n\n  prototype$4.transform = function(_, pulse) {\n    var view = pulse.dataflow;\n\n    pulse.visit(pulse.ALL, item => view.dirty(item));\n\n    // set z-index dirty flag as needed\n    if (pulse.fields && pulse.fields['zindex']) {\n      var item = pulse.source && pulse.source[0];\n      if (item) item.mark.zdirty = true;\n    }\n  };\n\n  const tempBounds = new vegaScenegraph.Bounds();\n\n  function set(item, property, value) {\n    return item[property] === value ? 0\n      : (item[property] = value, 1);\n  }\n\n  function isYAxis(mark) {\n    var orient = mark.items[0].orient;\n    return orient === Left || orient === Right;\n  }\n\n  function axisIndices(datum) {\n    var index = +datum.grid;\n    return [\n      datum.ticks  ? index++ : -1, // ticks index\n      datum.labels ? index++ : -1, // labels index\n      index + (+datum.domain)      // title index\n    ];\n  }\n\n  function axisLayout(view, axis, width, height) {  \n    var item = axis.items[0],\n        datum = item.datum,\n        delta = item.translate != null ? item.translate : 0.5,\n        orient = item.orient,\n        indices = axisIndices(datum),\n        range = item.range,\n        offset = item.offset,\n        position = item.position,\n        minExtent = item.minExtent,\n        maxExtent = item.maxExtent,\n        title = datum.title && item.items[indices[2]].items[0],\n        titlePadding = item.titlePadding,\n        bounds = item.bounds,\n        dl = title && vegaScenegraph.multiLineOffset(title),\n        x = 0, y = 0, i, s;\n\n    tempBounds.clear().union(bounds);\n    bounds.clear();\n    if ((i=indices[0]) > -1) bounds.union(item.items[i].bounds);\n    if ((i=indices[1]) > -1) bounds.union(item.items[i].bounds);\n\n    // position axis group and title\n    switch (orient) {\n      case Top:\n        x = position || 0;\n        y = -offset;\n        s = Math.max(minExtent, Math.min(maxExtent, -bounds.y1));\n        bounds.add(0, -s).add(range, 0);\n        if (title) axisTitleLayout(view, title, s, titlePadding, dl, 0, -1, bounds);\n        break;\n      case Left:\n        x = -offset;\n        y = position || 0;\n        s = Math.max(minExtent, Math.min(maxExtent, -bounds.x1));\n        bounds.add(-s, 0).add(0, range);\n        if (title) axisTitleLayout(view, title, s, titlePadding, dl, 1, -1, bounds);\n        break;\n      case Right:\n        x = width + offset;\n        y = position || 0;\n        s = Math.max(minExtent, Math.min(maxExtent, bounds.x2));\n        bounds.add(0, 0).add(s, range);\n        if (title) axisTitleLayout(view, title, s, titlePadding, dl, 1, 1, bounds);\n        break;\n      case Bottom:\n        x = position || 0;\n        y = height + offset;\n        s = Math.max(minExtent, Math.min(maxExtent, bounds.y2));\n        bounds.add(0, 0).add(range, s);\n        if (title) axisTitleLayout(view, title, s, titlePadding, 0, 0, 1, bounds);\n        break;\n      default:\n        x = item.x;\n        y = item.y;\n    }\n\n    // update bounds\n    vegaScenegraph.boundStroke(bounds.translate(x, y), item);\n\n    if (set(item, 'x', x + delta) | set(item, 'y', y + delta)) {\n      item.bounds = tempBounds;\n      view.dirty(item);\n      item.bounds = bounds;\n      view.dirty(item);\n    }\n\n    return item.mark.bounds.clear().union(bounds);\n  }\n\n  function axisTitleLayout(view, title, offset, pad, dl, isYAxis, sign, bounds) {\n    const b = title.bounds;\n\n    if (title.auto) {\n      const v = sign * (offset + dl + pad);\n      let dx = 0, dy = 0;\n\n      view.dirty(title);\n      isYAxis\n        ? dx = (title.x || 0) - (title.x = v)\n        : dy = (title.y || 0) - (title.y = v);\n      title.mark.bounds.clear().union(b.translate(-dx, -dy));\n      view.dirty(title);\n    }\n\n    bounds.union(b);\n  }\n\n  // aggregation functions for grid margin determination\n  const min = (a, b) => Math.floor(Math.min(a, b));\n  const max = (a, b) => Math.ceil(Math.max(a, b));\n\n  function gridLayoutGroups(group) {\n    var groups = group.items,\n        n = groups.length,\n        i = 0, mark, items;\n\n    var views = {\n      marks:      [],\n      rowheaders: [],\n      rowfooters: [],\n      colheaders: [],\n      colfooters: [],\n      rowtitle: null,\n      coltitle: null\n    };\n\n    // layout axes, gather legends, collect bounds\n    for (; i<n; ++i) {\n      mark = groups[i];\n      items = mark.items;\n      if (mark.marktype === Group) {\n        switch (mark.role) {\n          case AxisRole:\n          case LegendRole:\n          case TitleRole:\n            break;\n          case RowHeader: views.rowheaders.push(...items); break;\n          case RowFooter: views.rowfooters.push(...items); break;\n          case ColHeader: views.colheaders.push(...items); break;\n          case ColFooter: views.colfooters.push(...items); break;\n          case RowTitle:  views.rowtitle = items[0]; break;\n          case ColTitle:  views.coltitle = items[0]; break;\n          default:        views.marks.push(...items);\n        }\n      }\n    }\n\n    return views;\n  }\n\n  function bboxFlush(item) {\n    return new vegaScenegraph.Bounds().set(0, 0, item.width || 0, item.height || 0);\n  }\n\n  function bboxFull(item) {\n    var b = item.bounds.clone();\n    return b.empty()\n      ? b.set(0, 0, 0, 0)\n      : b.translate(-(item.x || 0), -(item.y || 0));\n  }\n\n  function get(opt, key, d) {\n    var v = vegaUtil.isObject(opt) ? opt[key] : opt;\n    return v != null ? v : (d !== undefined ? d : 0);\n  }\n\n  function offsetValue(v) {\n    return v < 0 ? Math.ceil(-v) : 0;\n  }\n\n  function gridLayout(view, groups, opt) {\n    var dirty = !opt.nodirty,\n        bbox = opt.bounds === Flush ? bboxFlush : bboxFull,\n        bounds = tempBounds.set(0, 0, 0, 0),\n        alignCol = get(opt.align, Column),\n        alignRow = get(opt.align, Row),\n        padCol = get(opt.padding, Column),\n        padRow = get(opt.padding, Row),\n        ncols = opt.columns || groups.length,\n        nrows = ncols <= 0 ? 1 : Math.ceil(groups.length / ncols),\n        n = groups.length,\n        xOffset = Array(n), xExtent = Array(ncols), xMax = 0,\n        yOffset = Array(n), yExtent = Array(nrows), yMax = 0,\n        dx = Array(n), dy = Array(n), boxes = Array(n),\n        m, i, c, r, b, g, px, py, x, y, offset;\n\n    for (i=0; i<ncols; ++i) xExtent[i] = 0;\n    for (i=0; i<nrows; ++i) yExtent[i] = 0;\n\n    // determine offsets for each group\n    for (i=0; i<n; ++i) {\n      g = groups[i];\n      b = boxes[i] = bbox(g);\n      g.x = g.x || 0; dx[i] = 0;\n      g.y = g.y || 0; dy[i] = 0;\n      c = i % ncols;\n      r = ~~(i / ncols);\n      xMax = Math.max(xMax, px = Math.ceil(b.x2));\n      yMax = Math.max(yMax, py = Math.ceil(b.y2));\n      xExtent[c] = Math.max(xExtent[c], px);\n      yExtent[r] = Math.max(yExtent[r], py);\n      xOffset[i] = padCol + offsetValue(b.x1);\n      yOffset[i] = padRow + offsetValue(b.y1);\n      if (dirty) view.dirty(groups[i]);\n    }\n\n    // set initial alignment offsets\n    for (i=0; i<n; ++i) {\n      if (i % ncols === 0) xOffset[i] = 0;\n      if (i < ncols) yOffset[i] = 0;\n    }\n\n    // enforce column alignment constraints\n    if (alignCol === Each) {\n      for (c=1; c<ncols; ++c) {\n        for (offset=0, i=c; i<n; i += ncols) {\n          if (offset < xOffset[i]) offset = xOffset[i];\n        }\n        for (i=c; i<n; i += ncols) {\n          xOffset[i] = offset + xExtent[c-1];\n        }\n      }\n    } else if (alignCol === All) {\n      for (offset=0, i=0; i<n; ++i) {\n        if (i % ncols && offset < xOffset[i]) offset = xOffset[i];\n      }\n      for (i=0; i<n; ++i) {\n        if (i % ncols) xOffset[i] = offset + xMax;\n      }\n    } else {\n      for (alignCol=false, c=1; c<ncols; ++c) {\n        for (i=c; i<n; i += ncols) {\n          xOffset[i] += xExtent[c-1];\n        }\n      }\n    }\n\n    // enforce row alignment constraints\n    if (alignRow === Each) {\n      for (r=1; r<nrows; ++r) {\n        for (offset=0, i=r*ncols, m=i+ncols; i<m; ++i) {\n          if (offset < yOffset[i]) offset = yOffset[i];\n        }\n        for (i=r*ncols; i<m; ++i) {\n          yOffset[i] = offset + yExtent[r-1];\n        }\n      }\n    } else if (alignRow === All) {\n      for (offset=0, i=ncols; i<n; ++i) {\n        if (offset < yOffset[i]) offset = yOffset[i];\n      }\n      for (i=ncols; i<n; ++i) {\n        yOffset[i] = offset + yMax;\n      }\n    } else {\n      for (alignRow=false, r=1; r<nrows; ++r) {\n        for (i=r*ncols, m=i+ncols; i<m; ++i) {\n          yOffset[i] += yExtent[r-1];\n        }\n      }\n    }\n\n    // perform horizontal grid layout\n    for (x=0, i=0; i<n; ++i) {\n      x = xOffset[i] + (i % ncols ? x : 0);\n      dx[i] += x - groups[i].x;\n    }\n\n    // perform vertical grid layout\n    for (c=0; c<ncols; ++c) {\n      for (y=0, i=c; i<n; i += ncols) {\n        y += yOffset[i];\n        dy[i] += y - groups[i].y;\n      }\n    }\n\n    // perform horizontal centering\n    if (alignCol && get(opt.center, Column) && nrows > 1) {\n      for (i=0; i<n; ++i) {\n        b = alignCol === All ? xMax : xExtent[i % ncols];\n        x = b - boxes[i].x2 - groups[i].x - dx[i];\n        if (x > 0) dx[i] += x / 2;\n      }\n    }\n\n    // perform vertical centering\n    if (alignRow && get(opt.center, Row) && ncols !== 1) {\n      for (i=0; i<n; ++i) {\n        b = alignRow === All ? yMax : yExtent[~~(i / ncols)];\n        y = b - boxes[i].y2 - groups[i].y - dy[i];\n        if (y > 0) dy[i] += y / 2;\n      }\n    }\n\n    // position grid relative to anchor\n    for (i=0; i<n; ++i) {\n      bounds.union(boxes[i].translate(dx[i], dy[i]));\n    }\n    x = get(opt.anchor, X);\n    y = get(opt.anchor, Y);\n    switch (get(opt.anchor, Column)) {\n      case End:    x -= bounds.width(); break;\n      case Middle: x -= bounds.width() / 2;\n    }\n    switch (get(opt.anchor, Row)) {\n      case End:    y -= bounds.height(); break;\n      case Middle: y -= bounds.height() / 2;\n    }\n    x = Math.round(x);\n    y = Math.round(y);\n\n    // update mark positions, bounds, dirty\n    bounds.clear();\n    for (i=0; i<n; ++i) {\n      groups[i].mark.bounds.clear();\n    }\n    for (i=0; i<n; ++i) {\n      g = groups[i];\n      g.x += (dx[i] += x);\n      g.y += (dy[i] += y);\n      bounds.union(g.mark.bounds.union(g.bounds.translate(dx[i], dy[i])));\n      if (dirty) view.dirty(g);\n    }\n\n    return bounds;\n  }\n\n  function trellisLayout(view, group, opt) {\n    var views = gridLayoutGroups(group),\n        groups = views.marks,\n        bbox = opt.bounds === Flush ? boundFlush : boundFull,\n        off = opt.offset,\n        ncols = opt.columns || groups.length,\n        nrows = ncols <= 0 ? 1 : Math.ceil(groups.length / ncols),\n        cells = nrows * ncols,\n        x, y, x2, y2, anchor, band, offset;\n\n    // -- initial grid layout\n    const bounds = gridLayout(view, groups, opt);\n    if (bounds.empty()) bounds.set(0, 0, 0, 0); // empty grid\n\n    // -- layout grid headers and footers --\n\n    // perform row header layout\n    if (views.rowheaders) {\n      band = get(opt.headerBand, Row, null);\n      x = layoutHeaders(view, views.rowheaders, groups, ncols, nrows, -get(off, 'rowHeader'), min, 0, bbox, 'x1', 0, ncols, 1, band);\n    }\n\n    // perform column header layout\n    if (views.colheaders) {\n      band = get(opt.headerBand, Column, null);\n      y = layoutHeaders(view, views.colheaders, groups, ncols, ncols, -get(off, 'columnHeader'), min, 1, bbox, 'y1', 0, 1, ncols, band);\n    }\n\n    // perform row footer layout\n    if (views.rowfooters) {\n      band = get(opt.footerBand, Row, null);\n      x2 = layoutHeaders(view, views.rowfooters, groups, ncols, nrows,  get(off, 'rowFooter'), max, 0, bbox, 'x2', ncols-1, ncols, 1, band);\n    }\n\n    // perform column footer layout\n    if (views.colfooters) {\n      band = get(opt.footerBand, Column, null);\n      y2 = layoutHeaders(view, views.colfooters, groups, ncols, ncols,  get(off, 'columnFooter'), max, 1, bbox, 'y2', cells-ncols, 1, ncols, band);\n    }\n\n    // perform row title layout\n    if (views.rowtitle) {\n      anchor = get(opt.titleAnchor, Row);\n      offset = get(off, 'rowTitle');\n      offset = anchor === End ? x2 + offset : x - offset;\n      band = get(opt.titleBand, Row, 0.5);\n      layoutTitle(view, views.rowtitle, offset, 0, bounds, band);\n    }\n\n    // perform column title layout\n    if (views.coltitle) {\n      anchor = get(opt.titleAnchor, Column);\n      offset = get(off, 'columnTitle');\n      offset = anchor === End ? y2 + offset : y - offset;\n      band = get(opt.titleBand, Column, 0.5);\n      layoutTitle(view, views.coltitle, offset, 1, bounds, band);\n    }\n  }\n\n  function boundFlush(item, field) {\n    return field === 'x1' ? (item.x || 0)\n      : field === 'y1' ? (item.y || 0)\n      : field === 'x2' ? (item.x || 0) + (item.width || 0)\n      : field === 'y2' ? (item.y || 0) + (item.height || 0)\n      : undefined;\n  }\n\n  function boundFull(item, field) {\n    return item.bounds[field];\n  }\n\n  function layoutHeaders(view, headers, groups, ncols, limit, offset, agg, isX, bound, bf, start, stride, back, band) {\n    var n = groups.length,\n        init = 0,\n        edge = 0,\n        i, j, k, m, b, h, g, x, y;\n\n    // if no groups, early exit and return 0\n    if (!n) return init;\n\n    // compute margin\n    for (i=start; i<n; i+=stride) {\n      if (groups[i]) init = agg(init, bound(groups[i], bf));\n    }\n\n    // if no headers, return margin calculation\n    if (!headers.length) return init;\n\n    // check if number of headers exceeds number of rows or columns\n    if (headers.length > limit) {\n      view.warn('Grid headers exceed limit: ' + limit);\n      headers = headers.slice(0, limit);\n    }\n\n    // apply offset\n    init += offset;\n\n    // clear mark bounds for all headers\n    for (j=0, m=headers.length; j<m; ++j) {\n      view.dirty(headers[j]);\n      headers[j].mark.bounds.clear();\n    }\n\n    // layout each header\n    for (i=start, j=0, m=headers.length; j<m; ++j, i+=stride) {\n      h = headers[j];\n      b = h.mark.bounds;\n\n      // search for nearest group to align to\n      // necessary if table has empty cells\n      for (k=i; k >= 0 && (g = groups[k]) == null; k-=back);\n\n      // assign coordinates and update bounds\n      if (isX) {\n        x = band == null ? g.x : Math.round(g.bounds.x1 + band * g.bounds.width());\n        y = init;\n      } else {\n        x = init;\n        y = band == null ? g.y : Math.round(g.bounds.y1 + band * g.bounds.height());\n      }\n      b.union(h.bounds.translate(x - (h.x || 0), y - (h.y || 0)));\n      h.x = x;\n      h.y = y;\n      view.dirty(h);\n\n      // update current edge of layout bounds\n      edge = agg(edge, b[bf]);\n    }\n\n    return edge;\n  }\n\n  function layoutTitle(view, g, offset, isX, bounds, band) {\n    if (!g) return;\n    view.dirty(g);\n\n    // compute title coordinates\n    var x = offset, y = offset;\n    isX\n      ? (x = Math.round(bounds.x1 + band * bounds.width()))\n      : (y = Math.round(bounds.y1 + band * bounds.height()));\n\n    // assign coordinates and update bounds\n    g.bounds.translate(x - (g.x || 0), y - (g.y || 0));\n    g.mark.bounds.clear().union(g.bounds);\n    g.x = x;\n    g.y = y;\n\n    // queue title for redraw\n    view.dirty(g);\n  }\n\n  // utility for looking up legend layout configuration\n  function lookup$1(config, orient) {\n    const opt = config[orient] || {};\n    return (key, d) => opt[key] != null ? opt[key]\n      : config[key] != null ? config[key]\n      : d;\n  }\n\n  // if legends specify offset directly, use the maximum specified value\n  function offsets(legends, value) {\n    var max = -Infinity;\n    legends.forEach(item => {\n      if (item.offset != null) max = Math.max(max, item.offset);\n    });\n    return max > -Infinity ? max : value;\n  }\n\n  function legendParams(g, orient, config, xb, yb, w, h) {\n    const _ = lookup$1(config, orient),\n          offset = offsets(g, _('offset', 0)),\n          anchor = _('anchor', Start),\n          mult = anchor === End ? 1 : anchor === Middle ? 0.5 : 0;\n\n    const p = {\n      align:   Each,\n      bounds:  _('bounds', Flush),\n      columns: _('direction') === 'vertical' ? 1 : g.length,\n      padding: _('margin', 8),\n      center:  _('center'),\n      nodirty: true\n    };\n\n    switch (orient) {\n      case Left:\n        p.anchor = {\n          x: Math.floor(xb.x1) - offset, column: End,\n          y: mult * (h || xb.height() + 2 * xb.y1), row: anchor\n        };\n        break;\n      case Right:\n        p.anchor = {\n          x: Math.ceil(xb.x2) + offset,\n          y: mult * (h || xb.height() + 2 * xb.y1), row: anchor\n        };\n        break;\n      case Top:\n        p.anchor = {\n          y: Math.floor(yb.y1) - offset, row: End,\n          x: mult * (w || yb.width() + 2 * yb.x1), column: anchor\n        };\n        break;\n      case Bottom:\n        p.anchor = {\n          y: Math.ceil(yb.y2) + offset,\n          x: mult * (w || yb.width() + 2 * yb.x1), column: anchor\n        };\n        break;\n      case TopLeft:\n        p.anchor = {x: offset, y: offset};\n        break;\n      case TopRight:\n        p.anchor = {x: w - offset, y: offset, column: End};\n        break;\n      case BottomLeft:\n        p.anchor = {x: offset, y: h - offset, row: End};\n        break;\n      case BottomRight:\n        p.anchor = {x: w - offset, y: h - offset, column: End, row: End};\n        break;\n    }\n\n    return p;\n  }\n\n  function legendLayout(view, legend) {\n    var item = legend.items[0],\n        datum = item.datum,\n        orient = item.orient,\n        bounds = item.bounds,\n        x = item.x, y = item.y, w, h;\n\n    // cache current bounds for later comparison\n    item._bounds\n      ? item._bounds.clear().union(bounds)\n      : item._bounds = bounds.clone();\n    bounds.clear();\n\n    // adjust legend to accommodate padding and title\n    legendGroupLayout(view, item, item.items[0].items[0]);\n\n    // aggregate bounds to determine size, and include origin\n    bounds = legendBounds(item, bounds);\n    w = 2 * item.padding;\n    h = 2 * item.padding;\n    if (!bounds.empty()) {\n      w = Math.ceil(bounds.width() + w);\n      h = Math.ceil(bounds.height() + h);\n    }\n\n    if (datum.type === Symbols) {\n      legendEntryLayout(item.items[0].items[0].items[0].items);\n    }\n\n    if (orient !== None) {\n      item.x = x = 0;\n      item.y = y = 0;\n    }\n    item.width = w;\n    item.height = h;\n    vegaScenegraph.boundStroke(bounds.set(x, y, x + w, y + h), item);\n    item.mark.bounds.clear().union(bounds);\n\n    return item;\n  }\n\n  function legendBounds(item, b) {\n    // aggregate item bounds\n    item.items.forEach(_ => b.union(_.bounds));\n\n    // anchor to legend origin\n    b.x1 = item.padding;\n    b.y1 = item.padding;\n\n    return b;\n  }\n\n  function legendGroupLayout(view, item, entry) {\n    var pad = item.padding,\n        ex = pad - entry.x,\n        ey = pad - entry.y;\n\n    if (!item.datum.title) {\n      if (ex || ey) translate(view, entry, ex, ey);\n    } else {\n      var title = item.items[1].items[0],\n          anchor = title.anchor,\n          tpad = item.titlePadding || 0,\n          tx = pad - title.x,\n          ty = pad - title.y;\n\n      switch (title.orient) {\n        case Left:\n          ex += Math.ceil(title.bounds.width()) + tpad;\n          break;\n        case Right:\n        case Bottom:\n          break;\n        default:\n          ey += title.bounds.height() + tpad;\n      }\n      if (ex || ey) translate(view, entry, ex, ey);\n\n      switch (title.orient) {\n        case Left:\n          ty += legendTitleOffset(item, entry, title, anchor, 1, 1);\n          break;\n        case Right:\n          tx += legendTitleOffset(item, entry, title, End, 0, 0) + tpad;\n          ty += legendTitleOffset(item, entry, title, anchor, 1, 1);\n          break;\n        case Bottom:\n          tx += legendTitleOffset(item, entry, title, anchor, 0, 0);\n          ty += legendTitleOffset(item, entry, title, End, -1, 0, 1) + tpad;\n          break;\n        default:\n          tx += legendTitleOffset(item, entry, title, anchor, 0, 0);\n      }\n      if (tx || ty) translate(view, title, tx, ty);\n\n      // translate legend if title pushes into negative coordinates\n      if ((tx = Math.round(title.bounds.x1 - pad)) < 0) {\n        translate(view, entry, -tx, 0);\n        translate(view, title, -tx, 0);\n      }\n    }\n  }\n\n  function legendTitleOffset(item, entry, title, anchor, y, lr, noBar) {\n    const grad = item.datum.type !== 'symbol',\n          vgrad = title.datum.vgrad,\n          e = grad && (lr || !vgrad) && !noBar ? entry.items[0] : entry,\n          s = e.bounds[y ? 'y2' : 'x2'] - item.padding,\n          u = vgrad && lr ? s : 0,\n          v = vgrad && lr ? 0 : s,\n          o = y <= 0 ? 0 : vegaScenegraph.multiLineOffset(title);\n\n    return Math.round(anchor === Start ? u\n      : anchor === End ? (v - o)\n      : 0.5 * (s - o));\n  }\n\n  function translate(view, item, dx, dy) {\n    item.x += dx;\n    item.y += dy;\n    item.bounds.translate(dx, dy);\n    item.mark.bounds.translate(dx, dy);\n    view.dirty(item);\n  }\n\n  function legendEntryLayout(entries) {\n    // get max widths for each column\n    var widths = entries.reduce((w, g) => {\n      w[g.column] = Math.max(g.bounds.x2 - g.x, w[g.column] || 0);\n      return w;\n    }, {});\n\n    // set dimensions of legend entry groups\n    entries.forEach(g => {\n      g.width  = widths[g.column];\n      g.height = g.bounds.y2 - g.y;\n    });\n  }\n\n  function titleLayout(view, mark, width, height, viewBounds) {\n    var group = mark.items[0],\n        frame = group.frame,\n        orient = group.orient,\n        anchor = group.anchor,\n        offset = group.offset,\n        padding = group.padding,\n        title = group.items[0].items[0],\n        subtitle = group.items[1] && group.items[1].items[0],\n        end = (orient === Left || orient === Right) ? height : width,\n        start = 0, x = 0, y = 0, sx = 0, sy = 0, pos;\n\n    if (frame !== Group) {\n      orient === Left ? (start = viewBounds.y2, end = viewBounds.y1)\n        : orient === Right ? (start = viewBounds.y1, end = viewBounds.y2)\n        : (start = viewBounds.x1, end = viewBounds.x2);\n    } else if (orient === Left) {\n      start = height, end = 0;\n    }\n\n    pos = (anchor === Start) ? start\n      : (anchor === End) ? end\n      : (start + end) / 2;\n\n    if (subtitle && subtitle.text) {\n      // position subtitle\n      switch (orient) {\n        case Top:\n        case Bottom:\n          sy = title.bounds.height() + padding;\n          break;\n        case Left:\n          sx = title.bounds.width() + padding;\n          break;\n        case Right:\n          sx = -title.bounds.width() - padding;\n          break;\n      }\n\n      tempBounds.clear().union(subtitle.bounds);\n      tempBounds.translate(sx - (subtitle.x || 0), sy - (subtitle.y || 0));\n      if (set(subtitle, 'x', sx) | set(subtitle, 'y', sy)) {\n        view.dirty(subtitle);\n        subtitle.bounds.clear().union(tempBounds);\n        subtitle.mark.bounds.clear().union(tempBounds);\n        view.dirty(subtitle);\n      }\n\n      tempBounds.clear().union(subtitle.bounds);\n    } else {\n      tempBounds.clear();\n    }\n    tempBounds.union(title.bounds);\n\n    // position title group\n    switch (orient) {\n      case Top:\n        x = pos;\n        y = viewBounds.y1 - tempBounds.height() - offset;\n        break;\n      case Left:\n        x = viewBounds.x1 - tempBounds.width() - offset;\n        y = pos;\n        break;\n      case Right:\n        x = viewBounds.x2 + tempBounds.width() + offset;\n        y = pos;\n        break;\n      case Bottom:\n        x = pos;\n        y = viewBounds.y2 + offset;\n        break;\n      default:\n        x = group.x;\n        y = group.y;\n    }\n\n    if (set(group, 'x', x) | set(group, 'y', y)) {\n      tempBounds.translate(x, y);\n      view.dirty(group);\n      group.bounds.clear().union(tempBounds);\n      mark.bounds.clear().union(tempBounds);\n      view.dirty(group);\n    }\n    return group.bounds;\n  }\n\n  /**\n   * Layout view elements such as axes and legends.\n   * Also performs size adjustments.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {object} params.mark - Scenegraph mark of groups to layout.\n   */\n  function ViewLayout(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n\n  var prototype$5 = vegaUtil.inherits(ViewLayout, vegaDataflow.Transform);\n\n  prototype$5.transform = function(_, pulse) {\n    var view = pulse.dataflow;\n    _.mark.items.forEach(group => {\n      if (_.layout) trellisLayout(view, group, _.layout);\n      layoutGroup(view, group, _);\n    });\n    return shouldReflow(_.mark.group) ? pulse.reflow() : pulse;\n  };\n\n  function shouldReflow(group) {\n    // We typically should reflow if layout is invoked (#2568), as child items\n    // may have resized and reflow ensures group bounds are re-calculated.\n    // However, legend entries have a special exception to avoid instability.\n    // For example, if a selected legend symbol gains a stroke on hover,\n    // we don't want to re-position subsequent elements in the legend.\n    return group && group.mark.role !== 'legend-entry';\n  }\n\n  function layoutGroup(view, group, _) {\n    var items = group.items,\n        width = Math.max(0, group.width || 0),\n        height = Math.max(0, group.height || 0),\n        viewBounds = new vegaScenegraph.Bounds().set(0, 0, width, height),\n        xBounds = viewBounds.clone(),\n        yBounds = viewBounds.clone(),\n        legends = [], title,\n        mark, orient, b, i, n;\n\n    // layout axes, gather legends, collect bounds\n    for (i=0, n=items.length; i<n; ++i) {\n      mark = items[i];\n      switch (mark.role) {\n        case AxisRole:\n          b = isYAxis(mark) ? xBounds : yBounds;\n          b.union(axisLayout(view, mark, width, height));\n          break;\n        case TitleRole:\n          title = mark;\n          break;\n        case LegendRole:\n          legends.push(legendLayout(view, mark));\n          break;\n        case FrameRole:\n        case ScopeRole:\n        case RowHeader:\n        case RowFooter:\n        case RowTitle:\n        case ColHeader:\n        case ColFooter:\n        case ColTitle:\n          xBounds.union(mark.bounds);\n          yBounds.union(mark.bounds);\n          break;\n        default:\n          viewBounds.union(mark.bounds);\n      }\n    }\n\n    // layout legends, adjust viewBounds\n    if (legends.length) {\n      // group legends by orient\n      const l = {};\n      legends.forEach(item => {\n        orient = item.orient || Right;\n        if (orient !== None) (l[orient] || (l[orient] = [])).push(item);\n      });\n\n      // perform grid layout for each orient group\n      for (let orient in l) {\n        const g = l[orient];\n        gridLayout(view, g, legendParams(\n          g, orient, _.legends, xBounds, yBounds, width, height\n        ));\n      }\n\n      // update view bounds\n      legends.forEach(item => {\n        const b = item.bounds;\n\n        if (!b.equals(item._bounds)) {\n          item.bounds = item._bounds;\n          view.dirty(item); // dirty previous location\n          item.bounds = b;\n          view.dirty(item);\n        }\n\n        if (_.autosize && _.autosize.type === Fit) {\n          // For autosize fit, incorporate the orthogonal dimension only.\n          // Legends that overrun the chart area will then be clipped;\n          // otherwise the chart area gets reduced to nothing!\n          switch(item.orient) {\n            case Left:\n            case Right:\n              viewBounds.add(b.x1, 0).add(b.x2, 0);\n              break;\n            case Top:\n            case Bottom:\n              viewBounds.add(0, b.y1).add(0, b.y2);\n          }\n        } else {\n          viewBounds.union(b);\n        }\n      });\n    }\n\n    // combine bounding boxes\n    viewBounds.union(xBounds).union(yBounds);\n\n    // layout title, adjust bounds\n    if (title) {\n      viewBounds.union(titleLayout(view, title, width, height, viewBounds));\n    }\n\n    // override aggregated view bounds if content is clipped\n    if (group.clip) {\n      viewBounds.set(0, 0, group.width || 0, group.height || 0);\n    }\n\n    // perform size adjustment\n    viewSizeLayout(view, group, viewBounds, _);\n  }\n\n  function viewSizeLayout(view, group, viewBounds, _) {\n    const auto = _.autosize || {},\n          type = auto.type;\n\n    if (view._autosize < 1 || !type) return;\n\n    let viewWidth = view._width,\n        viewHeight = view._height,\n        width  = Math.max(0, group.width || 0),\n        left   = Math.max(0, Math.ceil(-viewBounds.x1)),\n        right  = Math.max(0, Math.ceil(viewBounds.x2 - width)),\n        height = Math.max(0, group.height || 0),\n        top    = Math.max(0, Math.ceil(-viewBounds.y1)),\n        bottom = Math.max(0, Math.ceil(viewBounds.y2 - height));\n\n    if (auto.contains === Padding) {\n      const padding = view.padding();\n      viewWidth -= padding.left + padding.right;\n      viewHeight -= padding.top + padding.bottom;\n    }\n\n    if (type === None) {\n      left = 0;\n      top = 0;\n      width = viewWidth;\n      height = viewHeight;\n    }\n\n    else if (type === Fit) {\n      width = Math.max(0, viewWidth - left - right);\n      height = Math.max(0, viewHeight - top - bottom);\n    }\n\n    else if (type === FitX) {\n      width = Math.max(0, viewWidth - left - right);\n      viewHeight = height + top + bottom;\n    }\n\n    else if (type === FitY) {\n      viewWidth = width + left + right;\n      height = Math.max(0, viewHeight - top - bottom);\n    }\n\n    else if (type === Pad) {\n      viewWidth = width + left + right;\n      viewHeight = height + top + bottom;\n    }\n\n    view._resizeView(\n      viewWidth, viewHeight,\n      width, height,\n      [left, top],\n      auto.resize\n    );\n  }\n\n  exports.bound = Bound;\n  exports.identifier = Identifier;\n  exports.mark = Mark;\n  exports.overlap = Overlap;\n  exports.render = Render;\n  exports.viewlayout = ViewLayout;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n};"],
"names":["shadow$provide","global","require","module","exports","factory","define","amd","self","vega","transforms","vegaDataflow","vegaScenegraph","vegaUtil","Bound","params","Transform","call","boundItem","item","bound","opt","bounds","clear","Identifier","getCounter","view","counter","_signals","COUNTER_NAME","add","Mark","lookup","_","g","groups","p","parent","size","get","Object","keys","object","Overlap","intersect","a","b","sep","Math","max","x1","x2","y1","y2","hasOverlap","items","pad","i","n","length","hasBounds","width","height","boundTest","scale","orient","tolerance","range","Bounds","Top","Bottom","set","Infinity","expand","encloses","reset","source","forEach","opacity","Render","property","value","isYAxis","mark","Left","Right","axisLayout","axis","datum","delta","translate","index","grid","ticks","labels","domain","offset","position","minExtent","maxExtent","title","indices","titlePadding","dl","multiLineOffset","tempBounds","union","x","y","s","min","axisTitleLayout","boundStroke","dirty","sign","auto","v","dy","dx","bboxFlush","bboxFull","clone","empty","key","d","isObject","undefined","offsetValue","ceil","gridLayout","nodirty","bbox","Flush","alignCol","align","Column","alignRow","Row","padCol","padding","padRow","ncols","columns","nrows","xOffset","Array","xExtent","xMax","yOffset","yExtent","yMax","boxes","px","py","c","r","Each","All","m","center","anchor","X","Y","End","Middle","round","boundFlush","field","boundFull","layoutHeaders","headers","limit","agg","isX","bf","start","stride","back","band","edge","init","warn","slice","j","h","k","layoutTitle","lookup$1","config","offsets","legends","legendParams","xb","yb","w","Start","mult","floor","column","row","TopLeft","TopRight","BottomLeft","BottomRight","legendLayout","legend","_bounds","ex","entry","ey","tpad","tx","ty","legendTitleOffset","legendBounds","Symbols","type","legendEntryLayout","None","lr","noBar","vgrad","e","u","o","entries","widths","reduce","titleLayout","viewBounds","group","subtitle","end","sy","sx","Group","frame","pos","text","ViewLayout","shouldReflow","role","layoutGroup","xBounds","yBounds","AxisRole","TitleRole","LegendRole","push","FrameRole","ScopeRole","RowHeader","RowFooter","RowTitle","ColHeader","ColFooter","ColTitle","l","equals","autosize","Fit","clip","viewSizeLayout","_autosize","viewWidth","_width","viewHeight","_height","left","right","top","bottom","Padding","contains","FitX","FitY","Pad","_resizeView","resize","inherits","prototype","transform","prototype.transform","pulse","dataflow","marktype","Marks","markBounds","nested","modified","visit","MOD","reflow","rebound","changed","REM","ADD","alignsWith","boundClip","modifies","Definition","prototype$1","prototype$1.transform","id","as","t","prototype$2","prototype$2.transform","scenegraph","markdef","context","interactive","Init","GroupItem","Item","zdirty","methods","parity","filter","greedy","prototype$3","prototype$3.transform","method","materialize","SOURCE","separation","sort","peek","boundScale","boundTolerance","test","boundOrient","prototype$4","prototype$4.transform","ALL","fields","prototype$5","prototype$5.transform","layout","rowheaders","rowfooters","colheaders","colfooters","rowtitle","coltitle","marks","off","cells","headerBand","footerBand","titleAnchor","titleBand","identifier","overlap","render","viewlayout","defineProperty"]
}
