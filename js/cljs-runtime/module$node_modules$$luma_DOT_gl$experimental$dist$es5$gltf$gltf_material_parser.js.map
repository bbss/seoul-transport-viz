{
"version":3,
"file":"module$node_modules$$luma_DOT_gl$experimental$dist$es5$gltf$gltf_material_parser.js",
"lineCount":10,
"mappings":"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",
"sources":["node_modules/@luma_DOT_gl/experimental/dist/es5/gltf/gltf-material-parser.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$luma_DOT_gl$experimental$dist$es5$gltf$gltf_material_parser\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _webgl = require(\"@luma.gl/webgl\");\n\nvar GLTFMaterialParser = function () {\n  function GLTFMaterialParser(gl, _ref) {\n    var attributes = _ref.attributes,\n        material = _ref.material,\n        pbrDebug = _ref.pbrDebug,\n        imageBasedLightingEnvironment = _ref.imageBasedLightingEnvironment,\n        lights = _ref.lights,\n        useTangents = _ref.useTangents;\n    (0, _classCallCheck2[\"default\"])(this, GLTFMaterialParser);\n    this.gl = gl;\n    this.defines = {\n      MANUAL_SRGB: 1,\n      SRGB_FAST_APPROXIMATION: 1\n    };\n\n    if ((0, _webgl.hasFeature)(gl, _webgl.FEATURES.GLSL_TEXTURE_LOD)) {\n      this.defines.USE_TEX_LOD = 1;\n    }\n\n    this.uniforms = {\n      u_Camera: [0, 0, 0],\n      u_MetallicRoughnessValues: [1, 1]\n    };\n    this.parameters = {};\n    this.generatedTextures = [];\n\n    if (imageBasedLightingEnvironment) {\n      this.uniforms.u_DiffuseEnvSampler = imageBasedLightingEnvironment.getDiffuseEnvSampler();\n      this.uniforms.u_SpecularEnvSampler = imageBasedLightingEnvironment.getSpecularEnvSampler();\n      this.uniforms.u_brdfLUT = imageBasedLightingEnvironment.getBrdfTexture();\n      this.uniforms.u_ScaleIBLAmbient = [1, 1];\n    }\n\n    if (pbrDebug) {\n      this.uniforms.u_ScaleDiffBaseMR = [0, 0, 0, 0];\n      this.uniforms.u_ScaleFGDSpec = [0, 0, 0, 0];\n    }\n\n    this.defineIfPresent(attributes.NORMAL, 'HAS_NORMALS');\n    this.defineIfPresent(attributes.TANGENT && useTangents, 'HAS_TANGENTS');\n    this.defineIfPresent(attributes.TEXCOORD_0, 'HAS_UV');\n    this.defineIfPresent(imageBasedLightingEnvironment, 'USE_IBL');\n    this.defineIfPresent(lights, 'USE_LIGHTS');\n    this.defineIfPresent(pbrDebug, 'PBR_DEBUG');\n\n    if (material) {\n      this.parseMaterial(material);\n    }\n  }\n\n  (0, _createClass2[\"default\"])(GLTFMaterialParser, [{\n    key: \"defineIfPresent\",\n    value: function defineIfPresent(value, name) {\n      if (value) {\n        this.defines[name] = 1;\n      }\n    }\n  }, {\n    key: \"parseTexture\",\n    value: function parseTexture(gltfTexture, name) {\n      var define = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      var parameters = gltfTexture.texture && gltfTexture.texture.sampler && gltfTexture.texture.sampler.parameters || {};\n      var texture = new _webgl.Texture2D(this.gl, {\n        id: gltfTexture.name || gltfTexture.id,\n        parameters: parameters,\n        pixelStore: (0, _defineProperty2[\"default\"])({}, this.gl.UNPACK_FLIP_Y_WEBGL, false),\n        data: gltfTexture.texture.source.image\n      });\n      this.uniforms[name] = texture;\n      this.defineIfPresent(define, define);\n      this.generatedTextures.push(texture);\n    }\n  }, {\n    key: \"parsePbrMetallicRoughness\",\n    value: function parsePbrMetallicRoughness(pbrMetallicRoughness) {\n      if (pbrMetallicRoughness.baseColorTexture) {\n        this.parseTexture(pbrMetallicRoughness.baseColorTexture, 'u_BaseColorSampler', 'HAS_BASECOLORMAP');\n      }\n\n      this.uniforms.u_BaseColorFactor = pbrMetallicRoughness.baseColorFactor || [1, 1, 1, 1];\n\n      if (pbrMetallicRoughness.metallicRoughnessTexture) {\n        this.parseTexture(pbrMetallicRoughness.metallicRoughnessTexture, 'u_MetallicRoughnessSampler', 'HAS_METALROUGHNESSMAP');\n      }\n\n      var _pbrMetallicRoughness = pbrMetallicRoughness.metallicFactor,\n          metallicFactor = _pbrMetallicRoughness === void 0 ? 1 : _pbrMetallicRoughness,\n          _pbrMetallicRoughness2 = pbrMetallicRoughness.roughnessFactor,\n          roughnessFactor = _pbrMetallicRoughness2 === void 0 ? 1 : _pbrMetallicRoughness2;\n      this.uniforms.u_MetallicRoughnessValues = [metallicFactor, roughnessFactor];\n    }\n  }, {\n    key: \"parseMaterial\",\n    value: function parseMaterial(material) {\n      if (material.pbrMetallicRoughness) {\n        this.parsePbrMetallicRoughness(material.pbrMetallicRoughness);\n      }\n\n      if (material.normalTexture) {\n        this.parseTexture(material.normalTexture, 'u_NormalSampler', 'HAS_NORMALMAP');\n        var _material$normalTextu = material.normalTexture.scale,\n            scale = _material$normalTextu === void 0 ? 1 : _material$normalTextu;\n        this.uniforms.u_NormalScale = scale;\n      }\n\n      if (material.occlusionTexture) {\n        this.parseTexture(material.occlusionTexture, 'u_OcclusionSampler', 'HAS_OCCLUSIONMAP');\n        var _material$occlusionTe = material.occlusionTexture.strength,\n            strength = _material$occlusionTe === void 0 ? 1 : _material$occlusionTe;\n        this.uniforms.u_OcclusionStrength = strength;\n      }\n\n      if (material.emissiveTexture) {\n        this.parseTexture(material.emissiveTexture, 'u_EmissiveSampler', 'HAS_EMISSIVEMAP');\n        this.uniforms.u_EmissiveFactor = material.emissiveFactor || [0, 0, 0];\n      }\n\n      if (material.alphaMode === 'MASK') {\n        var _material$alphaCutoff = material.alphaCutoff,\n            alphaCutoff = _material$alphaCutoff === void 0 ? 0.5 : _material$alphaCutoff;\n        this.defines.ALPHA_CUTOFF = 1;\n        this.uniforms.u_AlphaCutoff = alphaCutoff;\n      } else if (material.alphaMode === 'BLEND') {\n        _webgl.log.warn('BLEND alphaMode might not work well because it requires mesh sorting')();\n\n        Object.assign(this.parameters, {\n          blend: true,\n          blendEquation: this.gl.FUNC_ADD,\n          blendFunc: [this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA, this.gl.ONE, this.gl.ONE_MINUS_SRC_ALPHA]\n        });\n      }\n    }\n  }]);\n  return GLTFMaterialParser;\n}();\n\nexports[\"default\"] = GLTFMaterialParser;\n//# sourceMappingURL=gltf-material-parser.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","Object","defineProperty","value","_defineProperty2","_classCallCheck2","_createClass2","_webgl","GLTFMaterialParser","gl","_ref","attributes","material","pbrDebug","imageBasedLightingEnvironment","lights","useTangents","defines","MANUAL_SRGB","SRGB_FAST_APPROXIMATION","hasFeature","FEATURES","GLSL_TEXTURE_LOD","USE_TEX_LOD","uniforms","u_Camera","u_MetallicRoughnessValues","parameters","generatedTextures","u_DiffuseEnvSampler","getDiffuseEnvSampler","u_SpecularEnvSampler","getSpecularEnvSampler","u_brdfLUT","getBrdfTexture","u_ScaleIBLAmbient","u_ScaleDiffBaseMR","u_ScaleFGDSpec","defineIfPresent","NORMAL","TANGENT","TEXCOORD_0","parseMaterial","key","name","parseTexture","gltfTexture","define","arguments","length","undefined","texture","Texture2D","id","sampler","pixelStore","UNPACK_FLIP_Y_WEBGL","data","source","image","push","parsePbrMetallicRoughness","pbrMetallicRoughness","baseColorTexture","u_BaseColorFactor","baseColorFactor","metallicRoughnessTexture","_pbrMetallicRoughness","metallicFactor","_pbrMetallicRoughness2","roughnessFactor","normalTexture","_material$normalTextu","scale","u_NormalScale","occlusionTexture","_material$occlusionTe","strength","u_OcclusionStrength","emissiveTexture","u_EmissiveFactor","emissiveFactor","alphaMode","_material$alphaCutoff","alphaCutoff","ALPHA_CUTOFF","u_AlphaCutoff","log","warn","assign","blend","blendEquation","FUNC_ADD","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE"]
}
