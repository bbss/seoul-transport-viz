shadow$provide.module$node_modules$$math_DOT_gl$culling$dist$es5$lib$culling_volume=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports["default"]=void 0;var _classCallCheck2=global(require("module$node_modules$$babel$runtime$helpers$classCallCheck")),_createClass2=global(require("module$node_modules$$babel$runtime$helpers$createClass")),_core=require("module$node_modules$$math_DOT_gl$core$dist$es5$index"),
_constants=require("module$node_modules$$math_DOT_gl$culling$dist$es5$constants"),_plane=global(require("module$node_modules$$math_DOT_gl$culling$dist$es5$lib$plane")),faces=[new _core.Vector3([1,0,0]),new _core.Vector3([0,1,0]),new _core.Vector3([0,0,1])],scratchPlaneCenter=new _core.Vector3,scratchPlaneNormal=new _core.Vector3;new _plane["default"](new _core.Vector3(1,0,0),0);require=function(){function CullingVolume(){var planes=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[];(0,_classCallCheck2["default"])(this,
CullingVolume);this.planes=planes;(0,_core.assert)(this.planes.every(function(plane){return plane instanceof _plane["default"]}))}(0,_createClass2["default"])(CullingVolume,null,[{key:"MASK_OUTSIDE",get:function(){return 4294967295}},{key:"MASK_INSIDE",get:function(){return 0}},{key:"MASK_INDETERMINATE",get:function(){return 2147483647}}]);(0,_createClass2["default"])(CullingVolume,[{key:"fromBoundingSphere",value:function(boundingSphere){this.planes.length=2*faces.length;var center=boundingSphere.center;
boundingSphere=boundingSphere.radius;var planeIndex=0,_iteratorNormalCompletion=!0,_didIteratorError=!1,_iteratorError=void 0;try{for(var _iterator=faces[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=!0){var faceNormal=_step.value,plane0=this.planes[planeIndex],plane1=this.planes[planeIndex+1];plane0||(plane0=this.planes[planeIndex]=new _plane["default"]);plane1||(plane1=this.planes[planeIndex+1]=new _plane["default"]);var plane0Center=
scratchPlaneCenter.copy(faceNormal).scale(-boundingSphere).add(center);faceNormal.dot(plane0Center);plane0.fromPointNormal(plane0Center,faceNormal);var plane1Center=scratchPlaneCenter.copy(faceNormal).scale(boundingSphere).add(center),negatedFaceNormal=scratchPlaneNormal.copy(faceNormal).negate();negatedFaceNormal.dot(plane1Center);plane1.fromPointNormal(plane1Center,negatedFaceNormal);planeIndex+=2}}catch(err){_didIteratorError=!0,_iteratorError=err}finally{try{if(!_iteratorNormalCompletion&&null!=
_iterator["return"])_iterator["return"]()}finally{if(_didIteratorError)throw _iteratorError;}}return this}},{key:"computeVisibility",value:function(boundingVolume){(0,_core.assert)(boundingVolume);var intersect=_constants.INTERSECTION.INSIDE,_iteratorNormalCompletion2=!0,_didIteratorError2=!1,_iteratorError2=void 0;try{for(var _iterator2=this.planes[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=!0)switch(boundingVolume.intersectPlane(_step2.value)){case _constants.INTERSECTION.OUTSIDE:return _constants.INTERSECTION.OUTSIDE;
case _constants.INTERSECTION.INTERSECTING:intersect=_constants.INTERSECTION.INTERSECTING}}catch(err){_didIteratorError2=!0,_iteratorError2=err}finally{try{if(!_iteratorNormalCompletion2&&null!=_iterator2["return"])_iterator2["return"]()}finally{if(_didIteratorError2)throw _iteratorError2;}}return intersect}},{key:"computeVisibilityWithPlaneMask",value:function(boundingVolume,parentPlaneMask){(0,_core.assert)(boundingVolume,"boundingVolume is required.");(0,_core.assert)(Number.isFinite(parentPlaneMask),
"parentPlaneMask is required.");if(parentPlaneMask===CullingVolume.MASK_OUTSIDE||parentPlaneMask===CullingVolume.MASK_INSIDE)return parentPlaneMask;for(var mask=CullingVolume.MASK_INSIDE,planes=this.planes,k=0;k<this.planes.length;++k){var flag=31>k?1<<k:0;if(!(31>k&&0===(parentPlaneMask&flag))){var result=boundingVolume.intersectPlane(planes[k]);if(result===_constants.INTERSECTION.OUTSIDE)return CullingVolume.MASK_OUTSIDE;result===_constants.INTERSECTION.INTERSECTING&&(mask|=flag)}}return mask}}]);
return CullingVolume}();exports["default"]=require}
//# sourceMappingURL=module$node_modules$$math_DOT_gl$culling$dist$es5$lib$culling_volume.js.map
