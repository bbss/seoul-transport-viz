{
"version":3,
"file":"module$node_modules$$loaders_DOT_gl$tiles$dist$es5$tileset$helpers$transform_utils.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,mFAAA,CAAuG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG/IC,MAAAC,eAAA,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAAI,wBAAA,CAQAA,QAAgC,CAACC,UAAD,CAAaC,IAAb,CAAmB,CACjD,CAAC,CAAA,CAAGC,YAAAC,OAAJ,EAAyBH,UAAzB,CACA,EAAC,CAAA,CAAGE,YAAAC,OAAJ,EAAyBF,IAAzB,CAFiD,KAG7CG,UAAYH,IAAAG,UAHiC,CAI7CC,WAAaJ,IAAAI,WAJgC,CAM7CC,OAASN,UAAAO,eAAAD,OACTE,WAAAA,CAAc,IAAIC,KAAAC,QAAJ,CAFMV,UAAAW,kBAEN,CAEdP,UAAJ,EACEI,UAAAI,UAAA,CAAsBR,SAAtB,CAGEC;UAAJ,GACMQ,SACJ,CADeC,CAAA,IAAIL,KAAAC,QAAJI,SAAA,CAA4BC,IAAAC,GAA5B,CAAsC,CAAtC,CACf,CAAAR,UAAA,CAAcA,UAAAS,cAAA,CAA0BJ,SAA1B,CAFhB,CAKIZ,KAAAiB,YAAJ,EACEV,UAAAI,UAAA,CAAsBX,IAAAkB,sBAAtB,CAAAC,MAAA,CAAwDnB,IAAAoB,qBAAxD,CAGEC,UAAAA,CAAkB,IAAIb,KAAAc,QAAJ,CAAkBjB,MAAlB,CACtBL,KAAAuB,qBAAA,CAA4BhB,UAC5BP,KAAAqB,gBAAA,CAAuBA,SAEnBG,OAAAA,CAAqBC,WAAAC,UAAAC,MAAAC,wBAAA,CAAoDP,SAApD,CAAqE,IAAIb,KAAAc,QAAzE,CAIrBO,UAAAA,CAFuBJ,WAAAC,UAAAC,MAAAG,wBAAAC,CAAoDV,SAApDU,CAEFC,OAAA,EACzBhC,KAAAiC,wBAAA;AAA+BJ,SAAAb,cAAA,CAAiCT,UAAjC,CAC/BP,KAAAwB,mBAAA,CAA0BA,MAC1BxB,KAAAO,YAAA,CAAmBP,IAAAiC,wBAjC8B,CANnD,KAAIR,YAAcjC,OAAA,CAAQ,4DAAR,CAAlB,CAEIgB,MAAQhB,OAAA,CAAQ,sDAAR,CAFZ,CAIIS,aAAeT,OAAA,CAAQ,iEAAR,CAZ4H;",
"sources":["node_modules/@loaders_DOT_gl/tiles/dist/es5/tileset/helpers/transform-utils.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$loaders_DOT_gl$tiles$dist$es5$tileset$helpers$transform_utils\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateTransformProps = calculateTransformProps;\n\nvar _geospatial = require(\"@math.gl/geospatial\");\n\nvar _core = require(\"@math.gl/core\");\n\nvar _loaderUtils = require(\"@loaders.gl/loader-utils\");\n\nfunction calculateTransformProps(tileHeader, tile) {\n  (0, _loaderUtils.assert)(tileHeader);\n  (0, _loaderUtils.assert)(tile);\n  var rtcCenter = tile.rtcCenter,\n      rotateYtoZ = tile.rotateYtoZ;\n  var computedTransform = tileHeader.computedTransform,\n      center = tileHeader.boundingVolume.center;\n  var modelMatrix = new _core.Matrix4(computedTransform);\n\n  if (rtcCenter) {\n    modelMatrix.translate(rtcCenter);\n  }\n\n  if (rotateYtoZ) {\n    var rotation = new _core.Matrix4().rotateX(Math.PI / 2);\n    modelMatrix = modelMatrix.multiplyRight(rotation);\n  }\n\n  if (tile.isQuantized) {\n    modelMatrix.translate(tile.quantizedVolumeOffset).scale(tile.quantizedVolumeScale);\n  }\n\n  var cartesianOrigin = new _core.Vector3(center);\n  tile.cartesianModelMatrix = modelMatrix;\n  tile.cartesianOrigin = cartesianOrigin;\n\n  var cartographicOrigin = _geospatial.Ellipsoid.WGS84.cartesianToCartographic(cartesianOrigin, new _core.Vector3());\n\n  var fromFixedFrameMatrix = _geospatial.Ellipsoid.WGS84.eastNorthUpToFixedFrame(cartesianOrigin);\n\n  var toFixedFrameMatrix = fromFixedFrameMatrix.invert();\n  tile.cartographicModelMatrix = toFixedFrameMatrix.multiplyRight(modelMatrix);\n  tile.cartographicOrigin = cartographicOrigin;\n  tile.modelMatrix = tile.cartographicModelMatrix;\n}\n//# sourceMappingURL=transform-utils.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","calculateTransformProps","tileHeader","tile","_loaderUtils","assert","rtcCenter","rotateYtoZ","center","boundingVolume","modelMatrix","_core","Matrix4","computedTransform","translate","rotation","rotateX","Math","PI","multiplyRight","isQuantized","quantizedVolumeOffset","scale","quantizedVolumeScale","cartesianOrigin","Vector3","cartesianModelMatrix","cartographicOrigin","_geospatial","Ellipsoid","WGS84","cartesianToCartographic","toFixedFrameMatrix","eastNorthUpToFixedFrame","fromFixedFrameMatrix","invert","cartographicModelMatrix"]
}
