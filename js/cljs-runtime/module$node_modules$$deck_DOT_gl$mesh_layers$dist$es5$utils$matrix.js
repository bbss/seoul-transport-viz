shadow$provide.module$node_modules$$deck_DOT_gl$mesh_layers$dist$es5$utils$matrix=function(global,require,module,exports){function calculateTransformMatrix(targetMatrix,orientation,scale){var pitch=orientation[0]*RADIAN_PER_DEGREE,yaw=orientation[1]*RADIAN_PER_DEGREE,roll=orientation[2]*RADIAN_PER_DEGREE;orientation=Math.sin(roll);var sp=Math.sin(pitch),sw=Math.sin(yaw);roll=Math.cos(roll);pitch=Math.cos(pitch);yaw=Math.cos(yaw);var scx=scale[0],scy=scale[1];scale=scale[2];targetMatrix[0]=scx*yaw*
pitch;targetMatrix[1]=scx*sw*pitch;targetMatrix[2]=scx*-sp;targetMatrix[3]=scy*(-sw*roll+yaw*sp*orientation);targetMatrix[4]=scy*(yaw*roll+sw*sp*orientation);targetMatrix[5]=scy*pitch*orientation;targetMatrix[6]=scale*(sw*orientation+yaw*sp*roll);targetMatrix[7]=scale*(-yaw*orientation+sw*sp*roll);targetMatrix[8]=scale*pitch*roll}function getExtendedMat3FromMat4(mat4){mat4[0]=mat4[0];mat4[1]=mat4[1];mat4[2]=mat4[2];mat4[3]=mat4[4];mat4[4]=mat4[5];mat4[5]=mat4[6];mat4[6]=mat4[8];mat4[7]=mat4[9];mat4[8]=
mat4[10];mat4[9]=mat4[12];mat4[10]=mat4[13];mat4[11]=mat4[14];return mat4.subarray(0,12)}Object.defineProperty(exports,"__esModule",{value:!0});exports.shouldComposeModelMatrix=function(viewport,coordinateSystem){return coordinateSystem===_core.COORDINATE_SYSTEM.CARTESIAN||coordinateSystem===_core.COORDINATE_SYSTEM.METER_OFFSETS||coordinateSystem===_core.COORDINATE_SYSTEM.DEFAULT&&!viewport.isGeospatial};exports.MATRIX_ATTRIBUTES=void 0;var _core=require("module$node_modules$$deck_DOT_gl$core$dist$es5$index"),
RADIAN_PER_DEGREE=Math.PI/180,modelMatrix=new Float32Array(16),valueArray=new Float32Array(12);exports.MATRIX_ATTRIBUTES={size:12,accessor:["getOrientation","getScale","getTranslation","getTransformMatrix"],shaderAttributes:{instanceModelMatrix__LOCATION_0:{size:3,elementOffset:0},instanceModelMatrix__LOCATION_1:{size:3,elementOffset:3},instanceModelMatrix__LOCATION_2:{size:3,elementOffset:6},instanceTranslation:{size:3,elementOffset:9}},update:function(attribute,_ref){var startRow=_ref.startRow,
endRow=_ref.endRow,_this$props=this.props,data=_this$props.data;_ref=_this$props.getOrientation;var getScale=_this$props.getScale,getTranslation=_this$props.getTranslation;_this$props=_this$props.getTransformMatrix;var arrayMatrix=Array.isArray(_this$props),constantMatrix=arrayMatrix&&16===_this$props.length,constantScale=Array.isArray(getScale),constantOrientation=Array.isArray(_ref),constantTranslation=Array.isArray(getTranslation);arrayMatrix=constantMatrix||!arrayMatrix&&!!_this$props(data[0]);
attribute.constant=arrayMatrix?constantMatrix:constantOrientation&&constantScale&&constantTranslation;var instanceModelMatrixData=attribute.value;if(attribute.constant){if(arrayMatrix){modelMatrix.set(_this$props);var matrix=getExtendedMat3FromMat4(modelMatrix)}else matrix=valueArray,calculateTransformMatrix(matrix,_ref,getScale),matrix.set(getTranslation,9);attribute.value=new Float32Array(matrix)}else{attribute=startRow*attribute.size;endRow=(0,_core.createIterable)(data,startRow,endRow);startRow=
endRow.iterable;endRow=endRow.objectInfo;data=!0;var _didIteratorError=!1,_iteratorError=void 0;try{matrix=startRow[Symbol.iterator]();for(var _step;!(data=(_step=matrix.next()).done);data=!0){var object=_step.value;endRow.index++;startRow=void 0;if(arrayMatrix)modelMatrix.set(constantMatrix?_this$props:_this$props(object,endRow)),startRow=getExtendedMat3FromMat4(modelMatrix);else{startRow=valueArray;var _orientation=constantOrientation?_ref:_ref(object,endRow),_scale=constantScale?getScale:getScale(object,
endRow);calculateTransformMatrix(startRow,_orientation,_scale);startRow.set(constantTranslation?getTranslation:getTranslation(object,endRow),9)}instanceModelMatrixData[attribute++]=startRow[0];instanceModelMatrixData[attribute++]=startRow[1];instanceModelMatrixData[attribute++]=startRow[2];instanceModelMatrixData[attribute++]=startRow[3];instanceModelMatrixData[attribute++]=startRow[4];instanceModelMatrixData[attribute++]=startRow[5];instanceModelMatrixData[attribute++]=startRow[6];instanceModelMatrixData[attribute++]=
startRow[7];instanceModelMatrixData[attribute++]=startRow[8];instanceModelMatrixData[attribute++]=startRow[9];instanceModelMatrixData[attribute++]=startRow[10];instanceModelMatrixData[attribute++]=startRow[11]}}catch(err){_didIteratorError=!0,_iteratorError=err}finally{try{if(!data&&null!=matrix["return"])matrix["return"]()}finally{if(_didIteratorError)throw _iteratorError;}}}}}}
//# sourceMappingURL=module$node_modules$$deck_DOT_gl$mesh_layers$dist$es5$utils$matrix.js.map
