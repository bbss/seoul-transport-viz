{
"version":3,
"file":"module$node_modules$$deck_DOT_gl$core$dist$es5$effects$post_process_effect.js",
"lineCount":8,
"mappings":"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",
"sources":["node_modules/@deck_DOT_gl/core/dist/es5/effects/post-process-effect.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$deck_DOT_gl$core$dist$es5$effects$post_process_effect\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _effect = _interopRequireDefault(require(\"../lib/effect\"));\n\nvar _screenPass = _interopRequireDefault(require(\"../passes/screen-pass\"));\n\nvar _core = require(\"@luma.gl/core\");\n\nvar PostProcessEffect = function (_Effect) {\n  (0, _inherits2[\"default\"])(PostProcessEffect, _Effect);\n\n  function PostProcessEffect(module) {\n    var _this;\n\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    (0, _classCallCheck2[\"default\"])(this, PostProcessEffect);\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(PostProcessEffect).call(this, props));\n    _this.id = \"\".concat(module.name, \"-pass\");\n    (0, _core.normalizeShaderModule)(module);\n    _this.module = module;\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(PostProcessEffect, [{\n    key: \"postRender\",\n    value: function postRender(gl, params) {\n      if (!this.passes) {\n        this.passes = createPasses(gl, this.module, this.id, this.props);\n      }\n\n      var target = params.target;\n      var inputBuffer = params.inputBuffer;\n      var outputBuffer = params.swapBuffer;\n\n      for (var index = 0; index < this.passes.length; index++) {\n        if (target && index === this.passes.length - 1) {\n          outputBuffer = target;\n        }\n\n        this.passes[index].render({\n          inputBuffer: inputBuffer,\n          outputBuffer: outputBuffer\n        });\n        var switchBuffer = outputBuffer;\n        outputBuffer = inputBuffer;\n        inputBuffer = switchBuffer;\n      }\n\n      return inputBuffer;\n    }\n  }, {\n    key: \"cleanup\",\n    value: function cleanup() {\n      if (this.passes) {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = this.passes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var pass = _step.value;\n            pass[\"delete\"]();\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n              _iterator[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        this.passes = null;\n      }\n    }\n  }]);\n  return PostProcessEffect;\n}(_effect[\"default\"]);\n\nexports[\"default\"] = PostProcessEffect;\n\nfunction createPasses(gl, module, id, moduleSettings) {\n  if (module.filter || module.sampler) {\n    var fs = getFragmentShaderForRenderPass(module);\n    var pass = new _screenPass[\"default\"](gl, {\n      id: id,\n      module: module,\n      fs: fs,\n      moduleSettings: moduleSettings\n    });\n    return [pass];\n  }\n\n  var passes = module.passes || [];\n  return passes.map(function (pass, index) {\n    var fs = getFragmentShaderForRenderPass(module, pass);\n    var idn = \"\".concat(id, \"-\").concat(index);\n    return new _screenPass[\"default\"](gl, {\n      id: idn,\n      module: module,\n      fs: fs,\n      moduleSettings: moduleSettings\n    });\n  });\n}\n\nvar FILTER_FS_TEMPLATE = function FILTER_FS_TEMPLATE(func) {\n  return \"uniform sampler2D texture;\\nuniform vec2 texSize;\\n\\nvarying vec2 position;\\nvarying vec2 coordinate;\\nvarying vec2 uv;\\n\\nvoid main() {\\n  vec2 texCoord = coordinate;\\n\\n  gl_FragColor = texture2D(texture, texCoord);\\n  gl_FragColor = \".concat(func, \"(gl_FragColor, texSize, texCoord);\\n}\\n\");\n};\n\nvar SAMPLER_FS_TEMPLATE = function SAMPLER_FS_TEMPLATE(func) {\n  return \"uniform sampler2D texture;\\nuniform vec2 texSize;\\n\\nvarying vec2 position;\\nvarying vec2 coordinate;\\nvarying vec2 uv;\\n\\nvoid main() {\\n  vec2 texCoord = coordinate;\\n\\n  gl_FragColor = \".concat(func, \"(texture, texSize, texCoord);\\n}\\n\");\n};\n\nfunction getFragmentShaderForRenderPass(module) {\n  var pass = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : module;\n\n  if (pass.filter) {\n    var func = typeof pass.filter === 'string' ? pass.filter : \"\".concat(module.name, \"_filterColor\");\n    return FILTER_FS_TEMPLATE(func);\n  }\n\n  if (pass.sampler) {\n    var _func = typeof pass.sampler === 'string' ? pass.sampler : \"\".concat(module.name, \"_sampleColor\");\n\n    return SAMPLER_FS_TEMPLATE(_func);\n  }\n\n  return null;\n}\n//# sourceMappingURL=post-process-effect.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","createPasses","gl","id","moduleSettings","filter","sampler","fs","getFragmentShaderForRenderPass","pass","_screenPass","map","passes","index","idn","concat","arguments","length","undefined","func","name","_func","_interopRequireDefault","Object","defineProperty","value","_classCallCheck2","_createClass2","_possibleConstructorReturn2","_getPrototypeOf2","_inherits2","_effect","_core","PostProcessEffect","_Effect","props","_this","call","normalizeShaderModule","key","postRender","params","target","inputBuffer","outputBuffer","swapBuffer","render","switchBuffer","cleanup","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","Symbol","iterator","_step","done","next","err"]
}
