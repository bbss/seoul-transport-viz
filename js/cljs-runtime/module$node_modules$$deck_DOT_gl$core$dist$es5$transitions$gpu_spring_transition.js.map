{
"version":3,
"file":"module$node_modules$$deck_DOT_gl$core$dist$es5$transitions$gpu_spring_transition.js",
"lineCount":12,
"mappings":"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",
"sources":["node_modules/@deck_DOT_gl/core/dist/es5/transitions/gpu-spring-transition.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$deck_DOT_gl$core$dist$es5$transitions$gpu_spring_transition\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _core = require(\"@luma.gl/core\");\n\nvar _attributeTransitionUtils = require(\"../lib/attribute/attribute-transition-utils\");\n\nvar _attribute = _interopRequireDefault(require(\"../lib/attribute/attribute\"));\n\nvar _transition = _interopRequireDefault(require(\"./transition\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar GPUSpringTransition = function () {\n  function GPUSpringTransition(_ref) {\n    var gl = _ref.gl,\n        attribute = _ref.attribute,\n        timeline = _ref.timeline;\n    (0, _classCallCheck2[\"default\"])(this, GPUSpringTransition);\n    this.gl = gl;\n    this.type = 'spring';\n    this.transition = new _transition[\"default\"](timeline);\n    this.attribute = attribute;\n    this.attributeInTransition = new _attribute[\"default\"](gl, Object.assign({}, attribute.settings, {\n      normalized: false\n    }));\n    this.currentStartIndices = attribute.startIndices;\n    this.currentLength = 0;\n    this.texture = getTexture(gl);\n    this.framebuffer = getFramebuffer(gl, this.texture);\n    this.transform = getTransform(gl, attribute, this.framebuffer);\n    var bufferOpts = {\n      byteLength: 0,\n      usage: 35050\n    };\n    this.buffers = [new _core.Buffer(gl, bufferOpts), new _core.Buffer(gl, bufferOpts), new _core.Buffer(gl, bufferOpts)];\n  }\n\n  (0, _createClass2[\"default\"])(GPUSpringTransition, [{\n    key: \"start\",\n    value: function start(transitionSettings, numInstances) {\n      var gl = this.gl,\n          buffers = this.buffers,\n          attribute = this.attribute;\n      var padBufferOpts = {\n        numInstances: numInstances,\n        attribute: attribute,\n        fromLength: this.currentLength,\n        fromStartIndices: this.currentStartIndices,\n        getData: transitionSettings.enter\n      };\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = buffers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var buffer = _step.value;\n          (0, _attributeTransitionUtils.padBuffer)(_objectSpread({\n            buffer: buffer\n          }, padBufferOpts));\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      this.currentStartIndices = attribute.startIndices;\n      this.currentLength = (0, _attributeTransitionUtils.getAttributeBufferLength)(attribute, numInstances);\n      this.attributeInTransition.update({\n        buffer: buffers[1],\n        value: attribute.value\n      });\n      this.transition.start(transitionSettings);\n      this.transform.update({\n        elementCount: Math.floor(this.currentLength / attribute.size),\n        sourceBuffers: {\n          aTo: (0, _attributeTransitionUtils.getSourceBufferAttribute)(gl, attribute)\n        }\n      });\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var buffers = this.buffers,\n          transform = this.transform,\n          framebuffer = this.framebuffer,\n          transition = this.transition;\n      var updated = transition.update();\n\n      if (!updated) {\n        return false;\n      }\n\n      transform.update({\n        sourceBuffers: {\n          aPrev: buffers[0],\n          aCur: buffers[1]\n        },\n        feedbackBuffers: {\n          vNext: buffers[2]\n        }\n      });\n      transform.run({\n        framebuffer: framebuffer,\n        discard: false,\n        clearRenderTarget: true,\n        uniforms: {\n          stiffness: transition.settings.stiffness,\n          damping: transition.settings.damping\n        },\n        parameters: {\n          depthTest: false,\n          blend: true,\n          viewport: [0, 0, 1, 1],\n          blendFunc: [1, 1],\n          blendEquation: [32776, 32776]\n        }\n      });\n      (0, _attributeTransitionUtils.cycleBuffers)(buffers);\n      this.attributeInTransition.update({\n        buffer: buffers[1],\n        value: this.attribute.value\n      });\n      var isTransitioning = (0, _core.readPixelsToArray)(framebuffer)[0] > 0;\n\n      if (!isTransitioning) {\n        transition.end();\n      }\n\n      return true;\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      this.transition.cancel();\n      this.transform[\"delete\"]();\n\n      while (this.buffers.length) {\n        this.buffers.pop()[\"delete\"]();\n      }\n\n      this.texture[\"delete\"]();\n      this.texture = null;\n      this.framebuffer[\"delete\"]();\n      this.framebuffer = null;\n    }\n  }, {\n    key: \"inProgress\",\n    get: function get() {\n      return this.transition.inProgress;\n    }\n  }]);\n  return GPUSpringTransition;\n}();\n\nexports[\"default\"] = GPUSpringTransition;\n\nfunction getTransform(gl, attribute, framebuffer) {\n  var attributeType = (0, _attributeTransitionUtils.getAttributeTypeFromSize)(attribute.size);\n  return new _core.Transform(gl, {\n    framebuffer: framebuffer,\n    vs: \"\\n#define SHADER_NAME spring-transition-vertex-shader\\n\\n#define EPSILON 0.00001\\n\\nuniform float stiffness;\\nuniform float damping;\\nattribute ATTRIBUTE_TYPE aPrev;\\nattribute ATTRIBUTE_TYPE aCur;\\nattribute ATTRIBUTE_TYPE aTo;\\nvarying ATTRIBUTE_TYPE vNext;\\nvarying float vIsTransitioningFlag;\\n\\nATTRIBUTE_TYPE getNextValue(ATTRIBUTE_TYPE cur, ATTRIBUTE_TYPE prev, ATTRIBUTE_TYPE dest) {\\n  ATTRIBUTE_TYPE velocity = cur - prev;\\n  ATTRIBUTE_TYPE delta = dest - cur;\\n  ATTRIBUTE_TYPE spring = delta * stiffness;\\n  ATTRIBUTE_TYPE damper = velocity * -1.0 * damping;\\n  return spring + damper + velocity + cur;\\n}\\n\\nvoid main(void) {\\n  bool isTransitioning = length(aCur - aPrev) > EPSILON || length(aTo - aCur) > EPSILON;\\n  vIsTransitioningFlag = isTransitioning ? 1.0 : 0.0;\\n\\n  vNext = getNextValue(aCur, aPrev, aTo);\\n  gl_Position = vec4(0, 0, 0, 1);\\n  gl_PointSize = 100.0;\\n}\\n\",\n    fs: \"\\n#define SHADER_NAME spring-transition-is-transitioning-fragment-shader\\n\\nvarying float vIsTransitioningFlag;\\n\\nvoid main(void) {\\n  if (vIsTransitioningFlag == 0.0) {\\n    discard;\\n  }\\n  gl_FragColor = vec4(1.0);\\n}\",\n    defines: {\n      ATTRIBUTE_TYPE: attributeType\n    },\n    varyings: ['vNext']\n  });\n}\n\nfunction getTexture(gl) {\n  return new _core.Texture2D(gl, {\n    data: new Uint8Array(4),\n    format: 6408,\n    type: 5121,\n    border: 0,\n    mipmaps: false,\n    dataFormat: 6408,\n    width: 1,\n    height: 1\n  });\n}\n\nfunction getFramebuffer(gl, texture) {\n  return new _core.Framebuffer(gl, {\n    id: 'spring-transition-is-transitioning-framebuffer',\n    width: 1,\n    height: 1,\n    attachments: (0, _defineProperty2[\"default\"])({}, 36064, texture)\n  });\n}\n//# sourceMappingURL=gpu-spring-transition.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty2","getOwnPropertyDescriptors","defineProperties","defineProperty","_interopRequireDefault","value","_classCallCheck2","_createClass2","_core","_attributeTransitionUtils","_attribute","_transition","GPUSpringTransition","_ref","gl","attribute","timeline","type","transition","attributeInTransition","assign","settings","normalized","currentStartIndices","startIndices","currentLength","texture","Texture2D","data","Uint8Array","format","border","mipmaps","dataFormat","width","height","framebuffer","Framebuffer","id","attachments","attributeType","getAttributeTypeFromSize","size","transform","Transform","vs","fs","defines","ATTRIBUTE_TYPE","varyings","bufferOpts","byteLength","usage","buffers","Buffer","start","transitionSettings","numInstances","padBufferOpts","fromLength","fromStartIndices","getData","enter","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iterator","Symbol","iterator","_step","done","next","buffer","padBuffer","err","getAttributeBufferLength","update","elementCount","Math","floor","sourceBuffers","aTo","getSourceBufferAttribute","updated","aPrev","aCur","feedbackBuffers","vNext","run","discard","clearRenderTarget","uniforms","stiffness","damping","parameters","depthTest","blend","viewport","blendFunc","blendEquation","cycleBuffers","readPixelsToArray","end","cancel","pop","get","inProgress"]
}
