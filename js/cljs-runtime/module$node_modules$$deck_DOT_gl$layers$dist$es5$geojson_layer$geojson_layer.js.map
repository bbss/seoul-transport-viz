{
"version":3,
"file":"module$node_modules$$deck_DOT_gl$layers$dist$es5$geojson_layer$geojson_layer.js",
"lineCount":19,
"mappings":"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",
"sources":["node_modules/@deck_DOT_gl/layers/dist/es5/geojson-layer/geojson-layer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$deck_DOT_gl$layers$dist$es5$geojson_layer$geojson_layer\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _core = require(\"@deck.gl/core\");\n\nvar _scatterplotLayer = _interopRequireDefault(require(\"../scatterplot-layer/scatterplot-layer\"));\n\nvar _pathLayer = _interopRequireDefault(require(\"../path-layer/path-layer\"));\n\nvar _solidPolygonLayer = _interopRequireDefault(require(\"../solid-polygon-layer/solid-polygon-layer\"));\n\nvar _utils = require(\"../utils\");\n\nvar _geojson = require(\"./geojson\");\n\nvar defaultLineColor = [0, 0, 0, 255];\nvar defaultFillColor = [0, 0, 0, 255];\nvar defaultProps = {\n  stroked: true,\n  filled: true,\n  extruded: false,\n  wireframe: false,\n  lineWidthUnits: 'meters',\n  lineWidthScale: 1,\n  lineWidthMinPixels: 0,\n  lineWidthMaxPixels: Number.MAX_SAFE_INTEGER,\n  lineJointRounded: false,\n  lineMiterLimit: 4,\n  elevationScale: 1,\n  pointRadiusUnits: 'meters',\n  pointRadiusScale: 1,\n  pointRadiusMinPixels: 0,\n  pointRadiusMaxPixels: Number.MAX_SAFE_INTEGER,\n  getLineColor: {\n    type: 'accessor',\n    value: defaultLineColor\n  },\n  getFillColor: {\n    type: 'accessor',\n    value: defaultFillColor\n  },\n  getRadius: {\n    type: 'accessor',\n    value: 1\n  },\n  getLineWidth: {\n    type: 'accessor',\n    value: 1\n  },\n  getElevation: {\n    type: 'accessor',\n    value: 1000\n  },\n  material: true\n};\n\nfunction getCoordinates(f) {\n  return f.geometry.coordinates;\n}\n\nvar GeoJsonLayer = function (_CompositeLayer) {\n  (0, _inherits2[\"default\"])(GeoJsonLayer, _CompositeLayer);\n\n  function GeoJsonLayer() {\n    (0, _classCallCheck2[\"default\"])(this, GeoJsonLayer);\n    return (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(GeoJsonLayer).apply(this, arguments));\n  }\n\n  (0, _createClass2[\"default\"])(GeoJsonLayer, [{\n    key: \"initializeState\",\n    value: function initializeState() {\n      this.state = {\n        features: {}\n      };\n\n      if (this.props.getLineDashArray) {\n        _core.log.removed('getLineDashArray', 'PathStyleExtension')();\n      }\n    }\n  }, {\n    key: \"updateState\",\n    value: function updateState(_ref) {\n      var props = _ref.props,\n          changeFlags = _ref.changeFlags;\n\n      if (!changeFlags.dataChanged) {\n        return;\n      }\n\n      var features = (0, _geojson.getGeojsonFeatures)(props.data);\n      var wrapFeature = this.getSubLayerRow.bind(this);\n\n      if (Array.isArray(changeFlags.dataChanged)) {\n        var oldFeatures = this.state.features;\n        var newFeatures = {};\n        var featuresDiff = {};\n\n        for (var key in oldFeatures) {\n          newFeatures[key] = oldFeatures[key].slice();\n          featuresDiff[key] = [];\n        }\n\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = changeFlags.dataChanged[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var dataRange = _step.value;\n            var partialFeatures = (0, _geojson.separateGeojsonFeatures)(features, wrapFeature, dataRange);\n\n            for (var _key in oldFeatures) {\n              featuresDiff[_key].push((0, _utils.replaceInRange)({\n                data: newFeatures[_key],\n                getIndex: function getIndex(f) {\n                  return f.__source.index;\n                },\n                dataRange: dataRange,\n                replace: partialFeatures[_key]\n              }));\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n              _iterator[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        this.setState({\n          features: newFeatures,\n          featuresDiff: featuresDiff\n        });\n      } else {\n        this.setState({\n          features: (0, _geojson.separateGeojsonFeatures)(features, wrapFeature),\n          featuresDiff: {}\n        });\n      }\n    }\n  }, {\n    key: \"renderLayers\",\n    value: function renderLayers() {\n      var _this$state = this.state,\n          features = _this$state.features,\n          featuresDiff = _this$state.featuresDiff;\n      var pointFeatures = features.pointFeatures,\n          lineFeatures = features.lineFeatures,\n          polygonFeatures = features.polygonFeatures,\n          polygonOutlineFeatures = features.polygonOutlineFeatures;\n      var _this$props = this.props,\n          stroked = _this$props.stroked,\n          filled = _this$props.filled,\n          extruded = _this$props.extruded,\n          wireframe = _this$props.wireframe,\n          material = _this$props.material,\n          transitions = _this$props.transitions;\n      var _this$props2 = this.props,\n          lineWidthUnits = _this$props2.lineWidthUnits,\n          lineWidthScale = _this$props2.lineWidthScale,\n          lineWidthMinPixels = _this$props2.lineWidthMinPixels,\n          lineWidthMaxPixels = _this$props2.lineWidthMaxPixels,\n          lineJointRounded = _this$props2.lineJointRounded,\n          lineMiterLimit = _this$props2.lineMiterLimit,\n          pointRadiusUnits = _this$props2.pointRadiusUnits,\n          pointRadiusScale = _this$props2.pointRadiusScale,\n          pointRadiusMinPixels = _this$props2.pointRadiusMinPixels,\n          pointRadiusMaxPixels = _this$props2.pointRadiusMaxPixels,\n          elevationScale = _this$props2.elevationScale,\n          lineDashJustified = _this$props2.lineDashJustified;\n      var _this$props3 = this.props,\n          getLineColor = _this$props3.getLineColor,\n          getFillColor = _this$props3.getFillColor,\n          getRadius = _this$props3.getRadius,\n          getLineWidth = _this$props3.getLineWidth,\n          getLineDashArray = _this$props3.getLineDashArray,\n          getElevation = _this$props3.getElevation,\n          updateTriggers = _this$props3.updateTriggers;\n      var PolygonFillLayer = this.getSubLayerClass('polygons-fill', _solidPolygonLayer[\"default\"]);\n      var PolygonStrokeLayer = this.getSubLayerClass('polygons-stroke', _pathLayer[\"default\"]);\n      var LineStringsLayer = this.getSubLayerClass('line-strings', _pathLayer[\"default\"]);\n      var PointsLayer = this.getSubLayerClass('points', _scatterplotLayer[\"default\"]);\n      var polygonFillLayer = this.shouldRenderSubLayer('polygons-fill', polygonFeatures) && new PolygonFillLayer({\n        _dataDiff: featuresDiff.polygonFeatures && function () {\n          return featuresDiff.polygonFeatures;\n        },\n        extruded: extruded,\n        elevationScale: elevationScale,\n        filled: filled,\n        wireframe: wireframe,\n        material: material,\n        getElevation: this.getSubLayerAccessor(getElevation),\n        getFillColor: this.getSubLayerAccessor(getFillColor),\n        getLineColor: this.getSubLayerAccessor(getLineColor),\n        transitions: transitions && {\n          getPolygon: transitions.geometry,\n          getElevation: transitions.getElevation,\n          getFillColor: transitions.getFillColor,\n          getLineColor: transitions.getLineColor\n        }\n      }, this.getSubLayerProps({\n        id: 'polygons-fill',\n        updateTriggers: {\n          getElevation: updateTriggers.getElevation,\n          getFillColor: updateTriggers.getFillColor,\n          getLineColor: updateTriggers.getLineColor\n        }\n      }), {\n        data: polygonFeatures,\n        getPolygon: getCoordinates\n      });\n      var polygonLineLayer = !extruded && stroked && this.shouldRenderSubLayer('polygons-stroke', polygonOutlineFeatures) && new PolygonStrokeLayer({\n        _dataDiff: featuresDiff.polygonOutlineFeatures && function () {\n          return featuresDiff.polygonOutlineFeatures;\n        },\n        widthUnits: lineWidthUnits,\n        widthScale: lineWidthScale,\n        widthMinPixels: lineWidthMinPixels,\n        widthMaxPixels: lineWidthMaxPixels,\n        rounded: lineJointRounded,\n        miterLimit: lineMiterLimit,\n        dashJustified: lineDashJustified,\n        getColor: this.getSubLayerAccessor(getLineColor),\n        getWidth: this.getSubLayerAccessor(getLineWidth),\n        getDashArray: this.getSubLayerAccessor(getLineDashArray),\n        transitions: transitions && {\n          getPath: transitions.geometry,\n          getColor: transitions.getLineColor,\n          getWidth: transitions.getLineWidth\n        }\n      }, this.getSubLayerProps({\n        id: 'polygons-stroke',\n        updateTriggers: {\n          getColor: updateTriggers.getLineColor,\n          getWidth: updateTriggers.getLineWidth,\n          getDashArray: updateTriggers.getLineDashArray\n        }\n      }), {\n        data: polygonOutlineFeatures,\n        getPath: getCoordinates\n      });\n      var pathLayer = this.shouldRenderSubLayer('linestrings', lineFeatures) && new LineStringsLayer({\n        _dataDiff: featuresDiff.lineFeatures && function () {\n          return featuresDiff.lineFeatures;\n        },\n        widthUnits: lineWidthUnits,\n        widthScale: lineWidthScale,\n        widthMinPixels: lineWidthMinPixels,\n        widthMaxPixels: lineWidthMaxPixels,\n        rounded: lineJointRounded,\n        miterLimit: lineMiterLimit,\n        dashJustified: lineDashJustified,\n        getColor: this.getSubLayerAccessor(getLineColor),\n        getWidth: this.getSubLayerAccessor(getLineWidth),\n        getDashArray: this.getSubLayerAccessor(getLineDashArray),\n        transitions: transitions && {\n          getPath: transitions.geometry,\n          getColor: transitions.getLineColor,\n          getWidth: transitions.getLineWidth\n        }\n      }, this.getSubLayerProps({\n        id: 'line-strings',\n        updateTriggers: {\n          getColor: updateTriggers.getLineColor,\n          getWidth: updateTriggers.getLineWidth,\n          getDashArray: updateTriggers.getLineDashArray\n        }\n      }), {\n        data: lineFeatures,\n        getPath: getCoordinates\n      });\n      var pointLayer = this.shouldRenderSubLayer('points', pointFeatures) && new PointsLayer({\n        _dataDiff: featuresDiff.pointFeatures && function () {\n          return featuresDiff.pointFeatures;\n        },\n        stroked: stroked,\n        filled: filled,\n        radiusUnits: pointRadiusUnits,\n        radiusScale: pointRadiusScale,\n        radiusMinPixels: pointRadiusMinPixels,\n        radiusMaxPixels: pointRadiusMaxPixels,\n        lineWidthUnits: lineWidthUnits,\n        lineWidthScale: lineWidthScale,\n        lineWidthMinPixels: lineWidthMinPixels,\n        lineWidthMaxPixels: lineWidthMaxPixels,\n        getFillColor: this.getSubLayerAccessor(getFillColor),\n        getLineColor: this.getSubLayerAccessor(getLineColor),\n        getRadius: this.getSubLayerAccessor(getRadius),\n        getLineWidth: this.getSubLayerAccessor(getLineWidth),\n        transitions: transitions && {\n          getPosition: transitions.geometry,\n          getFillColor: transitions.getFillColor,\n          getLineColor: transitions.getLineColor,\n          getRadius: transitions.getRadius,\n          getLineWidth: transitions.getLineWidth\n        }\n      }, this.getSubLayerProps({\n        id: 'points',\n        updateTriggers: {\n          getFillColor: updateTriggers.getFillColor,\n          getLineColor: updateTriggers.getLineColor,\n          getRadius: updateTriggers.getRadius,\n          getLineWidth: updateTriggers.getLineWidth\n        }\n      }), {\n        data: pointFeatures,\n        getPosition: getCoordinates,\n        highlightedObjectIndex: this._getHighlightedIndex(pointFeatures)\n      });\n      return [!extruded && polygonFillLayer, polygonLineLayer, pathLayer, pointLayer, extruded && polygonFillLayer];\n    }\n  }, {\n    key: \"_getHighlightedIndex\",\n    value: function _getHighlightedIndex(data) {\n      var highlightedObjectIndex = this.props.highlightedObjectIndex;\n      return Number.isFinite(highlightedObjectIndex) ? data.findIndex(function (d) {\n        return d.__source.index === highlightedObjectIndex;\n      }) : null;\n    }\n  }]);\n  return GeoJsonLayer;\n}(_core.CompositeLayer);\n\nexports[\"default\"] = GeoJsonLayer;\nGeoJsonLayer.layerName = 'GeoJsonLayer';\nGeoJsonLayer.defaultProps = defaultProps;\n//# sourceMappingURL=geojson-layer.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","getCoordinates","f","geometry","coordinates","_interopRequireDefault","Object","defineProperty","value","_classCallCheck2","_createClass2","_possibleConstructorReturn2","_getPrototypeOf2","_inherits2","_core","_scatterplotLayer","_pathLayer","_solidPolygonLayer","_utils","_geojson","defaultProps","stroked","filled","extruded","wireframe","lineWidthUnits","lineWidthScale","lineWidthMinPixels","lineWidthMaxPixels","Number","MAX_SAFE_INTEGER","lineJointRounded","lineMiterLimit","elevationScale","pointRadiusUnits","pointRadiusScale","pointRadiusMinPixels","pointRadiusMaxPixels","getLineColor","type","defaultLineColor","getFillColor","defaultFillColor","getRadius","getLineWidth","getElevation","material","GeoJsonLayer","_CompositeLayer","apply","arguments","key","initializeState","state","features","props","getLineDashArray","log","removed","updateState","_ref","changeFlags","dataChanged","getGeojsonFeatures","data","wrapFeature","getSubLayerRow","bind","Array","isArray","oldFeatures","newFeatures","featuresDiff","slice","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iterator","Symbol","iterator","_step","done","next","dataRange","partialFeatures","separateGeojsonFeatures","_key","push","replaceInRange","getIndex","__source","index","replace","err","setState","renderLayers","_this$state","pointFeatures","lineFeatures","polygonFeatures","polygonOutlineFeatures","_this$props","transitions","_this$props2","lineDashJustified","_this$props3","updateTriggers","PolygonFillLayer","getSubLayerClass","PolygonStrokeLayer","LineStringsLayer","PointsLayer","polygonFillLayer","shouldRenderSubLayer","_dataDiff","getSubLayerAccessor","getPolygon","getSubLayerProps","id","polygonLineLayer","widthUnits","widthScale","widthMinPixels","widthMaxPixels","rounded","miterLimit","dashJustified","getColor","getWidth","getDashArray","getPath","pathLayer","pointLayer","radiusUnits","radiusScale","radiusMinPixels","radiusMaxPixels","getPosition","highlightedObjectIndex","_getHighlightedIndex","isFinite","findIndex","d","CompositeLayer","layerName"]
}
