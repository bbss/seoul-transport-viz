shadow$provide.module$node_modules$$deck_DOT_gl$core$dist$es5$transitions$gpu_interpolation_transition=function(global,require,module,exports){function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}));keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=
null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){(0,_defineProperty2["default"])(target,key,source[key])}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})}return target}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,
"__esModule",{value:!0});exports["default"]=void 0;var _defineProperty2=global(require("module$node_modules$$babel$runtime$helpers$defineProperty")),_classCallCheck2=global(require("module$node_modules$$babel$runtime$helpers$classCallCheck")),_createClass2=global(require("module$node_modules$$babel$runtime$helpers$createClass")),_core=require("module$node_modules$$luma_DOT_gl$core$dist$es5$index"),_attribute=global(require("module$node_modules$$deck_DOT_gl$core$dist$es5$lib$attribute$attribute")),
_attributeTransitionUtils=require("module$node_modules$$deck_DOT_gl$core$dist$es5$lib$attribute$attribute_transition_utils"),_transition=global(require("module$node_modules$$deck_DOT_gl$core$dist$es5$transitions$transition"));require=function(){function GPUInterpolationTransition(_ref){var gl=_ref.gl,attribute=_ref.attribute;_ref=_ref.timeline;(0,_classCallCheck2["default"])(this,GPUInterpolationTransition);this.gl=gl;this.type="interpolation";this.transition=new _transition["default"](_ref);this.attribute=
attribute;this.attributeInTransition=new _attribute["default"](gl,attribute.settings);this.currentStartIndices=attribute.startIndices;this.currentLength=0;attribute=(0,_attributeTransitionUtils.getAttributeTypeFromSize)(attribute.size);this.transform=new _core.Transform(gl,{vs:vs,defines:{ATTRIBUTE_TYPE:attribute},varyings:["vCurrent"]});attribute={byteLength:0,usage:35050};this.buffers=[new _core.Buffer(gl,attribute),new _core.Buffer(gl,attribute)]}(0,_createClass2["default"])(GPUInterpolationTransition,
[{key:"start",value:function(transitionSettings,numInstances){if(0>=transitionSettings.duration)this.transition.cancel();else{var gl=this.gl,buffers=this.buffers,attribute=this.attribute;(0,_attributeTransitionUtils.cycleBuffers)(buffers);var padBufferOpts={numInstances:numInstances,attribute:attribute,fromLength:this.currentLength,fromStartIndices:this.currentStartIndices,getData:transitionSettings.enter},_iteratorNormalCompletion=!0,_didIteratorError=!1,_iteratorError=void 0;try{for(var _iterator=
buffers[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=!0){var buffer=_step.value;(0,_attributeTransitionUtils.padBuffer)(_objectSpread({buffer:buffer},padBufferOpts))}}catch(err){_didIteratorError=!0,_iteratorError=err}finally{try{if(!_iteratorNormalCompletion&&null!=_iterator["return"])_iterator["return"]()}finally{if(_didIteratorError)throw _iteratorError;}}this.currentStartIndices=attribute.startIndices;this.currentLength=(0,_attributeTransitionUtils.getAttributeBufferLength)(attribute,
numInstances);this.attributeInTransition.update({buffer:buffers[1],value:attribute.value});this.transition.start(transitionSettings);this.transform.update({elementCount:Math.floor(this.currentLength/attribute.size),sourceBuffers:{aFrom:buffers[0],aTo:(0,_attributeTransitionUtils.getSourceBufferAttribute)(gl,attribute)},feedbackBuffers:{vCurrent:buffers[1]}})}}},{key:"update",value:function(){var updated=this.transition.update();if(updated){var _this$transition=this.transition,_this$transition$sett=
_this$transition.settings,easing=_this$transition$sett.easing;_this$transition=easing(_this$transition.time/_this$transition$sett.duration);this.transform.run({uniforms:{time:_this$transition}})}return updated}},{key:"cancel",value:function(){this.transition.cancel();for(this.transform["delete"]();this.buffers.length;)this.buffers.pop()["delete"]()}},{key:"inProgress",get:function(){return this.transition.inProgress}}]);return GPUInterpolationTransition}();exports["default"]=require;var vs="\n#define SHADER_NAME interpolation-transition-vertex-shader\n\nuniform float time;\nattribute ATTRIBUTE_TYPE aFrom;\nattribute ATTRIBUTE_TYPE aTo;\nvarying ATTRIBUTE_TYPE vCurrent;\n\nvoid main(void) {\n  vCurrent \x3d mix(aFrom, aTo, time);\n  gl_Position \x3d vec4(0.0);\n}\n"}
//# sourceMappingURL=module$node_modules$$deck_DOT_gl$core$dist$es5$transitions$gpu_interpolation_transition.js.map
