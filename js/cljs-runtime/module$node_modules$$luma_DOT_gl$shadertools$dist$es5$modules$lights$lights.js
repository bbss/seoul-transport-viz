shadow$provide.module$node_modules$$luma_DOT_gl$shadertools$dist$es5$modules$lights$lights=function(global,require,module,exports){function convertColor(){var _ref=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},_ref$color=_ref.color;_ref=_ref.intensity;var intensity=void 0===_ref?1:_ref;return(void 0===_ref$color?[0,0,0]:_ref$color).map(function(component){return component*intensity/255})}function getLightSourceUniforms(_ref2){var ambientLight=_ref2.ambientLight,_ref2$pointLights=_ref2.pointLights;
_ref2$pointLights=void 0===_ref2$pointLights?[]:_ref2$pointLights;_ref2=_ref2.directionalLights;_ref2=void 0===_ref2?[]:_ref2;var lightSourceUniforms={};lightSourceUniforms["lighting_uAmbientLight.color"]=ambientLight?convertColor(ambientLight):[0,0,0];_ref2$pointLights.forEach(function(pointLight,index){lightSourceUniforms["lighting_uPointLight[".concat(index,"].color")]=convertColor(pointLight);lightSourceUniforms["lighting_uPointLight[".concat(index,"].position")]=pointLight.position;lightSourceUniforms["lighting_uPointLight[".concat(index,
"].attenuation")]=pointLight.attenuation||[1,0,0]});lightSourceUniforms.lighting_uPointLightCount=_ref2$pointLights.length;_ref2.forEach(function(directionalLight,index){lightSourceUniforms["lighting_uDirectionalLight[".concat(index,"].color")]=convertColor(directionalLight);lightSourceUniforms["lighting_uDirectionalLight[".concat(index,"].direction")]=directionalLight.direction});lightSourceUniforms.lighting_uDirectionalLightCount=_ref2.length;return lightSourceUniforms}function getUniforms(){var opts=
0<arguments.length&&void 0!==arguments[0]?arguments[0]:INITIAL_MODULE_OPTIONS;if("lightSources"in opts){var _ref3=opts.lightSources||{};opts=_ref3.ambientLight;var pointLights=_ref3.pointLights;_ref3=_ref3.directionalLights;return opts||pointLights&&0<pointLights.length||_ref3&&0<_ref3.length?Object.assign({},getLightSourceUniforms({ambientLight:opts,pointLights:pointLights,directionalLights:_ref3}),{lighting_uEnabled:!0}):{lighting_uEnabled:!1}}if("lights"in opts){pointLights={pointLights:[],directionalLights:[]};
_ref3=!0;var _didIteratorError=!1,_iteratorError=void 0;try{for(var _iterator=(opts.lights||[])[Symbol.iterator](),_step;!(_ref3=(_step=_iterator.next()).done);_ref3=!0){var light=_step.value;switch(light.type){case "ambient":pointLights.ambientLight=light;break;case "directional":pointLights.directionalLights.push(light);break;case "point":pointLights.pointLights.push(light)}}}catch(err){_didIteratorError=!0,_iteratorError=err}finally{try{if(!_ref3&&null!=_iterator["return"])_iterator["return"]()}finally{if(_didIteratorError)throw _iteratorError;
}}return getUniforms({lightSources:pointLights})}return{}}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports["default"]=void 0;require=global(require("module$node_modules$$luma_DOT_gl$shadertools$dist$es5$modules$lights$lights_glsl"));exports["default"]={name:"lights",vs:require["default"],fs:require["default"],getUniforms:getUniforms,defines:{MAX_LIGHTS:3}};var INITIAL_MODULE_OPTIONS={}}
//# sourceMappingURL=module$node_modules$$luma_DOT_gl$shadertools$dist$es5$modules$lights$lights.js.map
