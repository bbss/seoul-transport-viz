{
"version":3,
"file":"module$node_modules$rxjs$dist$cjs$internal$operators$shareReplay.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,iEAAA,CAAqF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAqB7HC,QAASA,oBAAmB,CAACC,EAAD,CAAK,CAAA,IACzBC,GAAKD,EAAAE,WADoB,CACLA,WAAoB,IAAK,EAAZ,GAAAD,EAAA,CAAgBE,QAAhB,CAA2BF,EAAIG,GAAAA,CAAKJ,EAAAK,WAD5C,KAC2DA,WAAoB,IAAK,EAAZ,GAAAD,EAAA,CAAgBD,QAAhB,CAA2BC,EADnG,CACuGE,YAAcN,EAAAO,SADrH,CACkIC,UAAYR,EAAAQ,UAD9I,CAEzBC,OAFyB,CAGzBF,SAAW,CAHc,CAIzBG,YAJyB,CAKzBC,SAAW,CAAA,CALc,CAMzBC,WAAa,CAAA,CACjB,OAAOC,SAA6B,CAACC,MAAD,CAAS,CACzCP,QAAA,EAEA,IAAI,CAACE,OAAL,EAAgBE,QAAhB,CAA0B,CACtBA,QAAA,CAAW,CAAA,CACXF,QAAA,CAAU,IAAIM,eAAAC,cAAJ,CAAkCd,UAAlC,CAA8CG,UAA9C;AAA0DG,SAA1D,CACV,KAAAS,SAAWR,OAAAS,UAAA,CAAkB,IAAlB,CACXR,aAAA,CAAeI,MAAAI,UAAA,CAAiB,CAC5BC,KAAMA,QAAS,CAACC,KAAD,CAAQ,CAAEX,OAAAU,KAAA,CAAaC,KAAb,CAAF,CADK,CAE5BC,MAAOA,QAAS,CAACC,GAAD,CAAM,CAClBX,QAAA,CAAW,CAAA,CACXF,QAAAY,MAAA,CAAcC,GAAd,CAFkB,CAFM,CAM5BC,SAAUA,QAAS,EAAG,CAClBX,UAAA,CAAa,CAAA,CACbF,aAAA,CAAec,IAAAA,EACff,QAAAc,SAAA,EAHkB,CANM,CAAjB,CAJO,CAA1B,IAkBIN,SAAA,CAAWR,OAAAS,UAAA,CAAkB,IAAlB,CAEf,KAAAO,IAAA,CAAS,QAAS,EAAG,CACjBlB,QAAA,EACAU,SAAAS,YAAA,EACIhB,aAAJ,EAAoB,CAACE,UAArB,EAAmCN,WAAnC,EAA+D,CAA/D,GAAkDC,QAAlD,GACIG,YAAAgB,YAAA,EAEA,CAAAjB,OAAA,CADAC,YACA,CADec,IAAAA,EAFnB,CAHiB,CAArB,CAvByC,CAPhB,CAnBjCG,MAAAC,eAAA,CAAsB9B,OAAtB,CAA+B,YAA/B,CAA6C,CAAEsB,MAAO,CAAA,CAAT,CAA7C,CACAtB;OAAA+B,YAAA,CAAsB,IAAK,EAC3B,KAAId,gBAAkBnB,OAAA,CAAQ,0DAAR,CAgBtBE,QAAA+B,YAAA,CAfAA,QAAoB,CAACC,kBAAD,CAAqBzB,UAArB,CAAiCG,SAAjC,CAA4C,CAGxD,IAAAuB,OADAD,kBAAJ,EAAwD,QAAxD,GAA0B,MAAOA,mBAAjC,CACaA,kBADb,CAIa,CACL5B,WAAY4B,kBADP,CAELzB,WAAYA,UAFP,CAGLE,SAAU,CAAA,CAHL,CAILC,UAAWA,SAJN,CAOb,OAAO,SAAS,CAACM,MAAD,CAAS,CAAE,MAAOA,OAAAkB,KAAA,CAAYjC,mBAAA,CAAoBgC,MAApB,CAAZ,CAAT,CAbmC,CAL6D;",
"sources":["node_modules/rxjs/dist/cjs/internal/operators/shareReplay.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$rxjs$dist$cjs$internal$operators$shareReplay\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.shareReplay = void 0;\nvar ReplaySubject_1 = require(\"../ReplaySubject\");\nfunction shareReplay(configOrBufferSize, windowTime, scheduler) {\n    var config;\n    if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n        config = configOrBufferSize;\n    }\n    else {\n        config = {\n            bufferSize: configOrBufferSize,\n            windowTime: windowTime,\n            refCount: false,\n            scheduler: scheduler\n        };\n    }\n    return function (source) { return source.lift(shareReplayOperator(config)); };\n}\nexports.shareReplay = shareReplay;\nfunction shareReplayOperator(_a) {\n    var _b = _a.bufferSize, bufferSize = _b === void 0 ? Infinity : _b, _c = _a.windowTime, windowTime = _c === void 0 ? Infinity : _c, useRefCount = _a.refCount, scheduler = _a.scheduler;\n    var subject;\n    var refCount = 0;\n    var subscription;\n    var hasError = false;\n    var isComplete = false;\n    return function shareReplayOperation(source) {\n        refCount++;\n        var innerSub;\n        if (!subject || hasError) {\n            hasError = false;\n            subject = new ReplaySubject_1.ReplaySubject(bufferSize, windowTime, scheduler);\n            innerSub = subject.subscribe(this);\n            subscription = source.subscribe({\n                next: function (value) { subject.next(value); },\n                error: function (err) {\n                    hasError = true;\n                    subject.error(err);\n                },\n                complete: function () {\n                    isComplete = true;\n                    subscription = undefined;\n                    subject.complete();\n                },\n            });\n        }\n        else {\n            innerSub = subject.subscribe(this);\n        }\n        this.add(function () {\n            refCount--;\n            innerSub.unsubscribe();\n            if (subscription && !isComplete && useRefCount && refCount === 0) {\n                subscription.unsubscribe();\n                subscription = undefined;\n                subject = undefined;\n            }\n        });\n    };\n}\n//# sourceMappingURL=shareReplay.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","shareReplayOperator","_a","_b","bufferSize","Infinity","_c","windowTime","useRefCount","refCount","scheduler","subject","subscription","hasError","isComplete","shareReplayOperation","source","ReplaySubject_1","ReplaySubject","innerSub","subscribe","next","value","error","err","complete","undefined","add","unsubscribe","Object","defineProperty","shareReplay","configOrBufferSize","config","lift"]
}
