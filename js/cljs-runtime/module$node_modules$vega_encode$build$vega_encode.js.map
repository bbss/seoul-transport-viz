{
"version":3,
"file":"module$node_modules$vega_encode$build$vega_encode.js",
"lineCount":36,
"mappings":"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",
"sources":["node_modules/vega-encode/build/vega-encode.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$vega_encode$build$vega_encode\"] = function(global,require,module,exports) {\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('vega-dataflow'), require('vega-scale'), require('vega-util'), require('d3-array'), require('d3-interpolate')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'vega-dataflow', 'vega-scale', 'vega-util', 'd3-array', 'd3-interpolate'], factory) :\n  (global = global || self, factory((global.vega = global.vega || {}, global.vega.transforms = {}), global.vega, global.vega, global.vega, global.d3, global.d3));\n}(this, (function (exports, vegaDataflow, vegaScale, vegaUtil, d3Array, d3Interpolate) { 'use strict';\n\n  /**\n   * Generates axis ticks for visualizing a spatial scale.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {Scale} params.scale - The scale to generate ticks for.\n   * @param {*} [params.count=10] - The approximate number of ticks, or\n   *   desired tick interval, to use.\n   * @param {Array<*>} [params.values] - The exact tick values to use.\n   *   These must be legal domain values for the provided scale.\n   *   If provided, the count argument is ignored.\n   * @param {function(*):string} [params.formatSpecifier] - A format specifier\n   *   to use in conjunction with scale.tickFormat. Legal values are\n   *   any valid d3 4.0 format specifier.\n   * @param {function(*):string} [params.format] - The format function to use.\n   *   If provided, the formatSpecifier argument is ignored.\n   */\n  function AxisTicks(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n\n  var prototype = vegaUtil.inherits(AxisTicks, vegaDataflow.Transform);\n\n  prototype.transform = function(_, pulse) {\n    if (this.value && !_.modified()) {\n      return pulse.StopPropagation;\n    }\n\n    var locale = pulse.dataflow.locale(),\n        out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS),\n        ticks = this.value,\n        scale = _.scale,\n        tally = _.count == null ? (_.values ? _.values.length : 10) : _.count,\n        count = vegaScale.tickCount(scale, tally, _.minstep),\n        format = _.format || vegaScale.tickFormat(locale, scale, count, _.formatSpecifier, _.formatType, !!_.values),\n        values = _.values ? vegaScale.validTicks(scale, _.values, count) : vegaScale.tickValues(scale, count);\n\n    if (ticks) out.rem = ticks;\n\n    ticks = values.map(function(value, i) {\n      return vegaDataflow.ingest({\n        index: i / (values.length - 1 || 1),\n        value: value,\n        label: format(value)\n      });\n    });\n\n    if (_.extra && ticks.length) {\n      // add an extra tick pegged to the initial domain value\n      // this is used to generate axes with 'binned' domains\n      ticks.push(vegaDataflow.ingest({\n        index: -1,\n        extra: {value: ticks[0].value},\n        label: ''\n      }));\n    }\n\n    out.source = ticks;\n    out.add = ticks;\n    this.value = ticks;\n\n    return out;\n  };\n\n  /**\n   * Joins a set of data elements against a set of visual items.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {function(object): object} [params.item] - An item generator function.\n   * @param {function(object): *} [params.key] - The key field associating data and visual items.\n   */\n  function DataJoin(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n\n  var prototype$1 = vegaUtil.inherits(DataJoin, vegaDataflow.Transform);\n\n  function defaultItemCreate() {\n    return vegaDataflow.ingest({});\n  }\n\n  function newMap(key) {\n    const map = vegaUtil.fastmap().test(t => t.exit);\n    map.lookup = t => map.get(key(t));\n    return map;\n  }\n\n  prototype$1.transform = function(_, pulse) {\n    var df = pulse.dataflow,\n        out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS),\n        item = _.item || defaultItemCreate,\n        key = _.key || vegaDataflow.tupleid,\n        map = this.value;\n\n    // prevent transient (e.g., hover) requests from\n    // cascading across marks derived from marks\n    if (vegaUtil.isArray(out.encode)) {\n      out.encode = null;\n    }\n\n    if (map && (_.modified('key') || pulse.modified(key))) {\n      vegaUtil.error('DataJoin does not support modified key function or fields.');\n    }\n\n    if (!map) {\n      pulse = pulse.addAll();\n      this.value = map = newMap(key);\n    }\n\n    pulse.visit(pulse.ADD, t => {\n      const k = key(t);\n      let x = map.get(k);\n\n      if (x) {\n        if (x.exit) {\n          map.empty--;\n          out.add.push(x);\n        } else {\n          out.mod.push(x);\n        }\n      } else {\n        x = item(t);\n        map.set(k, x);\n        out.add.push(x);\n      }\n\n      x.datum = t;\n      x.exit = false;\n    });\n\n    pulse.visit(pulse.MOD, t => {\n      const k = key(t),\n            x = map.get(k);\n\n      if (x) {\n        x.datum = t;\n        out.mod.push(x);\n      }\n    });\n\n    pulse.visit(pulse.REM, t => {\n      const k = key(t),\n            x = map.get(k);\n\n      if (t === x.datum && !x.exit) {\n        out.rem.push(x);\n        x.exit = true;\n        ++map.empty;\n      }\n    });\n\n    if (pulse.changed(pulse.ADD_MOD)) out.modifies('datum');\n\n    if (pulse.clean() || _.clean && map.empty > df.cleanThreshold) {\n      df.runAfter(map.clean);\n    }\n\n    return out;\n  };\n\n  /**\n   * Invokes encoding functions for visual items.\n   * @constructor\n   * @param {object} params - The parameters to the encoding functions. This\n   *   parameter object will be passed through to all invoked encoding functions.\n   * @param {object} [params.mod=false] - Flag indicating if tuples in the input\n   *   mod set that are unmodified by encoders should be included in the output.\n   * @param {object} param.encoders - The encoding functions\n   * @param {function(object, object): boolean} [param.encoders.update] - Update encoding set\n   * @param {function(object, object): boolean} [param.encoders.enter] - Enter encoding set\n   * @param {function(object, object): boolean} [param.encoders.exit] - Exit encoding set\n   */\n  function Encode(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n\n  var prototype$2 = vegaUtil.inherits(Encode, vegaDataflow.Transform);\n\n  prototype$2.transform = function(_, pulse) {\n    var out = pulse.fork(pulse.ADD_REM),\n        fmod = _.mod || false,\n        encoders = _.encoders,\n        encode = pulse.encode;\n\n    // if an array, the encode directive includes additional sets\n    // that must be defined in order for the primary set to be invoked\n    // e.g., only run the update set if the hover set is defined\n    if (vegaUtil.isArray(encode)) {\n      if (out.changed() || encode.every(function(e) { return encoders[e]; })) {\n        encode = encode[0];\n        out.encode = null; // consume targeted encode directive\n      } else {\n        return pulse.StopPropagation;\n      }\n    }\n\n    // marshall encoder functions\n    var reenter = encode === 'enter',\n        update = encoders.update || vegaUtil.falsy,\n        enter = encoders.enter || vegaUtil.falsy,\n        exit = encoders.exit || vegaUtil.falsy,\n        set = (encode && !reenter ? encoders[encode] : update) || vegaUtil.falsy;\n\n    if (pulse.changed(pulse.ADD)) {\n      pulse.visit(pulse.ADD, function(t) { enter(t, _); update(t, _); });\n      out.modifies(enter.output);\n      out.modifies(update.output);\n      if (set !== vegaUtil.falsy && set !== update) {\n        pulse.visit(pulse.ADD, function(t) { set(t, _); });\n        out.modifies(set.output);\n      }\n    }\n\n    if (pulse.changed(pulse.REM) && exit !== vegaUtil.falsy) {\n      pulse.visit(pulse.REM, function(t) { exit(t, _); });\n      out.modifies(exit.output);\n    }\n\n    if (reenter || set !== vegaUtil.falsy) {\n      var flag = pulse.MOD | (_.modified() ? pulse.REFLOW : 0);\n      if (reenter) {\n        pulse.visit(flag, function(t) {\n          var mod = enter(t, _) || fmod;\n          if (set(t, _) || mod) out.mod.push(t);\n        });\n        if (out.mod.length) out.modifies(enter.output);\n      } else {\n        pulse.visit(flag, function(t) {\n          if (set(t, _) || fmod) out.mod.push(t);\n        });\n      }\n      if (out.mod.length) out.modifies(set.output);\n    }\n\n    return out.changed() ? out : pulse.StopPropagation;\n  };\n\n  /**\n   * Generates legend entries for visualizing a scale.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {Scale} params.scale - The scale to generate items for.\n   * @param {*} [params.count=5] - The approximate number of items, or\n   *   desired tick interval, to use.\n   * @param {*} [params.limit] - The maximum number of entries to\n   *   include in a symbol legend.\n   * @param {Array<*>} [params.values] - The exact tick values to use.\n   *   These must be legal domain values for the provided scale.\n   *   If provided, the count argument is ignored.\n   * @param {string} [params.formatSpecifier] - A format specifier\n   *   to use in conjunction with scale.tickFormat. Legal values are\n   *   any valid D3 format specifier string.\n   * @param {function(*):string} [params.format] - The format function to use.\n   *   If provided, the formatSpecifier argument is ignored.\n   */\n  function LegendEntries(params) {\n    vegaDataflow.Transform.call(this, [], params);\n  }\n\n  var prototype$3 = vegaUtil.inherits(LegendEntries, vegaDataflow.Transform);\n\n  prototype$3.transform = function(_, pulse) {\n    if (this.value != null && !_.modified()) {\n      return pulse.StopPropagation;\n    }\n\n    var locale = pulse.dataflow.locale(),\n        out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS),\n        items = this.value,\n        type  = _.type || vegaScale.SymbolLegend,\n        scale = _.scale,\n        limit = +_.limit,\n        count = vegaScale.tickCount(scale, _.count == null ? 5 : _.count, _.minstep),\n        lskip = !!_.values || type === vegaScale.SymbolLegend,\n        format = _.format || vegaScale.labelFormat(locale, scale, count, type, _.formatSpecifier, _.formatType, lskip),\n        values = _.values || vegaScale.labelValues(scale, count),\n        domain, fraction, size, offset, ellipsis;\n\n    if (items) out.rem = items;\n\n    if (type === vegaScale.SymbolLegend) {\n      if (limit && values.length > limit) {\n        pulse.dataflow.warn('Symbol legend count exceeds limit, filtering items.');\n        items = values.slice(0, limit - 1);\n        ellipsis = true;\n      } else {\n        items = values;\n      }\n\n      if (vegaUtil.isFunction(size = _.size)) {\n        // if first value maps to size zero, remove from list (vega#717)\n        if (!_.values && scale(items[0]) === 0) {\n          items = items.slice(1);\n        }\n        // compute size offset for legend entries\n        offset = items.reduce(function(max, value) {\n          return Math.max(max, size(value, _));\n        }, 0);\n      } else {\n        size = vegaUtil.constant(offset = size || 8);\n      }\n\n      items = items.map(function(value, index) {\n        return vegaDataflow.ingest({\n          index:  index,\n          label:  format(value, index, items),\n          value:  value,\n          offset: offset,\n          size:   size(value, _)\n        });\n      });\n\n      if (ellipsis) {\n        ellipsis = values[items.length];\n        items.push(vegaDataflow.ingest({\n          index:    items.length,\n          label:    `\\u2026${values.length-items.length} entries`,\n          value:    ellipsis,\n          offset:   offset,\n          size:     size(ellipsis, _)\n        }));\n      }\n    }\n\n    else if (type === vegaScale.GradientLegend) {\n      domain = scale.domain(),\n      fraction = vegaScale.scaleFraction(scale, domain[0], vegaUtil.peek(domain));\n\n      // if automatic label generation produces 2 or fewer values,\n      // use the domain end points instead (fixes vega/vega#1364)\n      if (values.length < 3 && !_.values && domain[0] !== vegaUtil.peek(domain)) {\n        values = [domain[0], vegaUtil.peek(domain)];\n      }\n\n      items = values.map(function(value, index) {\n        return vegaDataflow.ingest({\n          index: index,\n          label: format(value, index, values),\n          value: value,\n          perc:  fraction(value)\n        });\n      });\n    }\n\n    else {\n      size = values.length - 1;\n      fraction = vegaScale.labelFraction(scale);\n\n      items = values.map(function(value, index) {\n        return vegaDataflow.ingest({\n          index: index,\n          label: format(value, index, values),\n          value: value,\n          perc:  index ? fraction(value) : 0,\n          perc2: index === size ? 1 : fraction(values[index+1])\n        });\n      });\n    }\n\n    out.source = items;\n    out.add = items;\n    this.value = items;\n\n    return out;\n  };\n\n  var Paths = vegaUtil.fastmap({\n    'line': line,\n    'line-radial': lineR,\n    'arc': arc,\n    'arc-radial': arcR,\n    'curve': curve,\n    'curve-radial': curveR,\n    'orthogonal-horizontal': orthoX,\n    'orthogonal-vertical': orthoY,\n    'orthogonal-radial': orthoR,\n    'diagonal-horizontal': diagonalX,\n    'diagonal-vertical': diagonalY,\n    'diagonal-radial': diagonalR\n  });\n\n  function sourceX(t) { return t.source.x; }\n  function sourceY(t) { return t.source.y; }\n  function targetX(t) { return t.target.x; }\n  function targetY(t) { return t.target.y; }\n\n   /**\n    * Layout paths linking source and target elements.\n    * @constructor\n    * @param {object} params - The parameters for this operator.\n    */\n  function LinkPath(params) {\n    vegaDataflow.Transform.call(this, {}, params);\n  }\n\n  LinkPath.Definition = {\n    'type': 'LinkPath',\n    'metadata': {'modifies': true},\n    'params': [\n      { 'name': 'sourceX', 'type': 'field', 'default': 'source.x' },\n      { 'name': 'sourceY', 'type': 'field', 'default': 'source.y' },\n      { 'name': 'targetX', 'type': 'field', 'default': 'target.x' },\n      { 'name': 'targetY', 'type': 'field', 'default': 'target.y' },\n      { 'name': 'orient', 'type': 'enum', 'default': 'vertical',\n        'values': ['horizontal', 'vertical', 'radial'] },\n      { 'name': 'shape', 'type': 'enum', 'default': 'line',\n        'values': ['line', 'arc', 'curve', 'diagonal', 'orthogonal'] },\n      { 'name': 'require', 'type': 'signal' },\n      { 'name': 'as', 'type': 'string', 'default': 'path' }\n    ]\n  };\n\n  var prototype$4 = vegaUtil.inherits(LinkPath, vegaDataflow.Transform);\n\n  prototype$4.transform = function(_, pulse) {\n    var sx = _.sourceX || sourceX,\n        sy = _.sourceY || sourceY,\n        tx = _.targetX || targetX,\n        ty = _.targetY || targetY,\n        as = _.as || 'path',\n        orient = _.orient || 'vertical',\n        shape = _.shape || 'line',\n        path = Paths.get(shape + '-' + orient) || Paths.get(shape);\n\n    if (!path) {\n      vegaUtil.error('LinkPath unsupported type: ' + _.shape\n        + (_.orient ? '-' + _.orient : ''));\n    }\n\n    pulse.visit(pulse.SOURCE, function(t) {\n      t[as] = path(sx(t), sy(t), tx(t), ty(t));\n    });\n\n    return pulse.reflow(_.modified()).modifies(as);\n  };\n\n  // -- Link Path Generation Methods -----\n\n  function line(sx, sy, tx, ty) {\n    return 'M' + sx + ',' + sy +\n           'L' + tx + ',' + ty;\n  }\n\n  function lineR(sa, sr, ta, tr) {\n    return line(\n      sr * Math.cos(sa), sr * Math.sin(sa),\n      tr * Math.cos(ta), tr * Math.sin(ta)\n    );\n  }\n\n  function arc(sx, sy, tx, ty) {\n    var dx = tx - sx,\n        dy = ty - sy,\n        rr = Math.sqrt(dx * dx + dy * dy) / 2,\n        ra = 180 * Math.atan2(dy, dx) / Math.PI;\n    return 'M' + sx + ',' + sy +\n           'A' + rr + ',' + rr +\n           ' ' + ra + ' 0 1' +\n           ' ' + tx + ',' + ty;\n  }\n\n  function arcR(sa, sr, ta, tr) {\n    return arc(\n      sr * Math.cos(sa), sr * Math.sin(sa),\n      tr * Math.cos(ta), tr * Math.sin(ta)\n    );\n  }\n\n  function curve(sx, sy, tx, ty) {\n    var dx = tx - sx,\n        dy = ty - sy,\n        ix = 0.2 * (dx + dy),\n        iy = 0.2 * (dy - dx);\n    return 'M' + sx + ',' + sy +\n           'C' + (sx+ix) + ',' + (sy+iy) +\n           ' ' + (tx+iy) + ',' + (ty-ix) +\n           ' ' + tx + ',' + ty;\n  }\n\n  function curveR(sa, sr, ta, tr) {\n    return curve(\n      sr * Math.cos(sa), sr * Math.sin(sa),\n      tr * Math.cos(ta), tr * Math.sin(ta)\n    );\n  }\n\n  function orthoX(sx, sy, tx, ty) {\n    return 'M' + sx + ',' + sy +\n           'V' + ty + 'H' + tx;\n  }\n\n  function orthoY(sx, sy, tx, ty) {\n    return 'M' + sx + ',' + sy +\n           'H' + tx + 'V' + ty;\n  }\n\n  function orthoR(sa, sr, ta, tr) {\n    var sc = Math.cos(sa),\n        ss = Math.sin(sa),\n        tc = Math.cos(ta),\n        ts = Math.sin(ta),\n        sf = Math.abs(ta - sa) > Math.PI ? ta <= sa : ta > sa;\n    return 'M' + (sr*sc) + ',' + (sr*ss) +\n           'A' + sr + ',' + sr + ' 0 0,' + (sf?1:0) +\n           ' ' + (sr*tc) + ',' + (sr*ts) +\n           'L' + (tr*tc) + ',' + (tr*ts);\n  }\n\n  function diagonalX(sx, sy, tx, ty) {\n    var m = (sx + tx) / 2;\n    return 'M' + sx + ',' + sy +\n           'C' + m  + ',' + sy +\n           ' ' + m  + ',' + ty +\n           ' ' + tx + ',' + ty;\n  }\n\n  function diagonalY(sx, sy, tx, ty) {\n    var m = (sy + ty) / 2;\n    return 'M' + sx + ',' + sy +\n           'C' + sx + ',' + m +\n           ' ' + tx + ',' + m +\n           ' ' + tx + ',' + ty;\n  }\n\n  function diagonalR(sa, sr, ta, tr) {\n    var sc = Math.cos(sa),\n        ss = Math.sin(sa),\n        tc = Math.cos(ta),\n        ts = Math.sin(ta),\n        mr = (sr + tr) / 2;\n    return 'M' + (sr*sc) + ',' + (sr*ss) +\n           'C' + (mr*sc) + ',' + (mr*ss) +\n           ' ' + (mr*tc) + ',' + (mr*ts) +\n           ' ' + (tr*tc) + ',' + (tr*ts);\n  }\n\n  /**\n   * Pie and donut chart layout.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {function(object): *} params.field - The value field to size pie segments.\n   * @param {number} [params.startAngle=0] - The start angle (in radians) of the layout.\n   * @param {number} [params.endAngle=2\u03c0] - The end angle (in radians) of the layout.\n   * @param {boolean} [params.sort] - Boolean flag for sorting sectors by value.\n   */\n  function Pie(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n\n  Pie.Definition = {\n    'type': 'Pie',\n    'metadata': {'modifies': true},\n    'params': [\n      { 'name': 'field', 'type': 'field' },\n      { 'name': 'startAngle', 'type': 'number', 'default': 0 },\n      { 'name': 'endAngle', 'type': 'number', 'default': 6.283185307179586 },\n      { 'name': 'sort', 'type': 'boolean', 'default': false },\n      { 'name': 'as', 'type': 'string', 'array': true, 'length': 2, 'default': ['startAngle', 'endAngle'] }\n    ]\n  };\n\n  var prototype$5 = vegaUtil.inherits(Pie, vegaDataflow.Transform);\n\n  prototype$5.transform = function(_, pulse) {\n    var as = _.as || ['startAngle', 'endAngle'],\n        startAngle = as[0],\n        endAngle = as[1],\n        field = _.field || vegaUtil.one,\n        start = _.startAngle || 0,\n        stop = _.endAngle != null ? _.endAngle : 2 * Math.PI,\n        data = pulse.source,\n        values = data.map(field),\n        n = values.length,\n        a = start,\n        k = (stop - start) / d3Array.sum(values),\n        index = d3Array.range(n),\n        i, t, v;\n\n    if (_.sort) {\n      index.sort(function(a, b) {\n        return values[a] - values[b];\n      });\n    }\n\n    for (i=0; i<n; ++i) {\n      v = values[index[i]];\n      t = data[index[i]];\n      t[startAngle] = a;\n      t[endAngle] = (a += v * k);\n    }\n\n    this.value = values;\n    return pulse.reflow(_.modified()).modifies(as);\n  };\n\n  var DEFAULT_COUNT = 5;\n\n  function includeZero(scale) {\n    const type = scale.type;\n    return !scale.bins && (\n      type === vegaScale.Linear || type === vegaScale.Pow || type === vegaScale.Sqrt\n    );\n  }\n\n  function includePad(type) {\n    return vegaScale.isContinuous(type) && type !== vegaScale.Sequential;\n  }\n\n  var SKIP = vegaUtil.toSet([\n    'set', 'modified', 'clear', 'type', 'scheme', 'schemeExtent', 'schemeCount',\n    'domain', 'domainMin', 'domainMid', 'domainMax',\n    'domainRaw', 'domainImplicit', 'nice', 'zero', 'bins',\n    'range', 'rangeStep', 'round', 'reverse', 'interpolate', 'interpolateGamma'\n  ]);\n\n  /**\n   * Maintains a scale function mapping data values to visual channels.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   */\n  function Scale(params) {\n    vegaDataflow.Transform.call(this, null, params);\n    this.modified(true); // always treat as modified\n  }\n\n  var prototype$6 = vegaUtil.inherits(Scale, vegaDataflow.Transform);\n\n  prototype$6.transform = function(_, pulse) {\n    var df = pulse.dataflow,\n        scale = this.value,\n        key = scaleKey(_);\n\n    if (!scale || key !== scale.type) {\n      this.value = scale = vegaScale.scale(key)();\n    }\n\n    for (key in _) if (!SKIP[key]) {\n      // padding is a scale property for band/point but not others\n      if (key === 'padding' && includePad(scale.type)) continue;\n      // invoke scale property setter, raise warning if not found\n      vegaUtil.isFunction(scale[key])\n        ? scale[key](_[key])\n        : df.warn('Unsupported scale property: ' + key);\n    }\n\n    configureRange(scale, _,\n      configureBins(scale, _, configureDomain(scale, _, df))\n    );\n\n    return pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS);\n  };\n\n  function scaleKey(_) {\n    var t = _.type, d = '', n;\n\n    // backwards compatibility pre Vega 5.\n    if (t === vegaScale.Sequential) return vegaScale.Sequential + '-' + vegaScale.Linear;\n\n    if (isContinuousColor(_)) {\n      n = _.rawDomain ? _.rawDomain.length\n        : _.domain ? _.domain.length + +(_.domainMid != null)\n        : 0;\n      d = n === 2 ? vegaScale.Sequential + '-'\n        : n === 3 ? vegaScale.Diverging + '-'\n        : '';\n    }\n\n    return ((d + t) || vegaScale.Linear).toLowerCase();\n  }\n\n  function isContinuousColor(_) {\n    const t = _.type;\n    return vegaScale.isContinuous(t) && t !== vegaScale.Time && t !== vegaScale.UTC && (\n      _.scheme || _.range && _.range.length && _.range.every(vegaUtil.isString)\n    );\n  }\n\n  function configureDomain(scale, _, df) {\n    // check raw domain, if provided use that and exit early\n    var raw = rawDomain(scale, _.domainRaw, df);\n    if (raw > -1) return raw;\n\n    var domain = _.domain,\n        type = scale.type,\n        zero = _.zero || (_.zero === undefined && includeZero(scale)),\n        n, mid;\n\n    if (!domain) return 0;\n\n    // adjust continuous domain for minimum pixel padding\n    if (includePad(type) && _.padding && domain[0] !== vegaUtil.peek(domain)) {\n      domain = padDomain(type, domain, _.range, _.padding, _.exponent, _.constant);\n    }\n\n    // adjust domain based on zero, min, max settings\n    if (zero || _.domainMin != null || _.domainMax != null || _.domainMid != null) {\n      n = ((domain = domain.slice()).length - 1) || 1;\n      if (zero) {\n        if (domain[0] > 0) domain[0] = 0;\n        if (domain[n] < 0) domain[n] = 0;\n      }\n      if (_.domainMin != null) domain[0] = _.domainMin;\n      if (_.domainMax != null) domain[n] = _.domainMax;\n\n      if (_.domainMid != null) {\n        mid = _.domainMid;\n        const i = mid > domain[n] ? n + 1 : mid < domain[0] ? 0 : n;\n        if (i !== n) df.warn('Scale domainMid exceeds domain min or max.', mid);\n        domain.splice(i, 0, mid);\n      }\n    }\n\n    // set the scale domain\n    scale.domain(domainCheck(type, domain, df));\n\n    // if ordinal scale domain is defined, prevent implicit\n    // domain construction as side-effect of scale lookup\n    if (type === vegaScale.Ordinal) {\n      scale.unknown(_.domainImplicit ? vegaScale.scaleImplicit : undefined);\n    }\n\n    // perform 'nice' adjustment as requested\n    if (_.nice && scale.nice) {\n      scale.nice((_.nice !== true && vegaScale.tickCount(scale, _.nice)) || null);\n    }\n\n    // return the cardinality of the domain\n    return domain.length;\n  }\n\n  function rawDomain(scale, raw, df) {\n    if (raw) {\n      scale.domain(domainCheck(scale.type, raw, df));\n      return raw.length;\n    } else {\n      return -1;\n    }\n  }\n\n  function padDomain(type, domain, range, pad, exponent, constant) {\n    var span = Math.abs(vegaUtil.peek(range) - range[0]),\n        frac = span / (span - 2 * pad),\n        d = type === vegaScale.Log    ? vegaUtil.zoomLog(domain, null, frac)\n          : type === vegaScale.Sqrt   ? vegaUtil.zoomPow(domain, null, frac, 0.5)\n          : type === vegaScale.Pow    ? vegaUtil.zoomPow(domain, null, frac, exponent || 1)\n          : type === vegaScale.Symlog ? vegaUtil.zoomSymlog(domain, null, frac, constant || 1)\n          : vegaUtil.zoomLinear(domain, null, frac);\n\n    domain = domain.slice();\n    domain[0] = d[0];\n    domain[domain.length-1] = d[1];\n    return domain;\n  }\n\n  function domainCheck(type, domain, df) {\n    if (vegaScale.isLogarithmic(type)) {\n      // sum signs of domain values\n      // if all pos or all neg, abs(sum) === domain.length\n      var s = Math.abs(domain.reduce(function(s, v) {\n        return s + (v < 0 ? -1 : v > 0 ? 1 : 0);\n      }, 0));\n\n      if (s !== domain.length) {\n        df.warn('Log scale domain includes zero: ' + vegaUtil.stringValue(domain));\n      }\n    }\n    return domain;\n  }\n\n  function configureBins(scale, _, count) {\n    let bins = _.bins;\n\n    if (bins && !vegaUtil.isArray(bins)) {\n      // generate bin boundary array\n      let domain = scale.domain(),\n          lo = domain[0],\n          hi = vegaUtil.peek(domain),\n          start = bins.start == null ? lo : bins.start,\n          stop = bins.stop == null ? hi : bins.stop,\n          step = bins.step;\n\n      if (!step) vegaUtil.error('Scale bins parameter missing step property.');\n      if (start < lo) start = step * Math.ceil(lo / step);\n      if (stop > hi) stop = step * Math.floor(hi / step);\n      bins = d3Array.range(start, stop + step / 2, step);\n    }\n\n    if (bins) {\n      // assign bin boundaries to scale instance\n      scale.bins = bins;\n    } else if (scale.bins) {\n      // no current bins, remove bins if previously set\n      delete scale.bins;\n    }\n\n    // special handling for bin-ordinal scales\n    if (scale.type === vegaScale.BinOrdinal) {\n      if (!bins) {\n        // the domain specifies the bins\n        scale.bins = scale.domain();\n      } else if (!_.domain && !_.domainRaw) {\n        // the bins specify the domain\n        scale.domain(bins);\n        count = bins.length;\n      }\n    }\n\n    // return domain cardinality\n    return count;\n  }\n\n  function configureRange(scale, _, count) {\n    var type = scale.type,\n        round = _.round || false,\n        range = _.range;\n\n    // if range step specified, calculate full range extent\n    if (_.rangeStep != null) {\n      range = configureRangeStep(type, _, count);\n    }\n\n    // else if a range scheme is defined, use that\n    else if (_.scheme) {\n      range = configureScheme(type, _, count);\n      if (vegaUtil.isFunction(range)) {\n        if (scale.interpolator) {\n          return scale.interpolator(range);\n        } else {\n          vegaUtil.error(`Scale type ${type} does not support interpolating color schemes.`);\n        }\n      }\n    }\n\n    // given a range array for an interpolating scale, convert to interpolator\n    if (range && vegaScale.isInterpolating(type)) {\n      return scale.interpolator(\n        vegaScale.interpolateColors(flip(range, _.reverse), _.interpolate, _.interpolateGamma)\n      );\n    }\n\n    // configure rounding / interpolation\n    if (range && _.interpolate && scale.interpolate) {\n      scale.interpolate(vegaScale.interpolate(_.interpolate, _.interpolateGamma));\n    } else if (vegaUtil.isFunction(scale.round)) {\n      scale.round(round);\n    } else if (vegaUtil.isFunction(scale.rangeRound)) {\n      scale.interpolate(round ? d3Interpolate.interpolateRound : d3Interpolate.interpolate);\n    }\n\n    if (range) scale.range(flip(range, _.reverse));\n  }\n\n  function configureRangeStep(type, _, count) {\n    if (type !== vegaScale.Band && type !== vegaScale.Point) {\n      vegaUtil.error('Only band and point scales support rangeStep.');\n    }\n\n    // calculate full range based on requested step size and padding\n    var outer = (_.paddingOuter != null ? _.paddingOuter : _.padding) || 0,\n        inner = type === vegaScale.Point ? 1\n              : ((_.paddingInner != null ? _.paddingInner : _.padding) || 0);\n    return [0, _.rangeStep * vegaScale.bandSpace(count, inner, outer)];\n  }\n\n  function configureScheme(type, _, count) {\n    var extent = _.schemeExtent,\n        name, scheme;\n\n    if (vegaUtil.isArray(_.scheme)) {\n      scheme = vegaScale.interpolateColors(_.scheme, _.interpolate, _.interpolateGamma);\n    } else {\n      name = _.scheme.toLowerCase();\n      scheme = vegaScale.scheme(name);\n      if (!scheme) vegaUtil.error(`Unrecognized scheme name: ${_.scheme}`);\n    }\n\n    // determine size for potential discrete range\n    count = (type === vegaScale.Threshold) ? count + 1\n      : (type === vegaScale.BinOrdinal) ? count - 1\n      : (type === vegaScale.Quantile || type === vegaScale.Quantize) ? (+_.schemeCount || DEFAULT_COUNT)\n      : count;\n\n    // adjust and/or quantize scheme as appropriate\n    return vegaScale.isInterpolating(type) ? adjustScheme(scheme, extent, _.reverse)\n      : vegaUtil.isFunction(scheme) ? vegaScale.quantizeInterpolator(adjustScheme(scheme, extent), count)\n      : type === vegaScale.Ordinal ? scheme : scheme.slice(0, count);\n  }\n\n  function adjustScheme(scheme, extent, reverse) {\n    return (vegaUtil.isFunction(scheme) && (extent || reverse))\n      ? vegaScale.interpolateRange(scheme, flip(extent || [0, 1], reverse))\n      : scheme;\n  }\n\n  function flip(array, reverse) {\n    return reverse ? array.slice().reverse() : array;\n  }\n\n  /**\n   * Sorts scenegraph items in the pulse source array.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {function(*,*): number} [params.sort] - A comparator\n   *   function for sorting tuples.\n   */\n  function SortItems(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n\n  var prototype$7 = vegaUtil.inherits(SortItems, vegaDataflow.Transform);\n\n  prototype$7.transform = function(_, pulse) {\n    var mod = _.modified('sort')\n           || pulse.changed(pulse.ADD)\n           || pulse.modified(_.sort.fields)\n           || pulse.modified('datum');\n\n    if (mod) pulse.source.sort(vegaDataflow.stableCompare(_.sort));\n\n    this.modified(mod);\n    return pulse;\n  };\n\n  var Zero = 'zero',\n      Center = 'center',\n      Normalize = 'normalize',\n      DefOutput = ['y0', 'y1'];\n\n  /**\n   * Stack layout for visualization elements.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {function(object): *} params.field - The value field to stack.\n   * @param {Array<function(object): *>} [params.groupby] - An array of accessors to groupby.\n   * @param {function(object,object): number} [params.sort] - A comparator for stack sorting.\n   * @param {string} [offset='zero'] - Stack baseline offset. One of 'zero', 'center', 'normalize'.\n   */\n  function Stack(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n\n  Stack.Definition = {\n    'type': 'Stack',\n    'metadata': {'modifies': true},\n    'params': [\n      { 'name': 'field', 'type': 'field' },\n      { 'name': 'groupby', 'type': 'field', 'array': true },\n      { 'name': 'sort', 'type': 'compare' },\n      { 'name': 'offset', 'type': 'enum', 'default': Zero, 'values': [Zero, Center, Normalize] },\n      { 'name': 'as', 'type': 'string', 'array': true, 'length': 2, 'default': DefOutput }\n    ]\n  };\n\n  var prototype$8 = vegaUtil.inherits(Stack, vegaDataflow.Transform);\n\n  prototype$8.transform = function(_, pulse) {\n    var as = _.as || DefOutput,\n        y0 = as[0],\n        y1 = as[1],\n        sort = vegaDataflow.stableCompare(_.sort),\n        field = _.field || vegaUtil.one,\n        stack = _.offset === Center ? stackCenter\n              : _.offset === Normalize ? stackNormalize\n              : stackZero,\n        groups, i, n, max;\n\n    // partition, sum, and sort the stack groups\n    groups = partition(pulse.source, _.groupby, sort, field);\n\n    // compute stack layouts per group\n    for (i=0, n=groups.length, max=groups.max; i<n; ++i) {\n      stack(groups[i], max, field, y0, y1);\n    }\n\n    return pulse.reflow(_.modified()).modifies(as);\n  };\n\n  function stackCenter(group, max, field, y0, y1) {\n    var last = (max - group.sum) / 2,\n        m = group.length,\n        j = 0, t;\n\n    for (; j<m; ++j) {\n      t = group[j];\n      t[y0] = last;\n      t[y1] = (last += Math.abs(field(t)));\n    }\n  }\n\n  function stackNormalize(group, max, field, y0, y1) {\n    var scale = 1 / group.sum,\n        last = 0,\n        m = group.length,\n        j = 0, v = 0, t;\n\n    for (; j<m; ++j) {\n      t = group[j];\n      t[y0] = last;\n      t[y1] = last = scale * (v += Math.abs(field(t)));\n    }\n  }\n\n  function stackZero(group, max, field, y0, y1) {\n    var lastPos = 0,\n        lastNeg = 0,\n        m = group.length,\n        j = 0, v, t;\n\n    for (; j<m; ++j) {\n      t = group[j];\n      v = +field(t);\n      if (v < 0) {\n        t[y0] = lastNeg;\n        t[y1] = (lastNeg += v);\n      } else {\n        t[y0] = lastPos;\n        t[y1] = (lastPos += v);\n      }\n    }\n  }\n\n  function partition(data, groupby, sort, field) {\n    var groups = [],\n        get = function(f) { return f(t); },\n        map, i, n, m, t, k, g, s, max;\n\n    // partition data points into stack groups\n    if (groupby == null) {\n      groups.push(data.slice());\n    } else {\n      for (map={}, i=0, n=data.length; i<n; ++i) {\n        t = data[i];\n        k = groupby.map(get);\n        g = map[k];\n        if (!g) {\n          map[k] = (g = []);\n          groups.push(g);\n        }\n        g.push(t);\n      }\n    }\n\n    // compute sums of groups, sort groups as needed\n    for (k=0, max=0, m=groups.length; k<m; ++k) {\n      g = groups[k];\n      for (i=0, s=0, n=g.length; i<n; ++i) {\n        s += Math.abs(field(g[i]));\n      }\n      g.sum = s;\n      if (s > max) max = s;\n      if (sort) g.sort(sort);\n    }\n    groups.max = max;\n\n    return groups;\n  }\n\n  exports.axisticks = AxisTicks;\n  exports.datajoin = DataJoin;\n  exports.encode = Encode;\n  exports.legendentries = LegendEntries;\n  exports.linkpath = LinkPath;\n  exports.pie = Pie;\n  exports.scale = Scale;\n  exports.sortitems = SortItems;\n  exports.stack = Stack;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n};"],
"names":["shadow$provide","global","require","module","exports","factory","define","amd","self","vega","transforms","d3","vegaDataflow","vegaScale","vegaUtil","d3Array","d3Interpolate","AxisTicks","params","Transform","call","DataJoin","defaultItemCreate","ingest","newMap","key","map","fastmap","test","t","exit","lookup","map.lookup","get","Encode","LegendEntries","sourceX","source","x","sourceY","y","targetX","target","targetY","LinkPath","line","sx","sy","tx","ty","arc","dx","dy","rr","Math","sqrt","atan2","PI","curve","ix","iy","Pie","includePad","type","isContinuous","Sequential","Scale","modified","domainCheck","domain","df","isLogarithmic","abs","s","reduce","v","length","warn","stringValue","adjustScheme","scheme","extent","reverse","isFunction","interpolateRange","flip","array","slice","SortItems","Stack","stackCenter","group","max","field","y0","y1","last","sum","m","j","stackNormalize","scale","stackZero","lastNeg","lastPos","partition","data","groupby","sort","groups","f","n","push","i","k","g","inherits","prototype","transform","prototype.transform","_","pulse","value","StopPropagation","locale","dataflow","out","fork","NO_SOURCE","NO_FIELDS","ticks","count","tickCount","tally","values","minstep","format","tickFormat","formatSpecifier","formatType","validTicks","tickValues","rem","index","label","extra","add","prototype$1","prototype$1.transform","item","tupleid","isArray","encode","error","addAll","visit","ADD","empty","mod","set","datum","MOD","REM","changed","ADD_MOD","modifies","clean","cleanThreshold","runAfter","prototype$2","prototype$2.transform","ADD_REM","fmod","encoders","every","e","reenter","update","falsy","enter","output","flag","REFLOW","prototype$3","prototype$3.transform","items","SymbolLegend","limit","lskip","labelFormat","labelValues","size","ellipsis","offset","constant","GradientLegend","fraction","scaleFraction","peek","perc","labelFraction","perc2","Paths","lineR","sa","sr","ta","tr","cos","sin","arcR","curveR","orthoX","orthoY","orthoR","tc","ts","sc","ss","sf","diagonalX","diagonalY","diagonalR","mr","Definition","prototype$4","prototype$4.transform","as","shape","path","orient","SOURCE","reflow","prototype$5","prototype$5.transform","startAngle","endAngle","start","stop","one","a","range","b","SKIP","toSet","prototype$6","prototype$6.transform","d","Linear","Time","UTC","isString","rawDomain","domainMid","Diverging","toLowerCase","domainRaw","raw","zero","bins","Pow","Sqrt","padding","exponent","span","frac","pad","Log","zoomLog","zoomPow","Symlog","zoomSymlog","zoomLinear","domainMin","domainMax","mid","splice","Ordinal","unknown","domainImplicit","scaleImplicit","undefined","nice","lo","hi","step","ceil","floor","BinOrdinal","round","rangeStep","Band","Point","bandSpace","inner","paddingInner","paddingOuter","schemeExtent","interpolateColors","interpolate","interpolateGamma","name","Threshold","Quantile","Quantize","schemeCount","DEFAULT_COUNT","isInterpolating","quantizeInterpolator","interpolator","rangeRound","interpolateRound","prototype$7","prototype$7.transform","fields","stableCompare","DefOutput","Zero","Center","Normalize","prototype$8","prototype$8.transform","stack","axisticks","datajoin","legendentries","linkpath","pie","sortitems","Object","defineProperty"]
}
