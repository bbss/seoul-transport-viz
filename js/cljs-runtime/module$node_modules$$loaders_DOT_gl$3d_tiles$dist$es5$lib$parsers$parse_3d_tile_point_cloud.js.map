{
"version":3,
"file":"module$node_modules$$loaders_DOT_gl$3d_tiles$dist$es5$lib$parsers$parse_3d_tile_point_cloud.js",
"lineCount":21,
"mappings":"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",
"sources":["node_modules/@loaders_DOT_gl/3d-tiles/dist/es5/lib/parsers/parse-3d-tile-point-cloud.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$loaders_DOT_gl$3d_tiles$dist$es5$lib$parsers$parse_3d_tile_point_cloud\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parsePointCloud3DTile = parsePointCloud3DTile;\nexports.loadDraco = loadDraco;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _draco = require(\"@loaders.gl/draco\");\n\nvar _math = require(\"@loaders.gl/math\");\n\nvar _core = require(\"@math.gl/core\");\n\nvar _tile3dFeatureTable = _interopRequireDefault(require(\"../classes/tile-3d-feature-table\"));\n\nvar _tile3dBatchTable = _interopRequireDefault(require(\"../classes/tile-3d-batch-table\"));\n\nvar _parse3dTileHeader = require(\"./helpers/parse-3d-tile-header\");\n\nvar _parse3dTileTables = require(\"./helpers/parse-3d-tile-tables\");\n\nvar _normalize3dTileColors = require(\"./helpers/normalize-3d-tile-colors\");\n\nvar _normalize3dTileNormals = require(\"./helpers/normalize-3d-tile-normals\");\n\nvar _normalize3dTilePositions = require(\"./helpers/normalize-3d-tile-positions\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction parsePointCloud3DTile(_x, _x2, _x3, _x4, _x5) {\n  return _parsePointCloud3DTile.apply(this, arguments);\n}\n\nfunction _parsePointCloud3DTile() {\n  _parsePointCloud3DTile = (0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee(tile, arrayBuffer, byteOffset, options, context) {\n    var _parsePointCloudTable, featureTable, batchTable;\n\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            byteOffset = (0, _parse3dTileHeader.parse3DTileHeaderSync)(tile, arrayBuffer, byteOffset, options);\n            byteOffset = (0, _parse3dTileTables.parse3DTileTablesHeaderSync)(tile, arrayBuffer, byteOffset, options);\n            byteOffset = (0, _parse3dTileTables.parse3DTileTablesSync)(tile, arrayBuffer, byteOffset, options);\n            initializeTile(tile);\n            _parsePointCloudTable = parsePointCloudTables(tile), featureTable = _parsePointCloudTable.featureTable, batchTable = _parsePointCloudTable.batchTable;\n            _context.next = 7;\n            return parseDraco(tile, featureTable, batchTable, options, context);\n\n          case 7:\n            parsePositions(tile, featureTable, options);\n            parseColors(tile, featureTable, batchTable, options);\n            parseNormals(tile, featureTable, options);\n            return _context.abrupt(\"return\", byteOffset);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _parsePointCloud3DTile.apply(this, arguments);\n}\n\nfunction initializeTile(tile) {\n  tile.attributes = {\n    positions: null,\n    colors: null,\n    normals: null,\n    batchIds: null\n  };\n  tile.isQuantized = false;\n  tile.isTranslucent = false;\n  tile.isRGB565 = false;\n  tile.isOctEncoded16P = false;\n}\n\nfunction parsePointCloudTables(tile) {\n  var featureTable = new _tile3dFeatureTable[\"default\"](tile.featureTableJson, tile.featureTableBinary);\n  var pointsLength = featureTable.getGlobalProperty('POINTS_LENGTH');\n\n  if (!Number.isFinite(pointsLength)) {\n    throw new Error('POINTS_LENGTH must be defined');\n  }\n\n  featureTable.featuresLength = pointsLength;\n  tile.featuresLength = pointsLength;\n  tile.pointsLength = pointsLength;\n  tile.pointCount = pointsLength;\n  tile.rtcCenter = featureTable.getGlobalProperty('RTC_CENTER', _math.GL.FLOAT, 3);\n  var batchTable = parseBatchIds(tile, featureTable);\n  return {\n    featureTable: featureTable,\n    batchTable: batchTable\n  };\n}\n\nfunction parsePositions(tile, featureTable, options) {\n  if (!tile.attributes.positions) {\n    if (featureTable.hasProperty('POSITION')) {\n      tile.attributes.positions = featureTable.getPropertyArray('POSITION', _math.GL.FLOAT, 3);\n    } else if (featureTable.hasProperty('POSITION_QUANTIZED')) {\n      var positions = featureTable.getPropertyArray('POSITION_QUANTIZED', _math.GL.UNSIGNED_SHORT, 3);\n      tile.isQuantized = true;\n      tile.quantizedRange = (1 << 16) - 1;\n      tile.quantizedVolumeScale = featureTable.getGlobalProperty('QUANTIZED_VOLUME_SCALE', _math.GL.FLOAT, 3);\n\n      if (!tile.quantizedVolumeScale) {\n        throw new Error('QUANTIZED_VOLUME_SCALE must be defined for quantized positions.');\n      }\n\n      tile.quantizedVolumeOffset = featureTable.getGlobalProperty('QUANTIZED_VOLUME_OFFSET', _math.GL.FLOAT, 3);\n\n      if (!tile.quantizedVolumeOffset) {\n        throw new Error('QUANTIZED_VOLUME_OFFSET must be defined for quantized positions.');\n      }\n\n      tile.attributes.positions = (0, _normalize3dTilePositions.normalize3DTilePositionAttribute)(tile, positions, options);\n    }\n  }\n\n  if (!tile.attributes.positions) {\n    throw new Error('Either POSITION or POSITION_QUANTIZED must be defined.');\n  }\n}\n\nfunction parseColors(tile, featureTable, batchTable) {\n  if (!tile.attributes.colors) {\n    var colors = null;\n\n    if (featureTable.hasProperty('RGBA')) {\n      colors = featureTable.getPropertyArray('RGBA', _math.GL.UNSIGNED_BYTE, 4);\n      tile.isTranslucent = true;\n    } else if (featureTable.hasProperty('RGB')) {\n      colors = featureTable.getPropertyArray('RGB', _math.GL.UNSIGNED_BYTE, 3);\n    } else if (featureTable.hasProperty('RGB565')) {\n      colors = featureTable.getPropertyArray('RGB565', _math.GL.UNSIGNED_SHORT, 1);\n      tile.isRGB565 = true;\n    }\n\n    tile.attributes.colors = (0, _normalize3dTileColors.normalize3DTileColorAttribute)(tile, colors, batchTable);\n  }\n\n  if (featureTable.hasProperty('CONSTANT_RGBA')) {\n    tile.constantRGBA = featureTable.getGlobalProperty('CONSTANT_RGBA', _math.GL.UNSIGNED_BYTE, 4);\n  }\n}\n\nfunction parseNormals(tile, featureTable) {\n  if (!tile.attributes.normals) {\n    var normals = null;\n\n    if (featureTable.hasProperty('NORMAL')) {\n      normals = featureTable.getPropertyArray('NORMAL', _math.GL.FLOAT, 3);\n    } else if (featureTable.hasProperty('NORMAL_OCT16P')) {\n      normals = featureTable.getPropertyArray('NORMAL_OCT16P', _math.GL.UNSIGNED_BYTE, 2);\n      tile.isOctEncoded16P = true;\n    }\n\n    tile.attributes.normals = (0, _normalize3dTileNormals.normalize3DTileNormalAttribute)(tile, normals);\n  }\n}\n\nfunction parseBatchIds(tile, featureTable) {\n  var batchTable = null;\n\n  if (!tile.batchIds && featureTable.hasProperty('BATCH_ID')) {\n    tile.batchIds = featureTable.getPropertyArray('BATCH_ID', _math.GL.UNSIGNED_SHORT, 1);\n\n    if (tile.batchIds) {\n      var batchFeatureLength = featureTable.getGlobalProperty('BATCH_LENGTH');\n\n      if (!batchFeatureLength) {\n        throw new Error('Global property: BATCH_LENGTH must be defined when BATCH_ID is defined.');\n      }\n\n      var batchTableJson = tile.batchTableJson,\n          batchTableBinary = tile.batchTableBinary;\n      batchTable = new _tile3dBatchTable[\"default\"](batchTableJson, batchTableBinary, batchFeatureLength);\n    }\n  }\n\n  return batchTable;\n}\n\nfunction parseDraco(_x6, _x7, _x8, _x9, _x10) {\n  return _parseDraco.apply(this, arguments);\n}\n\nfunction _parseDraco() {\n  _parseDraco = (0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee2(tile, featureTable, batchTable, options, context) {\n    var dracoBuffer, dracoFeatureTableProperties, dracoBatchTableProperties, batchTableDraco, featureTableDraco, dracoByteOffset, dracoByteLength, dracoData;\n    return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            batchTableDraco = batchTable && batchTable.getExtension('3DTILES_draco_point_compression');\n\n            if (batchTableDraco) {\n              dracoBatchTableProperties = batchTableDraco.properties;\n            }\n\n            featureTableDraco = featureTable.getExtension('3DTILES_draco_point_compression');\n\n            if (!featureTableDraco) {\n              _context2.next = 15;\n              break;\n            }\n\n            dracoFeatureTableProperties = featureTableDraco.properties;\n            dracoByteOffset = featureTableDraco.byteOffset;\n            dracoByteLength = featureTableDraco.byteLength;\n\n            if (!(!dracoFeatureTableProperties || !Number.isFinite(dracoByteOffset) || !dracoByteLength)) {\n              _context2.next = 9;\n              break;\n            }\n\n            throw new Error('Draco properties, byteOffset, and byteLength must be defined');\n\n          case 9:\n            dracoBuffer = tile.featureTableBinary.slice(dracoByteOffset, dracoByteOffset + dracoByteLength);\n            tile.hasPositions = Number.isFinite(dracoFeatureTableProperties.POSITION);\n            tile.hasColors = Number.isFinite(dracoFeatureTableProperties.RGB) || Number.isFinite(dracoFeatureTableProperties.RGBA);\n            tile.hasNormals = Number.isFinite(dracoFeatureTableProperties.NORMAL);\n            tile.hasBatchIds = Number.isFinite(dracoFeatureTableProperties.BATCH_ID);\n            tile.isTranslucent = Number.isFinite(dracoFeatureTableProperties.RGBA);\n\n          case 15:\n            if (dracoBuffer) {\n              _context2.next = 17;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", true);\n\n          case 17:\n            dracoData = {\n              buffer: dracoBuffer,\n              properties: _objectSpread(_objectSpread({}, dracoFeatureTableProperties), dracoBatchTableProperties),\n              featureTableProperties: dracoFeatureTableProperties,\n              batchTableProperties: dracoBatchTableProperties,\n              dequantizeInShader: false\n            };\n            _context2.next = 20;\n            return loadDraco(tile, dracoData, options, context);\n\n          case 20:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 21:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _parseDraco.apply(this, arguments);\n}\n\nfunction loadDraco(_x11, _x12, _x13, _x14) {\n  return _loadDraco.apply(this, arguments);\n}\n\nfunction _loadDraco() {\n  _loadDraco = (0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee3(tile, dracoData, options, context) {\n    var parse, data, decodedPositions, decodedColors, decodedNormals, decodedBatchIds, isQuantizedDraco, isOctEncodedDraco, quantization, range;\n    return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            parse = context.parse;\n            _context3.next = 3;\n            return parse(dracoData.buffer, _draco.DracoLoader, {});\n\n          case 3:\n            data = _context3.sent;\n            decodedPositions = data.attributes.POSITION && data.attributes.POSITION.value;\n            decodedColors = data.attributes.COLOR_0 && data.attributes.COLOR_0.value;\n            decodedNormals = data.attributes.NORMAL && data.attributes.NORMAL.value;\n            decodedBatchIds = data.attributes.BATCH_ID && data.attributes.BATCH_ID.value;\n            isQuantizedDraco = decodedPositions && data.attributes.POSITION.value.quantization;\n            isOctEncodedDraco = decodedNormals && data.attributes.NORMAL.value.quantization;\n\n            if (isQuantizedDraco) {\n              quantization = data.POSITION.data.quantization;\n              range = quantization.range;\n              tile.quantizedVolumeScale = new _core.Vector3(range, range, range);\n              tile.quantizedVolumeOffset = new _core.Vector3(quantization.minValues);\n              tile.quantizedRange = (1 << quantization.quantizationBits) - 1.0;\n              tile.isQuantizedDraco = true;\n            }\n\n            if (isOctEncodedDraco) {\n              tile.octEncodedRange = (1 << data.NORMAL.data.quantization.quantizationBits) - 1.0;\n              tile.isOctEncodedDraco = true;\n            }\n\n            tile.attributes = {\n              positions: decodedPositions,\n              colors: (0, _normalize3dTileColors.normalize3DTileColorAttribute)(tile, decodedColors),\n              normals: decodedNormals,\n              batchIds: decodedBatchIds\n            };\n\n          case 13:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _loadDraco.apply(this, arguments);\n}\n//# sourceMappingURL=parse-3d-tile-point-cloud.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty2","getOwnPropertyDescriptors","defineProperties","defineProperty","_parsePointCloud3DTile","_asyncToGenerator2","_regenerator","mark","_callee","tile","arrayBuffer","byteOffset","options","context","featureTable","batchTable","wrap","_callee$","_context","prev","next","_parse3dTileHeader","parse3DTileHeaderSync","_parse3dTileTables","parse3DTileTablesHeaderSync","parse3DTileTablesSync","attributes","positions","colors","normals","batchIds","isQuantized","isTranslucent","isRGB565","isOctEncoded16P","_tile3dFeatureTable","featureTableJson","featureTableBinary","pointsLength","getGlobalProperty","Number","isFinite","Error","featuresLength","pointCount","rtcCenter","_math","GL","FLOAT","hasProperty","getPropertyArray","UNSIGNED_SHORT","batchFeatureLength","_tile3dBatchTable","batchTableJson","batchTableBinary","parseDraco","quantizedRange","quantizedVolumeScale","quantizedVolumeOffset","_normalize3dTilePositions","normalize3DTilePositionAttribute","UNSIGNED_BYTE","_normalize3dTileColors","normalize3DTileColorAttribute","constantRGBA","_normalize3dTileNormals","normalize3DTileNormalAttribute","abrupt","stop","_x6","_x7","_x8","_x9","_x10","_parseDraco","_callee2","dracoBuffer","dracoFeatureTableProperties","dracoBatchTableProperties","batchTableDraco","featureTableDraco","dracoByteOffset","dracoByteLength","dracoData","_callee2$","_context2","getExtension","properties","byteLength","slice","hasPositions","POSITION","hasColors","RGB","RGBA","hasNormals","NORMAL","hasBatchIds","BATCH_ID","buffer","featureTableProperties","batchTableProperties","dequantizeInShader","loadDraco","sent","_x11","_x12","_x13","_x14","_loadDraco","_callee3","parse","data","decodedPositions","decodedColors","decodedNormals","decodedBatchIds","isQuantizedDraco","isOctEncodedDraco","quantization","range","_callee3$","_context3","_draco","DracoLoader","value","COLOR_0","_core","Vector3","minValues","quantizationBits","octEncodedRange","_interopRequireDefault","parsePointCloud3DTile","_x","_x2","_x3","_x4","_x5"]
}
