{
"version":3,
"file":"module$node_modules$$math_DOT_gl$polygon$dist$es5$polygon.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,0DAAA,CAA8E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGlHC,MAAAA,CAAyBH,OAAA,CAAQ,kEAAR,CAE7BI,OAAAC,eAAA,CAAsBH,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CI,MAAO,CAAA,CADoC,CAA7C,CAGAJ,QAAA,CAAQ,SAAR,CAAA,CAAqB,IAAK,EAE1B,KAAIK,iBAAmBJ,MAAA,CAAuBH,OAAA,CAAQ,2DAAR,CAAvB,CAAvB,CAEIQ,cAAgBL,MAAA,CAAuBH,OAAA,CAAQ,wDAAR,CAAvB,CAFpB,CAIIS,MAAQT,OAAA,CAAQ,sDAAR,CAERU;OAAAA,CAAU,QAAS,EAAG,CACxBA,QAASA,QAAO,CAACC,MAAD,CAAS,CACvB,CAAC,CAAA,CAAGJ,gBAAA,CAAiB,SAAjB,CAAJ,EAAiC,IAAjC,CAAuCG,OAAvC,CACA,KAAAC,OAAA,CAAcA,MACd,KAAAC,SAAA,CAAgB,CAAC,CAAA,CAAGH,KAAAI,OAAJ,EAAkB,IAAAF,OAAA,CAAY,IAAAA,OAAAG,OAAZ,CAAiC,CAAjC,CAAlB,CAAuD,IAAAH,OAAA,CAAY,CAAZ,CAAvD,CAChBP,OAAAW,OAAA,CAAc,IAAd,CAJuB,CAOzB,CAAC,CAAA,CAAGP,aAAA,CAAc,SAAd,CAAJ,EAA8BE,OAA9B,CAAuC,CAAC,CACtCM,IAAK,eADiC,CAEtCV,MAAOW,QAAsB,EAAG,CAC9B,IAAIC,KAAO,CACX,KAAAC,eAAA,CAAoB,QAAS,CAACC,EAAD,CAAKC,EAAL,CAAS,CACpCH,IAAA,GAASE,EAAA,CAAG,CAAH,CAAT,CAAiBC,EAAA,CAAG,CAAH,CAAjB,GAA2BD,EAAA,CAAG,CAAH,CAA3B,CAAmCC,EAAA,CAAG,CAAH,CAAnC,CADoC,CAAtC,CAGA,OAAOH,KAAP,CAAc,CALgB,CAFM,CAAD,CASpC,CACDF,IAAK,SADJ,CAEDV,MAAOgB,QAAgB,EAAG,CACxB,MAAOC,KAAAC,IAAA,CAAS,IAAAP,cAAA,EAAT,CADiB,CAFzB,CAToC,CAcpC,CACDD,IAAK,qBADJ,CAEDV,MAAOmB,QAA4B,EAAG,CACpC,MAAOF,KAAAG,KAAA,CAAU,IAAAT,cAAA,EAAV,CAD6B,CAFrC,CAdoC;AAmBpC,CACDD,IAAK,gBADJ,CAEDV,MAAOa,QAAuB,CAACQ,OAAD,CAAU,CAGtC,IAFA,IAAIb,OAAS,IAAAH,OAAAG,OAAb,CAESc,EAAI,CAAb,CAAgBA,CAAhB,CAAoBd,MAApB,CAA6B,CAA7B,CAAgCc,CAAA,EAAhC,CACED,OAAA,CAAQ,IAAAhB,OAAA,CAAYiB,CAAZ,CAAR,CAAwB,IAAAjB,OAAA,CAAYiB,CAAZ,CAAgB,CAAhB,CAAxB,CAA4CA,CAA5C,CAA+CA,CAA/C,CAAmD,CAAnD,CAGG,KAAAhB,SAAL,EACEe,OAAA,CAAQ,IAAAhB,OAAA,CAAYG,MAAZ,CAAqB,CAArB,CAAR,CAAiC,IAAAH,OAAA,CAAY,CAAZ,CAAjC,CAAiDG,MAAjD,CAA0D,CAA1D,CAA6D,CAA7D,CARoC,CAFvC,CAnBoC,CAAvC,CAiCA,OAAOJ,QAzCiB,CAAZ,EA4CdR,QAAA,CAAQ,SAAR,CAAA,CAAqBQ,OA5DiG;",
"sources":["node_modules/@math_DOT_gl/polygon/dist/es5/polygon.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$math_DOT_gl$polygon$dist$es5$polygon\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _core = require(\"@math.gl/core\");\n\nvar Polygon = function () {\n  function Polygon(points) {\n    (0, _classCallCheck2[\"default\"])(this, Polygon);\n    this.points = points;\n    this.isClosed = (0, _core.equals)(this.points[this.points.length - 1], this.points[0]);\n    Object.freeze(this);\n  }\n\n  (0, _createClass2[\"default\"])(Polygon, [{\n    key: \"getSignedArea\",\n    value: function getSignedArea() {\n      var area = 0;\n      this.forEachSegment(function (p1, p2) {\n        area += (p1[0] + p2[0]) * (p1[1] - p2[1]);\n      });\n      return area / 2;\n    }\n  }, {\n    key: \"getArea\",\n    value: function getArea() {\n      return Math.abs(this.getSignedArea());\n    }\n  }, {\n    key: \"getWindingDirection\",\n    value: function getWindingDirection() {\n      return Math.sign(this.getSignedArea());\n    }\n  }, {\n    key: \"forEachSegment\",\n    value: function forEachSegment(visitor) {\n      var length = this.points.length;\n\n      for (var i = 0; i < length - 1; i++) {\n        visitor(this.points[i], this.points[i + 1], i, i + 1);\n      }\n\n      if (!this.isClosed) {\n        visitor(this.points[length - 1], this.points[0], length - 1, 0);\n      }\n    }\n  }]);\n  return Polygon;\n}();\n\nexports[\"default\"] = Polygon;\n//# sourceMappingURL=polygon.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","Object","defineProperty","value","_classCallCheck2","_createClass2","_core","Polygon","points","isClosed","equals","length","freeze","key","getSignedArea","area","forEachSegment","p1","p2","getArea","Math","abs","getWindingDirection","sign","visitor","i"]
}
