{
"version":3,
"file":"module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$cpu_grid_layer$grid_aggregator.js",
"lineCount":8,
"mappings":"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",
"sources":["node_modules/@deck_DOT_gl/aggregation-layers/dist/es5/cpu-grid-layer/grid-aggregator.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$cpu_grid_layer$grid_aggregator\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pointToDensityGridDataCPU = pointToDensityGridDataCPU;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _core = require(\"@deck.gl/core\");\n\nvar _gridAggregationUtils = require(\"../utils/grid-aggregation-utils\");\n\nfunction pointToDensityGridDataCPU(props, aggregationParams) {\n  var hashInfo = pointsToGridHashing(props, aggregationParams);\n  var result = getGridLayerDataFromGridHash(hashInfo);\n  return {\n    gridHash: hashInfo.gridHash,\n    gridOffset: hashInfo.gridOffset,\n    data: result\n  };\n}\n\nfunction pointsToGridHashing(props, aggregationParams) {\n  var _props$data = props.data,\n      data = _props$data === void 0 ? [] : _props$data,\n      cellSize = props.cellSize;\n  var attributes = aggregationParams.attributes,\n      viewport = aggregationParams.viewport,\n      projectPoints = aggregationParams.projectPoints,\n      numInstances = aggregationParams.numInstances;\n  var positions = attributes.positions.value;\n\n  var _attributes$positions = attributes.positions.getAccessor(),\n      size = _attributes$positions.size;\n\n  var boundingBox = aggregationParams.boundingBox || getPositionBoundingBox(attributes.positions, numInstances);\n  var offsets = aggregationParams.posOffset || [180, 90];\n  var gridOffset = aggregationParams.gridOffset || (0, _gridAggregationUtils.getGridOffset)(boundingBox, cellSize);\n\n  if (gridOffset.xOffset <= 0 || gridOffset.yOffset <= 0) {\n    return {\n      gridHash: {},\n      gridOffset: gridOffset\n    };\n  }\n\n  var width = viewport.width,\n      height = viewport.height;\n  var numCol = Math.ceil(width / gridOffset.xOffset);\n  var numRow = Math.ceil(height / gridOffset.yOffset);\n  var gridHash = {};\n\n  var _createIterable = (0, _core.createIterable)(data),\n      iterable = _createIterable.iterable,\n      objectInfo = _createIterable.objectInfo;\n\n  var position = new Array(3);\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = iterable[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var pt = _step.value;\n      objectInfo.index++;\n      position[0] = positions[objectInfo.index * size];\n      position[1] = positions[objectInfo.index * size + 1];\n      position[2] = size >= 3 ? positions[objectInfo.index * size + 2] : 0;\n\n      var _ref = projectPoints ? viewport.project(position) : position,\n          _ref2 = (0, _slicedToArray2[\"default\"])(_ref, 2),\n          x = _ref2[0],\n          y = _ref2[1];\n\n      if (Number.isFinite(x) && Number.isFinite(y)) {\n        var yIndex = Math.floor((y + offsets[1]) / gridOffset.yOffset);\n        var xIndex = Math.floor((x + offsets[0]) / gridOffset.xOffset);\n\n        if (!projectPoints || xIndex >= 0 && xIndex < numCol && yIndex >= 0 && yIndex < numRow) {\n          var key = \"\".concat(yIndex, \"-\").concat(xIndex);\n          gridHash[key] = gridHash[key] || {\n            count: 0,\n            points: [],\n            lonIdx: xIndex,\n            latIdx: yIndex\n          };\n          gridHash[key].count += 1;\n          gridHash[key].points.push(pt);\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n        _iterator[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return {\n    gridHash: gridHash,\n    gridOffset: gridOffset,\n    offsets: [offsets[0] * -1, offsets[1] * -1]\n  };\n}\n\nfunction getGridLayerDataFromGridHash(_ref3) {\n  var gridHash = _ref3.gridHash,\n      gridOffset = _ref3.gridOffset,\n      offsets = _ref3.offsets;\n  var data = new Array(Object.keys(gridHash).length);\n  var i = 0;\n\n  for (var key in gridHash) {\n    var idxs = key.split('-');\n    var latIdx = parseInt(idxs[0], 10);\n    var lonIdx = parseInt(idxs[1], 10);\n    var index = i++;\n    data[index] = Object.assign({\n      index: index,\n      position: [offsets[0] + gridOffset.xOffset * lonIdx, offsets[1] + gridOffset.yOffset * latIdx]\n    }, gridHash[key]);\n  }\n\n  return data;\n}\n\nfunction getPositionBoundingBox(positionAttribute, numInstance) {\n  var positions = positionAttribute.value;\n\n  var _positionAttribute$ge = positionAttribute.getAccessor(),\n      size = _positionAttribute$ge.size;\n\n  var yMin = Infinity;\n  var yMax = -Infinity;\n  var xMin = Infinity;\n  var xMax = -Infinity;\n  var y;\n  var x;\n\n  for (var i = 0; i < numInstance; i++) {\n    x = positions[i * size];\n    y = positions[i * size + 1];\n\n    if (Number.isFinite(x) && Number.isFinite(y)) {\n      yMin = y < yMin ? y : yMin;\n      yMax = y > yMax ? y : yMax;\n      xMin = x < xMin ? x : xMin;\n      xMax = x > xMax ? x : xMax;\n    }\n  }\n\n  return {\n    xMin: xMin,\n    xMax: xMax,\n    yMin: yMin,\n    yMax: yMax\n  };\n}\n//# sourceMappingURL=grid-aggregator.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","Object","defineProperty","value","pointToDensityGridDataCPU","props","aggregationParams","_props$data","data","cellSize","attributes","viewport","projectPoints","numInstances","positions","size","getAccessor","_attributes$positions","boundingBox","positionAttribute","_positionAttribute$ge","yMin","Infinity","yMax","xMin","xMax","y","x","i","numInstance","Number","isFinite","offsets","posOffset","gridOffset","_gridAggregationUtils","getGridOffset","xOffset","yOffset","numCol","Math","ceil","width","numRow","height","gridHash","_createIterable","_core","createIterable","iterable","objectInfo","position","Array","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iterator","Symbol","iterator","done","_step","next","pt","index","_ref","project","_ref2","_slicedToArray2","yIndex","floor","xIndex","key","concat","count","points","lonIdx","latIdx","push","err","keys","length","idxs","split","parseInt","assign"]
}
