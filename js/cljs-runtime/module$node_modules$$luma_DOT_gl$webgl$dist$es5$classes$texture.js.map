{
"version":3,
"file":"module$node_modules$$luma_DOT_gl$webgl$dist$es5$classes$texture.js",
"lineCount":30,
"mappings":"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",
"sources":["node_modules/@luma_DOT_gl/webgl/dist/es5/classes/texture.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$luma_DOT_gl$webgl$dist$es5$classes$texture\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _resource = _interopRequireDefault(require(\"./resource\"));\n\nvar _buffer = _interopRequireDefault(require(\"./buffer\"));\n\nvar _textureFormats = require(\"./texture-formats\");\n\nvar _gltools = require(\"@luma.gl/gltools\");\n\nvar _env = require(\"probe.gl/env\");\n\nvar _webglUtils = require(\"../webgl-utils\");\n\nvar _utils = require(\"../utils\");\n\nvar NPOT_MIN_FILTERS = [9729, 9728];\n\nvar WebGLBuffer = _env.global.WebGLBuffer || function WebGLBuffer() {};\n\nvar Texture = function (_Resource) {\n  (0, _inherits2[\"default\"])(Texture, _Resource);\n  (0, _createClass2[\"default\"])(Texture, null, [{\n    key: \"isSupported\",\n    value: function isSupported(gl) {\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          format = _ref.format,\n          linearFiltering = _ref.linearFiltering;\n\n      var supported = true;\n\n      if (format) {\n        supported = supported && (0, _textureFormats.isFormatSupported)(gl, format);\n        supported = supported && (!linearFiltering || (0, _textureFormats.isLinearFilteringSupported)(gl, format));\n      }\n\n      return supported;\n    }\n  }]);\n\n  function Texture(gl, props) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, Texture);\n    var _props$id = props.id,\n        id = _props$id === void 0 ? (0, _utils.uid)('texture') : _props$id,\n        handle = props.handle,\n        target = props.target;\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(Texture).call(this, gl, {\n      id: id,\n      handle: handle\n    }));\n    _this.target = target;\n    _this.textureUnit = undefined;\n    _this.loaded = false;\n    _this.width = undefined;\n    _this.height = undefined;\n    _this.depth = undefined;\n    _this.format = undefined;\n    _this.type = undefined;\n    _this.dataFormat = undefined;\n    _this.border = undefined;\n    _this.textureUnit = undefined;\n    _this.mipmaps = undefined;\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(Texture, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"Texture(\".concat(this.id, \",\").concat(this.width, \"x\").concat(this.height, \")\");\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      var _this2 = this;\n\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var data = props.data;\n\n      if (data instanceof Promise) {\n        data.then(function (resolvedImageData) {\n          return _this2.initialize(Object.assign({}, props, {\n            pixels: resolvedImageData,\n            data: resolvedImageData\n          }));\n        });\n        return this;\n      }\n\n      var _props$pixels = props.pixels,\n          pixels = _props$pixels === void 0 ? null : _props$pixels,\n          _props$format = props.format,\n          format = _props$format === void 0 ? 6408 : _props$format,\n          _props$border = props.border,\n          border = _props$border === void 0 ? 0 : _props$border,\n          _props$recreate = props.recreate,\n          recreate = _props$recreate === void 0 ? false : _props$recreate,\n          _props$parameters = props.parameters,\n          parameters = _props$parameters === void 0 ? {} : _props$parameters,\n          _props$pixelStore = props.pixelStore,\n          pixelStore = _props$pixelStore === void 0 ? {} : _props$pixelStore,\n          _props$textureUnit = props.textureUnit,\n          textureUnit = _props$textureUnit === void 0 ? undefined : _props$textureUnit;\n      var _props$mipmaps = props.mipmaps,\n          mipmaps = _props$mipmaps === void 0 ? true : _props$mipmaps;\n\n      if (!data) {\n        data = pixels;\n      }\n\n      var width = props.width,\n          height = props.height,\n          dataFormat = props.dataFormat,\n          type = props.type;\n      var _props$depth = props.depth,\n          depth = _props$depth === void 0 ? 0 : _props$depth;\n\n      var _this$_deduceParamete = this._deduceParameters({\n        format: format,\n        type: type,\n        dataFormat: dataFormat,\n        compressed: false,\n        data: data,\n        width: width,\n        height: height\n      });\n\n      width = _this$_deduceParamete.width;\n      height = _this$_deduceParamete.height;\n      dataFormat = _this$_deduceParamete.dataFormat;\n      type = _this$_deduceParamete.type;\n      this.width = width;\n      this.height = height;\n      this.depth = depth;\n      this.format = format;\n      this.type = type;\n      this.dataFormat = dataFormat;\n      this.border = border;\n      this.textureUnit = textureUnit;\n\n      if (Number.isFinite(this.textureUnit)) {\n        this.gl.activeTexture(33984 + this.textureUnit);\n        this.gl.bindTexture(this.target, this.handle);\n      }\n\n      if (mipmaps && this._isNPOT()) {\n        _gltools.log.warn(\"texture: \".concat(this, \" is Non-Power-Of-Two, disabling mipmaping\"))();\n\n        mipmaps = false;\n\n        this._updateForNPOT(parameters);\n      }\n\n      this.mipmaps = mipmaps;\n      this.setImageData({\n        data: data,\n        width: width,\n        height: height,\n        depth: depth,\n        format: format,\n        type: type,\n        dataFormat: dataFormat,\n        border: border,\n        mipmaps: mipmaps,\n        parameters: pixelStore\n      });\n\n      if (mipmaps) {\n        this.generateMipmap();\n      }\n\n      this.setParameters(parameters);\n\n      if (recreate) {\n        this.data = data;\n      }\n\n      return this;\n    }\n  }, {\n    key: \"resize\",\n    value: function resize(_ref2) {\n      var height = _ref2.height,\n          width = _ref2.width,\n          _ref2$mipmaps = _ref2.mipmaps,\n          mipmaps = _ref2$mipmaps === void 0 ? false : _ref2$mipmaps;\n\n      if (width !== this.width || height !== this.height) {\n        return this.initialize({\n          width: width,\n          height: height,\n          format: this.format,\n          type: this.type,\n          dataFormat: this.dataFormat,\n          border: this.border,\n          mipmaps: mipmaps\n        });\n      }\n\n      return this;\n    }\n  }, {\n    key: \"generateMipmap\",\n    value: function generateMipmap() {\n      var _this3 = this;\n\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (this._isNPOT()) {\n        _gltools.log.warn(\"texture: \".concat(this, \" is Non-Power-Of-Two, disabling mipmaping\"))();\n\n        return this;\n      }\n\n      this.mipmaps = true;\n      this.gl.bindTexture(this.target, this.handle);\n      (0, _gltools.withParameters)(this.gl, params, function () {\n        _this3.gl.generateMipmap(_this3.target);\n      });\n      this.gl.bindTexture(this.target, null);\n      return this;\n    }\n  }, {\n    key: \"setImageData\",\n    value: function setImageData(options) {\n      this._trackDeallocatedMemory('Texture');\n\n      var _options$target = options.target,\n          target = _options$target === void 0 ? this.target : _options$target,\n          _options$pixels = options.pixels,\n          pixels = _options$pixels === void 0 ? null : _options$pixels,\n          _options$level = options.level,\n          level = _options$level === void 0 ? 0 : _options$level,\n          _options$format = options.format,\n          format = _options$format === void 0 ? this.format : _options$format,\n          _options$border = options.border,\n          border = _options$border === void 0 ? this.border : _options$border,\n          _options$offset = options.offset,\n          offset = _options$offset === void 0 ? 0 : _options$offset,\n          _options$parameters = options.parameters,\n          parameters = _options$parameters === void 0 ? {} : _options$parameters;\n      var _options$data = options.data,\n          data = _options$data === void 0 ? null : _options$data,\n          _options$type = options.type,\n          type = _options$type === void 0 ? this.type : _options$type,\n          _options$width = options.width,\n          width = _options$width === void 0 ? this.width : _options$width,\n          _options$height = options.height,\n          height = _options$height === void 0 ? this.height : _options$height,\n          _options$dataFormat = options.dataFormat,\n          dataFormat = _options$dataFormat === void 0 ? this.dataFormat : _options$dataFormat,\n          _options$compressed = options.compressed,\n          compressed = _options$compressed === void 0 ? false : _options$compressed;\n\n      if (!data) {\n        data = pixels;\n      }\n\n      var _this$_deduceParamete2 = this._deduceParameters({\n        format: format,\n        type: type,\n        dataFormat: dataFormat,\n        compressed: compressed,\n        data: data,\n        width: width,\n        height: height\n      });\n\n      type = _this$_deduceParamete2.type;\n      dataFormat = _this$_deduceParamete2.dataFormat;\n      compressed = _this$_deduceParamete2.compressed;\n      width = _this$_deduceParamete2.width;\n      height = _this$_deduceParamete2.height;\n      var gl = this.gl;\n      gl.bindTexture(this.target, this.handle);\n      var dataType = null;\n\n      var _this$_getDataType = this._getDataType({\n        data: data,\n        compressed: compressed\n      });\n\n      data = _this$_getDataType.data;\n      dataType = _this$_getDataType.dataType;\n      (0, _gltools.withParameters)(this.gl, parameters, function () {\n        switch (dataType) {\n          case 'null':\n            gl.texImage2D(target, level, format, width, height, border, dataFormat, type, data);\n            break;\n\n          case 'typed-array':\n            gl.texImage2D(target, level, format, width, height, border, dataFormat, type, data, offset);\n            break;\n\n          case 'buffer':\n            (0, _webglUtils.assertWebGL2Context)(gl);\n            gl.bindBuffer(35052, data.handle || data);\n            gl.texImage2D(target, level, format, width, height, border, dataFormat, type, offset);\n            gl.bindBuffer(35052, null);\n            break;\n\n          case 'browser-object':\n            if ((0, _gltools.isWebGL2)(gl)) {\n              gl.texImage2D(target, level, format, width, height, border, dataFormat, type, data);\n            } else {\n              gl.texImage2D(target, level, format, dataFormat, type, data);\n            }\n\n            break;\n\n          case 'compressed':\n            gl.compressedTexImage2D(target, level, format, width, height, border, data);\n            break;\n\n          default:\n            (0, _utils.assert)(false, 'Unknown image data type');\n        }\n      });\n\n      if (data && data.byteLength) {\n        this._trackAllocatedMemory(data.byteLength, 'Texture');\n      } else {\n        var channels = _textureFormats.DATA_FORMAT_CHANNELS[this.dataFormat] || 4;\n        var channelSize = _textureFormats.TYPE_SIZES[this.type] || 1;\n\n        this._trackAllocatedMemory(this.width * this.height * channels * channelSize, 'Texture');\n      }\n\n      this.loaded = true;\n      return this;\n    }\n  }, {\n    key: \"setSubImageData\",\n    value: function setSubImageData(_ref3) {\n      var _this4 = this;\n\n      var _ref3$target = _ref3.target,\n          target = _ref3$target === void 0 ? this.target : _ref3$target,\n          _ref3$pixels = _ref3.pixels,\n          pixels = _ref3$pixels === void 0 ? null : _ref3$pixels,\n          _ref3$data = _ref3.data,\n          data = _ref3$data === void 0 ? null : _ref3$data,\n          _ref3$x = _ref3.x,\n          x = _ref3$x === void 0 ? 0 : _ref3$x,\n          _ref3$y = _ref3.y,\n          y = _ref3$y === void 0 ? 0 : _ref3$y,\n          _ref3$width = _ref3.width,\n          width = _ref3$width === void 0 ? this.width : _ref3$width,\n          _ref3$height = _ref3.height,\n          height = _ref3$height === void 0 ? this.height : _ref3$height,\n          _ref3$level = _ref3.level,\n          level = _ref3$level === void 0 ? 0 : _ref3$level,\n          _ref3$format = _ref3.format,\n          format = _ref3$format === void 0 ? this.format : _ref3$format,\n          _ref3$type = _ref3.type,\n          type = _ref3$type === void 0 ? this.type : _ref3$type,\n          _ref3$dataFormat = _ref3.dataFormat,\n          dataFormat = _ref3$dataFormat === void 0 ? this.dataFormat : _ref3$dataFormat,\n          _ref3$compressed = _ref3.compressed,\n          compressed = _ref3$compressed === void 0 ? false : _ref3$compressed,\n          _ref3$offset = _ref3.offset,\n          offset = _ref3$offset === void 0 ? 0 : _ref3$offset,\n          _ref3$border = _ref3.border,\n          border = _ref3$border === void 0 ? this.border : _ref3$border,\n          _ref3$parameters = _ref3.parameters,\n          parameters = _ref3$parameters === void 0 ? {} : _ref3$parameters;\n\n      var _this$_deduceParamete3 = this._deduceParameters({\n        format: format,\n        type: type,\n        dataFormat: dataFormat,\n        compressed: compressed,\n        data: data,\n        width: width,\n        height: height\n      });\n\n      type = _this$_deduceParamete3.type;\n      dataFormat = _this$_deduceParamete3.dataFormat;\n      compressed = _this$_deduceParamete3.compressed;\n      width = _this$_deduceParamete3.width;\n      height = _this$_deduceParamete3.height;\n      (0, _utils.assert)(this.depth === 0, 'texSubImage not supported for 3D textures');\n\n      if (!data) {\n        data = pixels;\n      }\n\n      if (data && data.data) {\n        var ndarray = data;\n        data = ndarray.data;\n        width = ndarray.shape[0];\n        height = ndarray.shape[1];\n      }\n\n      if (data instanceof _buffer[\"default\"]) {\n        data = data.handle;\n      }\n\n      this.gl.bindTexture(this.target, this.handle);\n      (0, _gltools.withParameters)(this.gl, parameters, function () {\n        if (compressed) {\n          _this4.gl.compressedTexSubImage2D(target, level, x, y, width, height, format, data);\n        } else if (data === null) {\n          _this4.gl.texSubImage2D(target, level, x, y, width, height, dataFormat, type, null);\n        } else if (ArrayBuffer.isView(data)) {\n          _this4.gl.texSubImage2D(target, level, x, y, width, height, dataFormat, type, data, offset);\n        } else if (data instanceof WebGLBuffer) {\n          (0, _webglUtils.assertWebGL2Context)(_this4.gl);\n\n          _this4.gl.bindBuffer(35052, data);\n\n          _this4.gl.texSubImage2D(target, level, x, y, width, height, dataFormat, type, offset);\n\n          _this4.gl.bindBuffer(35052, null);\n        } else if ((0, _gltools.isWebGL2)(_this4.gl)) {\n          _this4.gl.texSubImage2D(target, level, x, y, width, height, dataFormat, type, data);\n        } else {\n          _this4.gl.texSubImage2D(target, level, x, y, dataFormat, type, data);\n        }\n      });\n      this.gl.bindTexture(this.target, null);\n    }\n  }, {\n    key: \"copyFramebuffer\",\n    value: function copyFramebuffer() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      _gltools.log.error('Texture.copyFramebuffer({...}) is no logner supported, use copyToTexture(source, target, opts})')();\n\n      return null;\n    }\n  }, {\n    key: \"getActiveUnit\",\n    value: function getActiveUnit() {\n      return this.gl.getParameter(34016) - 33984;\n    }\n  }, {\n    key: \"bind\",\n    value: function bind() {\n      var textureUnit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.textureUnit;\n      var gl = this.gl;\n\n      if (textureUnit !== undefined) {\n        this.textureUnit = textureUnit;\n        gl.activeTexture(33984 + textureUnit);\n      }\n\n      gl.bindTexture(this.target, this.handle);\n      return textureUnit;\n    }\n  }, {\n    key: \"unbind\",\n    value: function unbind() {\n      var textureUnit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.textureUnit;\n      var gl = this.gl;\n\n      if (textureUnit !== undefined) {\n        this.textureUnit = textureUnit;\n        gl.activeTexture(33984 + textureUnit);\n      }\n\n      gl.bindTexture(this.target, null);\n      return textureUnit;\n    }\n  }, {\n    key: \"_getDataType\",\n    value: function _getDataType(_ref4) {\n      var data = _ref4.data,\n          _ref4$compressed = _ref4.compressed,\n          compressed = _ref4$compressed === void 0 ? false : _ref4$compressed;\n\n      if (compressed) {\n        return {\n          data: data,\n          dataType: 'compressed'\n        };\n      }\n\n      if (data === null) {\n        return {\n          data: data,\n          dataType: 'null'\n        };\n      }\n\n      if (ArrayBuffer.isView(data)) {\n        return {\n          data: data,\n          dataType: 'typed-array'\n        };\n      }\n\n      if (data instanceof _buffer[\"default\"]) {\n        return {\n          data: data.handle,\n          dataType: 'buffer'\n        };\n      }\n\n      if (data instanceof WebGLBuffer) {\n        return {\n          data: data,\n          dataType: 'buffer'\n        };\n      }\n\n      return {\n        data: data,\n        dataType: 'browser-object'\n      };\n    }\n  }, {\n    key: \"_deduceParameters\",\n    value: function _deduceParameters(opts) {\n      var format = opts.format,\n          data = opts.data;\n      var width = opts.width,\n          height = opts.height,\n          dataFormat = opts.dataFormat,\n          type = opts.type,\n          compressed = opts.compressed;\n      var textureFormat = _textureFormats.TEXTURE_FORMATS[format];\n      dataFormat = dataFormat || textureFormat && textureFormat.dataFormat;\n      type = type || textureFormat && textureFormat.types[0];\n      compressed = compressed || textureFormat && textureFormat.compressed;\n\n      var _this$_deduceImageSiz = this._deduceImageSize(data, width, height);\n\n      width = _this$_deduceImageSiz.width;\n      height = _this$_deduceImageSiz.height;\n      return {\n        dataFormat: dataFormat,\n        type: type,\n        compressed: compressed,\n        width: width,\n        height: height,\n        format: format,\n        data: data\n      };\n    }\n  }, {\n    key: \"_deduceImageSize\",\n    value: function _deduceImageSize(data, width, height) {\n      var size;\n\n      if (typeof ImageData !== 'undefined' && data instanceof ImageData) {\n        size = {\n          width: data.width,\n          height: data.height\n        };\n      } else if (typeof HTMLImageElement !== 'undefined' && data instanceof HTMLImageElement) {\n        size = {\n          width: data.naturalWidth,\n          height: data.naturalHeight\n        };\n      } else if (typeof HTMLCanvasElement !== 'undefined' && data instanceof HTMLCanvasElement) {\n        size = {\n          width: data.width,\n          height: data.height\n        };\n      } else if (typeof ImageBitmap !== 'undefined' && data instanceof ImageBitmap) {\n        size = {\n          width: data.width,\n          height: data.height\n        };\n      } else if (typeof HTMLVideoElement !== 'undefined' && data instanceof HTMLVideoElement) {\n        size = {\n          width: data.videoWidth,\n          height: data.videoHeight\n        };\n      } else if (!data) {\n        size = {\n          width: width >= 0 ? width : 1,\n          height: height >= 0 ? height : 1\n        };\n      } else {\n        size = {\n          width: width,\n          height: height\n        };\n      }\n\n      (0, _utils.assert)(size, 'Could not deduced texture size');\n      (0, _utils.assert)(width === undefined || size.width === width, 'Deduced texture width does not match supplied width');\n      (0, _utils.assert)(height === undefined || size.height === height, 'Deduced texture height does not match supplied height');\n      return size;\n    }\n  }, {\n    key: \"_createHandle\",\n    value: function _createHandle() {\n      return this.gl.createTexture();\n    }\n  }, {\n    key: \"_deleteHandle\",\n    value: function _deleteHandle() {\n      this.gl.deleteTexture(this.handle);\n\n      this._trackDeallocatedMemory('Texture');\n    }\n  }, {\n    key: \"_getParameter\",\n    value: function _getParameter(pname) {\n      switch (pname) {\n        case 4096:\n          return this.width;\n\n        case 4097:\n          return this.height;\n\n        default:\n          this.gl.bindTexture(this.target, this.handle);\n          var value = this.gl.getTexParameter(this.target, pname);\n          this.gl.bindTexture(this.target, null);\n          return value;\n      }\n    }\n  }, {\n    key: \"_setParameter\",\n    value: function _setParameter(pname, param) {\n      this.gl.bindTexture(this.target, this.handle);\n      param = this._getNPOTParam(pname, param);\n\n      switch (pname) {\n        case 33082:\n        case 33083:\n          this.gl.texParameterf(this.handle, pname, param);\n          break;\n\n        case 4096:\n        case 4097:\n          (0, _utils.assert)(false);\n          break;\n\n        default:\n          this.gl.texParameteri(this.target, pname, param);\n          break;\n      }\n\n      this.gl.bindTexture(this.target, null);\n      return this;\n    }\n  }, {\n    key: \"_isNPOT\",\n    value: function _isNPOT() {\n      if ((0, _gltools.isWebGL2)(this.gl)) {\n        return false;\n      }\n\n      if (!this.width || !this.height) {\n        return false;\n      }\n\n      return !(0, _utils.isPowerOfTwo)(this.width) || !(0, _utils.isPowerOfTwo)(this.height);\n    }\n  }, {\n    key: \"_updateForNPOT\",\n    value: function _updateForNPOT(parameters) {\n      if (parameters[this.gl.TEXTURE_MIN_FILTER] === undefined) {\n        parameters[this.gl.TEXTURE_MIN_FILTER] = this.gl.LINEAR;\n      }\n\n      if (parameters[this.gl.TEXTURE_WRAP_S] === undefined) {\n        parameters[this.gl.TEXTURE_WRAP_S] = this.gl.CLAMP_TO_EDGE;\n      }\n\n      if (parameters[this.gl.TEXTURE_WRAP_T] === undefined) {\n        parameters[this.gl.TEXTURE_WRAP_T] = this.gl.CLAMP_TO_EDGE;\n      }\n    }\n  }, {\n    key: \"_getNPOTParam\",\n    value: function _getNPOTParam(pname, param) {\n      if (this._isNPOT()) {\n        switch (pname) {\n          case 10241:\n            if (NPOT_MIN_FILTERS.indexOf(param) === -1) {\n              param = 9729;\n            }\n\n            break;\n\n          case 10242:\n          case 10243:\n            if (param !== 33071) {\n              param = 33071;\n            }\n\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      return param;\n    }\n  }]);\n  return Texture;\n}(_resource[\"default\"]);\n\nexports[\"default\"] = Texture;\n//# sourceMappingURL=texture.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","Object","defineProperty","value","_classCallCheck2","_possibleConstructorReturn2","_getPrototypeOf2","_createClass2","_inherits2","_resource","_buffer","_textureFormats","_gltools","_env","_webglUtils","_utils","NPOT_MIN_FILTERS","WebGLBuffer","Texture","_Resource","gl","props","_props$id","id","uid","handle","target","_this","call","textureUnit","undefined","loaded","width","height","depth","format","type","dataFormat","border","mipmaps","key","isSupported","_ref","arguments","length","linearFiltering","supported","isFormatSupported","isLinearFilteringSupported","toString","concat","initialize","_this2","data","Promise","then","resolvedImageData","assign","pixels","_props$pixels","_props$format","_props$border","_props$recreate","recreate","_props$parameters","parameters","_props$pixelStore","pixelStore","_props$textureUnit","_props$mipmaps","_props$depth","_this$_deduceParamete","_deduceParameters","compressed","Number","isFinite","activeTexture","bindTexture","_isNPOT","log","warn","_updateForNPOT","setImageData","generateMipmap","setParameters","resize","_ref2","_ref2$mipmaps","_this3","params","withParameters","options","_trackDeallocatedMemory","_options$target","_options$pixels","_options$level","level","_options$format","_options$border","_options$offset","offset","_options$parameters","_options$data","_options$type","_options$width","_options$height","_options$dataFormat","_options$compressed","_this$_deduceParamete2","dataType","_this$_getDataType","_getDataType","texImage2D","assertWebGL2Context","bindBuffer","isWebGL2","compressedTexImage2D","assert","byteLength","_trackAllocatedMemory","DATA_FORMAT_CHANNELS","TYPE_SIZES","setSubImageData","_ref3","_this4","_ref3$target","_ref3$pixels","_ref3$data","_ref3$x","x","_ref3$y","y","_ref3$width","_ref3$height","_ref3$level","_ref3$format","_ref3$type","_ref3$dataFormat","_ref3$compressed","_ref3$offset","_ref3$parameters","_this$_deduceParamete3","ndarray","shape","compressedTexSubImage2D","texSubImage2D","ArrayBuffer","isView","copyFramebuffer","error","getActiveUnit","getParameter","bind","unbind","_ref4","_ref4$compressed","opts","textureFormat","TEXTURE_FORMATS","types","_this$_deduceImageSiz","_deduceImageSize","size","ImageData","HTMLImageElement","naturalWidth","naturalHeight","HTMLCanvasElement","ImageBitmap","HTMLVideoElement","videoWidth","videoHeight","_createHandle","createTexture","_deleteHandle","deleteTexture","_getParameter","pname","getTexParameter","_setParameter","param","_getNPOTParam","texParameterf","texParameteri","isPowerOfTwo","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","indexOf"]
}
