shadow$provide.module$node_modules$$loaders_DOT_gl$3d_tiles$dist$es5$lib$parsers$helpers$parse_3d_tile_gltf_view=function(global,require,module,exports){function _extractGLTF(){_extractGLTF=(0,_asyncToGenerator2["default"])(_regenerator["default"].mark(function _callee(tile$jscomp$0,gltfFormat,options,context){var parse,fetch;return _regenerator["default"].wrap(function(_context){for(;;)switch(_context.prev=_context.next){case 0:var tile=tile$jscomp$0;switch(gltfFormat){case GLTF_FORMAT.URI:var gltfUrlBytes=
new Uint8Array(tile.gltfArrayBuffer,tile.gltfByteOffset);gltfUrlBytes=(new TextDecoder).decode(gltfUrlBytes);tile.gltfUrl=gltfUrlBytes.replace(/[\s\0]+$/,"");delete tile.gltfArrayBuffer;delete tile.gltfByteOffset;delete tile.gltfByteLength;break;case GLTF_FORMAT.EMBEDDED:break;default:throw Error("b3dm: Illegal glTF format field");}if(!options.loadGLTF){_context.next=15;break}parse=context.parse;fetch=context.fetch;if(!tile$jscomp$0.gltfUrl){_context.next=8;break}_context.next=6;return fetch(tile$jscomp$0.gltfUrl,
options);case 6:tile$jscomp$0.gltfArrayBuffer=_context.sent,tile$jscomp$0.gltfByteOffset=0;case 8:if(!tile$jscomp$0.gltfArrayBuffer){_context.next=15;break}_context.next=11;return parse(tile$jscomp$0.gltfArrayBuffer,_gltf.GLTFLoader,options,context);case 11:tile$jscomp$0.gltf=_context.sent,delete tile$jscomp$0.gltfArrayBuffer,delete tile$jscomp$0.gltfByteOffset,delete tile$jscomp$0.gltfByteLength;case 15:case "end":return _context.stop()}},_callee)}));return _extractGLTF.apply(this,arguments)}global=
require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.parse3DTileGLTFViewSync=function(tile,arrayBuffer,byteOffset){tile.rotateYtoZ=!0;var gltfByteLength=tile.byteOffset+tile.byteLength-byteOffset;if(0===gltfByteLength)throw Error("glTF byte length must be greater than 0.");tile.gltfArrayBuffer=(0,_loaderUtils.getZeroOffsetArrayBuffer)(arrayBuffer,byteOffset,gltfByteLength);tile.gltfByteOffset=0;tile.gltfByteLength=
gltfByteLength;0!==byteOffset%4&&console.warn("".concat(tile.type,": embedded glb is not aligned to a 4-byte boundary."));return tile.byteOffset+tile.byteLength};exports.extractGLTF=function(_x,_x2,_x3,_x4){return _extractGLTF.apply(this,arguments)};exports.GLTF_FORMAT=void 0;var _regenerator=global(require("module$node_modules$$babel$runtime$regenerator$index")),_asyncToGenerator2=global(require("module$node_modules$$babel$runtime$helpers$asyncToGenerator")),_gltf=require("module$node_modules$$loaders_DOT_gl$gltf$dist$es5$index"),
_loaderUtils=require("module$node_modules$$loaders_DOT_gl$loader_utils$dist$es5$index"),GLTF_FORMAT={URI:0,EMBEDDED:1};exports.GLTF_FORMAT=GLTF_FORMAT}
//# sourceMappingURL=module$node_modules$$loaders_DOT_gl$3d_tiles$dist$es5$lib$parsers$helpers$parse_3d_tile_gltf_view.js.map
