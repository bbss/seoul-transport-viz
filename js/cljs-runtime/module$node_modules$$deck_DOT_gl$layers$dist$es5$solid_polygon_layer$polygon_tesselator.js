shadow$provide.module$node_modules$$deck_DOT_gl$layers$dist$es5$solid_polygon_layer$polygon_tesselator=function(global,require,module,exports){function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}));keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=
null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){(0,_defineProperty2["default"])(target,key,source[key])}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})}return target}global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard");module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");
Object.defineProperty(exports,"__esModule",{value:!0});exports["default"]=void 0;var _defineProperty2=module(require("module$node_modules$$babel$runtime$helpers$defineProperty")),_classCallCheck2=module(require("module$node_modules$$babel$runtime$helpers$classCallCheck")),_createClass2=module(require("module$node_modules$$babel$runtime$helpers$createClass")),_possibleConstructorReturn2=module(require("module$node_modules$$babel$runtime$helpers$possibleConstructorReturn")),_getPrototypeOf2=module(require("module$node_modules$$babel$runtime$helpers$getPrototypeOf")),
_get2=module(require("module$node_modules$$babel$runtime$helpers$get")),_inherits2=module(require("module$node_modules$$babel$runtime$helpers$inherits")),Polygon=global(require("module$node_modules$$deck_DOT_gl$layers$dist$es5$solid_polygon_layer$polygon"));global=require("module$node_modules$$deck_DOT_gl$core$dist$es5$index");var _polygon2=require("module$node_modules$$math_DOT_gl$polygon$dist$es5$index");require=function(_Tesselator){function PolygonTesselator(opts){(0,_classCallCheck2["default"])(this,
PolygonTesselator);var fp64=opts.fp64,_opts$IndexType=opts.IndexType;_opts$IndexType=void 0===_opts$IndexType?Uint32Array:_opts$IndexType;return(0,_possibleConstructorReturn2["default"])(this,(0,_getPrototypeOf2["default"])(PolygonTesselator).call(this,_objectSpread({},opts,{attributes:{positions:{size:3,type:fp64?Float64Array:Float32Array},vertexValid:{type:Uint8ClampedArray,size:1},indices:{type:_opts$IndexType,size:1}}})))}(0,_inherits2["default"])(PolygonTesselator,_Tesselator);(0,_createClass2["default"])(PolygonTesselator,
[{key:"get",value:function(attributeName){var attributes=this.attributes;return"indices"===attributeName?attributes.indices&&attributes.indices.subarray(0,this.vertexCount):attributes[attributeName]}},{key:"updateGeometry",value:function(opts){(0,_get2["default"])((0,_getPrototypeOf2["default"])(PolygonTesselator.prototype),"updateGeometry",this).call(this,opts);if(opts=this.buffers.indices)this.vertexCount=(opts.value||opts).length}},{key:"normalizeGeometry",value:function(polygon){if(this.normalize){polygon=
Polygon.normalize(polygon,this.positionSize);if(this.opts.resolution)return(0,_polygon2.cutPolygonByGrid)(polygon.positions||polygon,polygon.holeIndices,{size:this.positionSize,gridResolution:this.opts.resolution,edgeTypes:!0});if(this.opts.wrapLongitude)return(0,_polygon2.cutPolygonByMercatorBounds)(polygon.positions||polygon,polygon.holeIndices,{size:this.positionSize,maxLatitude:86,edgeTypes:!0})}return polygon}},{key:"getGeometrySize",value:function(polygon){if(Array.isArray(polygon)&&!Number.isFinite(polygon[0])){var size=
0,_iteratorNormalCompletion=!0,_didIteratorError=!1,_iteratorError=void 0;try{for(var _iterator=polygon[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=!0)size+=this.getGeometrySize(_step.value)}catch(err){_didIteratorError=!0,_iteratorError=err}finally{try{if(!_iteratorNormalCompletion&&null!=_iterator["return"])_iterator["return"]()}finally{if(_didIteratorError)throw _iteratorError;}}return size}return(polygon.positions||polygon).length/
this.positionSize}},{key:"getGeometryFromBuffer",value:function(buffer){return this.normalize||!this.buffers.indices?(0,_get2["default"])((0,_getPrototypeOf2["default"])(PolygonTesselator.prototype),"getGeometryFromBuffer",this).call(this,buffer):function(){return null}}},{key:"updateGeometryAttributes",value:function(polygon,context){if(Array.isArray(polygon)&&!Number.isFinite(polygon[0])){var _iteratorNormalCompletion2=!0,_didIteratorError2=!1,_iteratorError2=void 0;try{for(var _iterator2=polygon[Symbol.iterator](),
_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=!0){var subPolygon=_step2.value,geometrySize=this.getGeometrySize(subPolygon);context.geometrySize=geometrySize;this.updateGeometryAttributes(subPolygon,context);context.vertexStart+=geometrySize;context.indexStart=this.indexStarts[context.geometryIndex+1]}}catch(err){_didIteratorError2=!0,_iteratorError2=err}finally{try{if(!_iteratorNormalCompletion2&&null!=_iterator2["return"])_iterator2["return"]()}finally{if(_didIteratorError2)throw _iteratorError2;
}}}else this._updateIndices(polygon,context),this._updatePositions(polygon,context),this._updateVertexValid(polygon,context)}},{key:"_updateIndices",value:function(polygon,_ref){var geometryIndex=_ref.geometryIndex,offset=_ref.vertexStart;_ref=_ref.indexStart;var attributes=this.attributes,indexStarts=this.indexStarts,typedArrayManager=this.typedArrayManager,target=attributes.indices;if(target){var i=_ref;polygon=Polygon.getSurfaceIndices(polygon,this.positionSize,this.opts.preproject);target=typedArrayManager.allocate(target,
_ref+polygon.length,{copy:!0});for(typedArrayManager=0;typedArrayManager<polygon.length;typedArrayManager++)target[i++]=polygon[typedArrayManager]+offset;indexStarts[geometryIndex+1]=_ref+polygon.length;attributes.indices=target}}},{key:"_updatePositions",value:function(polygon,_ref2){var geometrySize=_ref2.geometrySize,positions=this.attributes.positions,positionSize=this.positionSize;if(positions){polygon=polygon.positions||polygon;_ref2=_ref2.vertexStart;for(var j=0;j<geometrySize;_ref2++,j++){var y=
polygon[j*positionSize+1],z=2<positionSize?polygon[j*positionSize+2]:0;positions[3*_ref2]=polygon[j*positionSize];positions[3*_ref2+1]=y;positions[3*_ref2+2]=z}}}},{key:"_updateVertexValid",value:function(polygon,_ref3){var vertexStart=_ref3.vertexStart;_ref3=_ref3.geometrySize;var vertexValid=this.attributes.vertexValid,positionSize=this.positionSize,holeIndices=polygon&&polygon.holeIndices;polygon&&polygon.edgeTypes?vertexValid.set(polygon.edgeTypes,vertexStart):vertexValid.fill(1,vertexStart,vertexStart+
_ref3);if(holeIndices)for(polygon=0;polygon<holeIndices.length;polygon++)vertexValid[vertexStart+holeIndices[polygon]/positionSize-1]=0;vertexValid[vertexStart+_ref3-1]=0}}]);return PolygonTesselator}(global.Tesselator);exports["default"]=require}
//# sourceMappingURL=module$node_modules$$deck_DOT_gl$layers$dist$es5$solid_polygon_layer$polygon_tesselator.js.map
