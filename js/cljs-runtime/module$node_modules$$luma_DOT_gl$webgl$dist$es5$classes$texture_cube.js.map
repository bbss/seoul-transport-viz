{
"version":3,
"file":"module$node_modules$$luma_DOT_gl$webgl$dist$es5$classes$texture_cube.js",
"lineCount":10,
"mappings":"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",
"sources":["node_modules/@luma_DOT_gl/webgl/dist/es5/classes/texture-cube.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$luma_DOT_gl$webgl$dist$es5$classes$texture_cube\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _gltools = require(\"@luma.gl/gltools\");\n\nvar _texture = _interopRequireDefault(require(\"./texture\"));\n\nvar _webglUtils = require(\"../webgl-utils\");\n\nvar FACES = [34069, 34070, 34071, 34072, 34073, 34074];\n\nvar TextureCube = function (_Texture) {\n  (0, _inherits2[\"default\"])(TextureCube, _Texture);\n\n  function TextureCube(gl) {\n    var _this;\n\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    (0, _classCallCheck2[\"default\"])(this, TextureCube);\n    (0, _webglUtils.assertWebGLContext)(gl);\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(TextureCube).call(this, gl, Object.assign({}, props, {\n      target: 34067\n    })));\n\n    _this.initialize(props);\n\n    Object.seal((0, _assertThisInitialized2[\"default\"])(_this));\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(TextureCube, [{\n    key: \"initialize\",\n    value: function initialize() {\n      var _this2 = this;\n\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _props$mipmaps = props.mipmaps,\n          mipmaps = _props$mipmaps === void 0 ? true : _props$mipmaps,\n          _props$parameters = props.parameters,\n          parameters = _props$parameters === void 0 ? {} : _props$parameters;\n      this.opts = props;\n      this.setCubeMapImageData(props).then(function () {\n        _this2.loaded = true;\n\n        if (mipmaps) {\n          _this2.generateMipmap(props);\n        }\n\n        _this2.setParameters(parameters);\n      });\n    }\n  }, {\n    key: \"subImage\",\n    value: function subImage(_ref) {\n      var face = _ref.face,\n          data = _ref.data,\n          _ref$x = _ref.x,\n          x = _ref$x === void 0 ? 0 : _ref$x,\n          _ref$y = _ref.y,\n          y = _ref$y === void 0 ? 0 : _ref$y,\n          _ref$mipmapLevel = _ref.mipmapLevel,\n          mipmapLevel = _ref$mipmapLevel === void 0 ? 0 : _ref$mipmapLevel;\n      return this._subImage({\n        target: face,\n        data: data,\n        x: x,\n        y: y,\n        mipmapLevel: mipmapLevel\n      });\n    }\n  }, {\n    key: \"setCubeMapImageData\",\n    value: function () {\n      var _setCubeMapImageData = (0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee(_ref2) {\n        var _this3 = this;\n\n        var width, height, pixels, data, _ref2$border, border, _ref2$format, format, _ref2$type, type, gl, imageDataMap, resolvedFaces;\n\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                width = _ref2.width, height = _ref2.height, pixels = _ref2.pixels, data = _ref2.data, _ref2$border = _ref2.border, border = _ref2$border === void 0 ? 0 : _ref2$border, _ref2$format = _ref2.format, format = _ref2$format === void 0 ? 6408 : _ref2$format, _ref2$type = _ref2.type, type = _ref2$type === void 0 ? 5121 : _ref2$type;\n                gl = this.gl;\n                imageDataMap = pixels || data;\n                _context.next = 5;\n                return Promise.all(FACES.map(function (face) {\n                  var facePixels = imageDataMap[face];\n                  return Promise.all(Array.isArray(facePixels) ? facePixels : [facePixels]);\n                }));\n\n              case 5:\n                resolvedFaces = _context.sent;\n                this.bind();\n                FACES.forEach(function (face, index) {\n                  if (resolvedFaces[index].length > 1 && _this3.opts.mipmaps !== false) {\n                    _gltools.log.warn(\"\".concat(_this3.id, \" has mipmap and multiple LODs.\"))();\n                  }\n\n                  resolvedFaces[index].forEach(function (image, lodLevel) {\n                    if (width && height) {\n                      gl.texImage2D(face, lodLevel, format, width, height, border, format, type, image);\n                    } else {\n                      gl.texImage2D(face, lodLevel, format, format, type, image);\n                    }\n                  });\n                });\n                this.unbind();\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function setCubeMapImageData(_x) {\n        return _setCubeMapImageData.apply(this, arguments);\n      }\n\n      return setCubeMapImageData;\n    }()\n  }, {\n    key: \"setImageDataForFace\",\n    value: function setImageDataForFace(options) {\n      var _this4 = this;\n\n      var face = options.face,\n          width = options.width,\n          height = options.height,\n          pixels = options.pixels,\n          data = options.data,\n          _options$border = options.border,\n          border = _options$border === void 0 ? 0 : _options$border,\n          _options$format = options.format,\n          format = _options$format === void 0 ? 6408 : _options$format,\n          _options$type = options.type,\n          type = _options$type === void 0 ? 5121 : _options$type;\n      var gl = this.gl;\n      var imageData = pixels || data;\n      this.bind();\n\n      if (imageData instanceof Promise) {\n        imageData.then(function (resolvedImageData) {\n          return _this4.setImageDataForFace(Object.assign({}, options, {\n            face: face,\n            data: resolvedImageData,\n            pixels: resolvedImageData\n          }));\n        });\n      } else if (this.width || this.height) {\n        gl.texImage2D(face, 0, format, width, height, border, format, type, imageData);\n      } else {\n        gl.texImage2D(face, 0, format, format, type, imageData);\n      }\n\n      return this;\n    }\n  }]);\n  return TextureCube;\n}(_texture[\"default\"]);\n\nexports[\"default\"] = TextureCube;\nTextureCube.FACES = FACES;\n//# sourceMappingURL=texture-cube.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","Object","defineProperty","value","_regenerator","_asyncToGenerator2","_classCallCheck2","_createClass2","_possibleConstructorReturn2","_getPrototypeOf2","_assertThisInitialized2","_inherits2","_gltools","_texture","_webglUtils","FACES","TextureCube","_Texture","gl","props","arguments","length","undefined","assertWebGLContext","_this","call","assign","target","initialize","seal","key","_this2","_props$mipmaps","mipmaps","_props$parameters","parameters","opts","setCubeMapImageData","then","loaded","generateMipmap","setParameters","subImage","_ref","_ref$x","x","_ref$y","y","_ref$mipmapLevel","mipmapLevel","_subImage","face","data","_setCubeMapImageData","mark","_callee","_ref2","_this3","width","height","pixels","_ref2$border","border","_ref2$format","format","_ref2$type","type","imageDataMap","resolvedFaces","wrap","_callee$","_context","prev","next","Promise","all","map","facePixels","Array","isArray","sent","bind","forEach","index","log","warn","concat","id","image","lodLevel","texImage2D","unbind","stop","_x","apply","setImageDataForFace","options","_this4","_options$border","_options$format","_options$type","imageData","resolvedImageData"]
}
