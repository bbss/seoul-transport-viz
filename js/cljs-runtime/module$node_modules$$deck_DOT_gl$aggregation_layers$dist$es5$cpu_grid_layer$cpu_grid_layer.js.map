{
"version":3,
"file":"module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$cpu_grid_layer$cpu_grid_layer.js",
"lineCount":10,
"mappings":"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",
"sources":["node_modules/@deck_DOT_gl/aggregation-layers/dist/es5/cpu-grid-layer/cpu-grid-layer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$cpu_grid_layer$cpu_grid_layer\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _layers = require(\"@deck.gl/layers\");\n\nvar _colorUtils = require(\"../utils/color-utils\");\n\nvar _gridAggregator = require(\"./grid-aggregator\");\n\nvar _cpuAggregator = _interopRequireDefault(require(\"../utils/cpu-aggregator\"));\n\nvar _aggregationLayer = _interopRequireDefault(require(\"../aggregation-layer\"));\n\nfunction nop() {}\n\nvar defaultProps = {\n  colorDomain: null,\n  colorRange: _colorUtils.defaultColorRange,\n  getColorValue: {\n    type: 'accessor',\n    value: null\n  },\n  getColorWeight: {\n    type: 'accessor',\n    value: function value(x) {\n      return 1;\n    }\n  },\n  colorAggregation: 'SUM',\n  lowerPercentile: {\n    type: 'number',\n    min: 0,\n    max: 100,\n    value: 0\n  },\n  upperPercentile: {\n    type: 'number',\n    min: 0,\n    max: 100,\n    value: 100\n  },\n  colorScaleType: 'quantize',\n  onSetColorDomain: nop,\n  elevationDomain: null,\n  elevationRange: [0, 1000],\n  getElevationValue: {\n    type: 'accessor',\n    value: null\n  },\n  getElevationWeight: {\n    type: 'accessor',\n    value: function value(x) {\n      return 1;\n    }\n  },\n  elevationAggregation: 'SUM',\n  elevationLowerPercentile: {\n    type: 'number',\n    min: 0,\n    max: 100,\n    value: 0\n  },\n  elevationUpperPercentile: {\n    type: 'number',\n    min: 0,\n    max: 100,\n    value: 100\n  },\n  elevationScale: {\n    type: 'number',\n    min: 0,\n    value: 1\n  },\n  elevationScaleType: 'linear',\n  onSetElevationDomain: nop,\n  gridAggregator: _gridAggregator.pointToDensityGridDataCPU,\n  cellSize: {\n    type: 'number',\n    min: 0,\n    max: 1000,\n    value: 1000\n  },\n  coverage: {\n    type: 'number',\n    min: 0,\n    max: 1,\n    value: 1\n  },\n  getPosition: {\n    type: 'accessor',\n    value: function value(x) {\n      return x.position;\n    }\n  },\n  extruded: false,\n  material: true,\n  _filterData: {\n    type: 'function',\n    value: null,\n    optional: true\n  }\n};\n\nvar CPUGridLayer = function (_AggregationLayer) {\n  (0, _inherits2[\"default\"])(CPUGridLayer, _AggregationLayer);\n\n  function CPUGridLayer() {\n    (0, _classCallCheck2[\"default\"])(this, CPUGridLayer);\n    return (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(CPUGridLayer).apply(this, arguments));\n  }\n\n  (0, _createClass2[\"default\"])(CPUGridLayer, [{\n    key: \"initializeState\",\n    value: function initializeState() {\n      var cpuAggregator = new _cpuAggregator[\"default\"]({\n        getAggregator: function getAggregator(props) {\n          return props.gridAggregator;\n        },\n        getCellSize: function getCellSize(props) {\n          return props.cellSize;\n        }\n      });\n      this.state = {\n        cpuAggregator: cpuAggregator,\n        aggregatorState: cpuAggregator.state\n      };\n      var attributeManager = this.getAttributeManager();\n      attributeManager.add({\n        positions: {\n          size: 3,\n          accessor: 'getPosition'\n        }\n      });\n    }\n  }, {\n    key: \"updateState\",\n    value: function updateState(opts) {\n      (0, _get2[\"default\"])((0, _getPrototypeOf2[\"default\"])(CPUGridLayer.prototype), \"updateState\", this).call(this, opts);\n      this.setState({\n        aggregatorState: this.state.cpuAggregator.updateState(opts, {\n          viewport: this.context.viewport,\n          attributes: this.getAttributes(),\n          numInstances: this.getNumInstances(opts.props)\n        })\n      });\n    }\n  }, {\n    key: \"getPickingInfo\",\n    value: function getPickingInfo(_ref) {\n      var info = _ref.info;\n      return this.state.cpuAggregator.getPickingInfo({\n        info: info\n      });\n    }\n  }, {\n    key: \"_onGetSublayerColor\",\n    value: function _onGetSublayerColor(cell) {\n      return this.state.cpuAggregator.getAccessor('fillColor')(cell);\n    }\n  }, {\n    key: \"_onGetSublayerElevation\",\n    value: function _onGetSublayerElevation(cell) {\n      return this.state.cpuAggregator.getAccessor('elevation')(cell);\n    }\n  }, {\n    key: \"_getSublayerUpdateTriggers\",\n    value: function _getSublayerUpdateTriggers() {\n      return this.state.cpuAggregator.getUpdateTriggers(this.props);\n    }\n  }, {\n    key: \"renderLayers\",\n    value: function renderLayers() {\n      var _this$props = this.props,\n          elevationScale = _this$props.elevationScale,\n          extruded = _this$props.extruded,\n          cellSize = _this$props.cellSize,\n          coverage = _this$props.coverage,\n          material = _this$props.material,\n          transitions = _this$props.transitions;\n      var cpuAggregator = this.state.cpuAggregator;\n      var SubLayerClass = this.getSubLayerClass('grid-cell', _layers.GridCellLayer);\n\n      var updateTriggers = this._getSublayerUpdateTriggers();\n\n      return new SubLayerClass({\n        cellSize: cellSize,\n        coverage: coverage,\n        material: material,\n        elevationScale: elevationScale,\n        extruded: extruded,\n        getFillColor: this._onGetSublayerColor.bind(this),\n        getElevation: this._onGetSublayerElevation.bind(this),\n        transitions: transitions && {\n          getFillColor: transitions.getColorValue || transitions.getColorWeight,\n          getElevation: transitions.getElevationValue || transitions.getElevationWeight\n        }\n      }, this.getSubLayerProps({\n        id: 'grid-cell',\n        updateTriggers: updateTriggers\n      }), {\n        data: cpuAggregator.state.layerData.data\n      });\n    }\n  }]);\n  return CPUGridLayer;\n}(_aggregationLayer[\"default\"]);\n\nexports[\"default\"] = CPUGridLayer;\nCPUGridLayer.layerName = 'CPUGridLayer';\nCPUGridLayer.defaultProps = defaultProps;\n//# sourceMappingURL=cpu-grid-layer.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","nop","_interopRequireDefault","Object","defineProperty","value","_classCallCheck2","_createClass2","_possibleConstructorReturn2","_getPrototypeOf2","_get2","_inherits2","_layers","_colorUtils","_gridAggregator","_cpuAggregator","_aggregationLayer","defaultProps","colorDomain","colorRange","defaultColorRange","getColorValue","type","getColorWeight","x","colorAggregation","lowerPercentile","min","max","upperPercentile","colorScaleType","onSetColorDomain","elevationDomain","elevationRange","getElevationValue","getElevationWeight","elevationAggregation","elevationLowerPercentile","elevationUpperPercentile","elevationScale","elevationScaleType","onSetElevationDomain","gridAggregator","pointToDensityGridDataCPU","cellSize","coverage","getPosition","position","extruded","material","_filterData","optional","CPUGridLayer","_AggregationLayer","apply","arguments","key","initializeState","cpuAggregator","getAggregator","props","getCellSize","state","aggregatorState","getAttributeManager","attributeManager","add","positions","size","accessor","updateState","opts","prototype","call","setState","viewport","context","attributes","getAttributes","numInstances","getNumInstances","getPickingInfo","_ref","info","_onGetSublayerColor","cell","getAccessor","_onGetSublayerElevation","_getSublayerUpdateTriggers","getUpdateTriggers","renderLayers","_this$props","transitions","SubLayerClass","getSubLayerClass","GridCellLayer","updateTriggers","getFillColor","bind","getElevation","getSubLayerProps","id","data","layerData","layerName"]
}
