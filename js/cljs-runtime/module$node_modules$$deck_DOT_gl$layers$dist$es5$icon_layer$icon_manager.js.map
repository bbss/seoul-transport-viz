{
"version":3,
"file":"module$node_modules$$deck_DOT_gl$layers$dist$es5$icon_layer$icon_manager.js",
"lineCount":16,
"mappings":"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",
"sources":["node_modules/@deck_DOT_gl/layers/dist/es5/icon-layer/icon-manager.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$deck_DOT_gl$layers$dist$es5$icon_layer$icon_manager\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildMapping = buildMapping;\nexports.getDiffIcons = getDiffIcons;\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _core = require(\"@luma.gl/core\");\n\nvar _images = require(\"@loaders.gl/images\");\n\nvar _core2 = require(\"@loaders.gl/core\");\n\nvar _core3 = require(\"@deck.gl/core\");\n\nvar _DEFAULT_TEXTURE_PARA;\n\nvar DEFAULT_CANVAS_WIDTH = 1024;\nvar DEFAULT_BUFFER = 4;\n\nvar noop = function noop() {};\n\nvar DEFAULT_TEXTURE_PARAMETERS = (_DEFAULT_TEXTURE_PARA = {}, (0, _defineProperty2[\"default\"])(_DEFAULT_TEXTURE_PARA, 10241, 9987), (0, _defineProperty2[\"default\"])(_DEFAULT_TEXTURE_PARA, 10240, 9729), (0, _defineProperty2[\"default\"])(_DEFAULT_TEXTURE_PARA, 10242, 33071), (0, _defineProperty2[\"default\"])(_DEFAULT_TEXTURE_PARA, 10243, 33071), _DEFAULT_TEXTURE_PARA);\n\nfunction nextPowOfTwo(number) {\n  return Math.pow(2, Math.ceil(Math.log2(number)));\n}\n\nfunction resizeImage(ctx, imageData, width, height) {\n  if (width === imageData.width && height === imageData.height) {\n    return imageData;\n  }\n\n  ctx.canvas.height = height;\n  ctx.canvas.width = width;\n  ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n  ctx.drawImage(imageData, 0, 0, imageData.width, imageData.height, 0, 0, width, height);\n  return ctx.canvas;\n}\n\nfunction getIconId(icon) {\n  return icon && (icon.id || icon.url);\n}\n\nfunction resizeTexture(gl, texture, width, height) {\n  var oldWidth = texture.width;\n  var oldHeight = texture.height;\n  var newTexture = (0, _core.cloneTextureFrom)(texture, {\n    width: width,\n    height: height\n  });\n  (0, _core.copyToTexture)(texture, newTexture, {\n    targetY: 0,\n    width: oldWidth,\n    height: oldHeight\n  });\n  texture[\"delete\"]();\n  return newTexture;\n}\n\nfunction buildRowMapping(mapping, columns, yOffset) {\n  for (var i = 0; i < columns.length; i++) {\n    var _columns$i = columns[i],\n        icon = _columns$i.icon,\n        xOffset = _columns$i.xOffset;\n    var id = getIconId(icon);\n    mapping[id] = Object.assign({}, icon, {\n      x: xOffset,\n      y: yOffset\n    });\n  }\n}\n\nfunction buildMapping(_ref) {\n  var icons = _ref.icons,\n      buffer = _ref.buffer,\n      _ref$mapping = _ref.mapping,\n      mapping = _ref$mapping === void 0 ? {} : _ref$mapping,\n      _ref$xOffset = _ref.xOffset,\n      xOffset = _ref$xOffset === void 0 ? 0 : _ref$xOffset,\n      _ref$yOffset = _ref.yOffset,\n      yOffset = _ref$yOffset === void 0 ? 0 : _ref$yOffset,\n      _ref$rowHeight = _ref.rowHeight,\n      rowHeight = _ref$rowHeight === void 0 ? 0 : _ref$rowHeight,\n      canvasWidth = _ref.canvasWidth;\n  var columns = [];\n\n  for (var i = 0; i < icons.length; i++) {\n    var icon = icons[i];\n    var id = getIconId(icon);\n\n    if (!mapping[id]) {\n      var height = icon.height,\n          width = icon.width;\n\n      if (xOffset + width + buffer > canvasWidth) {\n        buildRowMapping(mapping, columns, yOffset);\n        xOffset = 0;\n        yOffset = rowHeight + yOffset + buffer;\n        rowHeight = 0;\n        columns = [];\n      }\n\n      columns.push({\n        icon: icon,\n        xOffset: xOffset\n      });\n      xOffset = xOffset + width + buffer;\n      rowHeight = Math.max(rowHeight, height);\n    }\n  }\n\n  if (columns.length > 0) {\n    buildRowMapping(mapping, columns, yOffset);\n  }\n\n  return {\n    mapping: mapping,\n    rowHeight: rowHeight,\n    xOffset: xOffset,\n    yOffset: yOffset,\n    canvasWidth: canvasWidth,\n    canvasHeight: nextPowOfTwo(rowHeight + yOffset + buffer)\n  };\n}\n\nfunction getDiffIcons(data, getIcon, cachedIcons) {\n  if (!data || !getIcon) {\n    return null;\n  }\n\n  cachedIcons = cachedIcons || {};\n  var icons = {};\n\n  var _createIterable = (0, _core3.createIterable)(data),\n      iterable = _createIterable.iterable,\n      objectInfo = _createIterable.objectInfo;\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = iterable[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var object = _step.value;\n      objectInfo.index++;\n      var icon = getIcon(object, objectInfo);\n      var id = getIconId(icon);\n\n      if (!icon) {\n        throw new Error('Icon is missing.');\n      }\n\n      if (!icon.url) {\n        throw new Error('Icon url is missing.');\n      }\n\n      if (!icons[id] && (!cachedIcons[id] || icon.url !== cachedIcons[id].url)) {\n        icons[id] = icon;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n        _iterator[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return icons;\n}\n\nvar IconManager = function () {\n  function IconManager(gl, _ref2) {\n    var _ref2$onUpdate = _ref2.onUpdate,\n        onUpdate = _ref2$onUpdate === void 0 ? noop : _ref2$onUpdate;\n    (0, _classCallCheck2[\"default\"])(this, IconManager);\n    this.gl = gl;\n    this.onUpdate = onUpdate;\n    this._loadOptions = null;\n    this._getIcon = null;\n    this._texture = null;\n    this._externalTexture = null;\n    this._mapping = {};\n    this._pendingCount = 0;\n    this._autoPacking = false;\n    this._xOffset = 0;\n    this._yOffset = 0;\n    this._rowHeight = 0;\n    this._buffer = DEFAULT_BUFFER;\n    this._canvasWidth = DEFAULT_CANVAS_WIDTH;\n    this._canvasHeight = 0;\n    this._canvas = null;\n  }\n\n  (0, _createClass2[\"default\"])(IconManager, [{\n    key: \"finalize\",\n    value: function finalize() {\n      if (this._texture) {\n        this._texture[\"delete\"]();\n      }\n    }\n  }, {\n    key: \"getTexture\",\n    value: function getTexture() {\n      return this._texture || this._externalTexture;\n    }\n  }, {\n    key: \"getIconMapping\",\n    value: function getIconMapping(icon) {\n      var id = this._autoPacking ? getIconId(icon) : icon;\n      return this._mapping[id] || {};\n    }\n  }, {\n    key: \"setProps\",\n    value: function setProps(_ref3) {\n      var loadOptions = _ref3.loadOptions,\n          autoPacking = _ref3.autoPacking,\n          iconAtlas = _ref3.iconAtlas,\n          iconMapping = _ref3.iconMapping,\n          data = _ref3.data,\n          getIcon = _ref3.getIcon;\n\n      if (loadOptions) {\n        this._loadOptions = loadOptions;\n      }\n\n      if (autoPacking !== undefined) {\n        this._autoPacking = autoPacking;\n      }\n\n      if (getIcon) {\n        this._getIcon = getIcon;\n      }\n\n      if (iconMapping) {\n        this._mapping = iconMapping;\n      }\n\n      if (iconAtlas) {\n        this._updateIconAtlas(iconAtlas);\n      }\n\n      if (this._autoPacking && (data || getIcon) && typeof document !== 'undefined') {\n        this._canvas = this._canvas || document.createElement('canvas');\n\n        this._updateAutoPacking(data);\n      }\n    }\n  }, {\n    key: \"_updateIconAtlas\",\n    value: function _updateIconAtlas(iconAtlas) {\n      if (this._texture) {\n        this._texture[\"delete\"]();\n\n        this._texture = null;\n      }\n\n      if (iconAtlas instanceof _core.Texture2D) {\n        iconAtlas.setParameters(DEFAULT_TEXTURE_PARAMETERS);\n        this._externalTexture = iconAtlas;\n        this.onUpdate();\n      } else if (iconAtlas) {\n        this._texture = new _core.Texture2D(this.gl, {\n          data: iconAtlas,\n          parameters: DEFAULT_TEXTURE_PARAMETERS\n        });\n        this.onUpdate();\n      }\n    }\n  }, {\n    key: \"_updateAutoPacking\",\n    value: function _updateAutoPacking(data) {\n      var icons = Object.values(getDiffIcons(data, this._getIcon, this._mapping) || {});\n\n      if (icons.length > 0) {\n        var _buildMapping = buildMapping({\n          icons: icons,\n          buffer: this._buffer,\n          canvasWidth: this._canvasWidth,\n          mapping: this._mapping,\n          rowHeight: this._rowHeight,\n          xOffset: this._xOffset,\n          yOffset: this._yOffset\n        }),\n            mapping = _buildMapping.mapping,\n            xOffset = _buildMapping.xOffset,\n            yOffset = _buildMapping.yOffset,\n            rowHeight = _buildMapping.rowHeight,\n            canvasHeight = _buildMapping.canvasHeight;\n\n        this._rowHeight = rowHeight;\n        this._mapping = mapping;\n        this._xOffset = xOffset;\n        this._yOffset = yOffset;\n        this._canvasHeight = canvasHeight;\n\n        if (!this._texture) {\n          this._texture = new _core.Texture2D(this.gl, {\n            width: this._canvasWidth,\n            height: this._canvasHeight,\n            parameters: DEFAULT_TEXTURE_PARAMETERS\n          });\n        }\n\n        if (this._texture.height !== this._canvasHeight) {\n          this._texture = resizeTexture(this.gl, this._texture, this._canvasWidth, this._canvasHeight);\n        }\n\n        this.onUpdate();\n\n        this._loadIcons(icons);\n      }\n    }\n  }, {\n    key: \"_loadIcons\",\n    value: function _loadIcons(icons) {\n      var _this = this;\n\n      var ctx = this._canvas.getContext('2d');\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        var _loop = function _loop() {\n          var icon = _step2.value;\n          _this._pendingCount++;\n          (0, _core2.load)(icon.url, _images.ImageLoader, _this._loadOptions).then(function (imageData) {\n            var id = getIconId(icon);\n            var _this$_mapping$id = _this._mapping[id],\n                x = _this$_mapping$id.x,\n                y = _this$_mapping$id.y,\n                width = _this$_mapping$id.width,\n                height = _this$_mapping$id.height;\n            var data = resizeImage(ctx, imageData, width, height);\n\n            _this._texture.setSubImageData({\n              data: data,\n              x: x,\n              y: y,\n              width: width,\n              height: height\n            });\n\n            _this._texture.generateMipmap();\n\n            _this.onUpdate();\n          })[\"catch\"](function (error) {\n            _core3.log.error(error)();\n          })[\"finally\"](function () {\n            _this._pendingCount--;\n          });\n        };\n\n        for (var _iterator2 = icons[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          _loop();\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n            _iterator2[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"isLoaded\",\n    get: function get() {\n      return this._pendingCount === 0;\n    }\n  }]);\n  return IconManager;\n}();\n\nexports[\"default\"] = IconManager;\n//# sourceMappingURL=icon-manager.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","getIconId","icon","id","url","buildRowMapping","mapping","columns","yOffset","i","length","_columns$i","xOffset","Object","assign","x","y","buildMapping","_ref","icons","buffer","_ref$mapping","_ref$xOffset","_ref$yOffset","_ref$rowHeight","rowHeight","canvasWidth","height","width","push","Math","max","canvasHeight","pow","ceil","log2","getDiffIcons","data","getIcon","cachedIcons","_createIterable","_core3","createIterable","iterable","objectInfo","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iterator","Symbol","iterator","_step","done","next","object","value","index","Error","err","_interopRequireDefault","defineProperty","_classCallCheck2","_createClass2","_defineProperty2","_core","_images","_core2","_DEFAULT_TEXTURE_PARA","noop","DEFAULT_TEXTURE_PARAMETERS","IconManager","gl","_ref2","_ref2$onUpdate","onUpdate","_externalTexture","_texture","_getIcon","_loadOptions","_mapping","_pendingCount","_autoPacking","_rowHeight","_yOffset","_xOffset","_buffer","DEFAULT_BUFFER","_canvasWidth","DEFAULT_CANVAS_WIDTH","_canvasHeight","_canvas","key","finalize","getTexture","getIconMapping","setProps","_ref3","loadOptions","autoPacking","iconAtlas","iconMapping","_updateIconAtlas","document","createElement","_updateAutoPacking","Texture2D","setParameters","parameters","values","_buildMapping","oldWidth","texture","oldHeight","newTexture","cloneTextureFrom","copyToTexture","targetY","_loadIcons","_this","ctx","getContext","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_loop","_step2","load","ImageLoader","then","imageData","_this$_mapping$id","canvas","clearRect","drawImage","setSubImageData","generateMipmap","error","log","_iterator2","get"]
}
