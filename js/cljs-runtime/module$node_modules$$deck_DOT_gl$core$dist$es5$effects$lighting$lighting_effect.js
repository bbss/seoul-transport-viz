shadow$provide.module$node_modules$$deck_DOT_gl$core$dist$es5$effects$lighting$lighting_effect=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports["default"]=void 0;var _classCallCheck2=global(require("module$node_modules$$babel$runtime$helpers$classCallCheck")),_createClass2=global(require("module$node_modules$$babel$runtime$helpers$createClass")),_possibleConstructorReturn2=
global(require("module$node_modules$$babel$runtime$helpers$possibleConstructorReturn")),_getPrototypeOf2=global(require("module$node_modules$$babel$runtime$helpers$getPrototypeOf")),_inherits2=global(require("module$node_modules$$babel$runtime$helpers$inherits")),_core=require("module$node_modules$$luma_DOT_gl$core$dist$es5$index"),_ambientLight=require("module$node_modules$$deck_DOT_gl$core$dist$es5$effects$lighting$ambient_light"),_directionalLight=require("module$node_modules$$deck_DOT_gl$core$dist$es5$effects$lighting$directional_light");
module=global(require("module$node_modules$$deck_DOT_gl$core$dist$es5$lib$effect"));var _math=require("module$node_modules$math_DOT_gl$dist$es5$index"),_shadowPass=global(require("module$node_modules$$deck_DOT_gl$core$dist$es5$passes$shadow_pass")),_shadow=global(require("module$node_modules$$deck_DOT_gl$core$dist$es5$shaderlib$shadow$shadow")),DEFAULT_AMBIENT_LIGHT_PROPS={color:[255,255,255],intensity:1},DEFAULT_DIRECTIONAL_LIGHT_PROPS=[{color:[255,255,255],intensity:1,direction:[-1,3,-1]},{color:[255,
255,255],intensity:.9,direction:[1,-8,-2.5]}],DEFAULT_SHADOW_COLOR=[0,0,0,200/255];require=function(_Effect){function LightingEffect(props){(0,_classCallCheck2["default"])(this,LightingEffect);var _this=(0,_possibleConstructorReturn2["default"])(this,(0,_getPrototypeOf2["default"])(LightingEffect).call(this,props));_this.ambientLight=null;_this.directionalLights=[];_this.pointLights=[];_this.shadowColor=DEFAULT_SHADOW_COLOR;_this.shadowPasses=[];_this.shadowMaps=[];_this.dummyShadowMap=null;_this.shadow=
!1;_this.programManager=null;for(var key in props){var lightSource=props[key];switch(lightSource.type){case "ambient":_this.ambientLight=lightSource;break;case "directional":_this.directionalLights.push(lightSource);break;case "point":_this.pointLights.push(lightSource)}}_this._applyDefaultLights();_this.shadow=_this.directionalLights.some(function(light){return light.shadow});return _this}(0,_inherits2["default"])(LightingEffect,_Effect);(0,_createClass2["default"])(LightingEffect,[{key:"preRender",
value:function(gl,_ref){var layers=_ref.layers,layerFilter=_ref.layerFilter,viewports=_ref.viewports,onViewportActive=_ref.onViewportActive;_ref=_ref.views;if(this.shadow)for(this.shadowMatrices=this._createLightMatrix(),0===this.shadowPasses.length&&this._createShadowPasses(gl),this.programManager||(this.programManager=_core.ProgramManager.getDefaultProgramManager(gl),_shadow["default"]&&this.programManager.addDefaultModule(_shadow["default"])),this.dummyShadowMap||(this.dummyShadowMap=new _core.Texture2D(gl,
{width:1,height:1})),gl=0;gl<this.shadowPasses.length;gl++)this.shadowPasses[gl].render({layers:layers,layerFilter:layerFilter,viewports:viewports,onViewportActive:onViewportActive,views:_ref,moduleParameters:{shadowLightId:gl,dummyShadowMap:this.dummyShadowMap,shadowMatrices:this.shadowMatrices}})}},{key:"getModuleParameters",value:function(layer){var parameters=this.shadow?{shadowMaps:this.shadowMaps,dummyShadowMap:this.dummyShadowMap,shadowColor:this.shadowColor,shadowMatrices:this.shadowMatrices}:
{};parameters.lightSources={ambientLight:this.ambientLight,directionalLights:this.directionalLights.map(function(directionalLight){return directionalLight.getProjectedLight({layer:layer})}),pointLights:this.pointLights.map(function(pointLight){return pointLight.getProjectedLight({layer:layer})})};return parameters}},{key:"cleanup",value:function(){var _iteratorNormalCompletion=!0,_didIteratorError=!1,_iteratorError=void 0;try{for(var _iterator=this.shadowPasses[Symbol.iterator](),_step;!(_iteratorNormalCompletion=
(_step=_iterator.next()).done);_iteratorNormalCompletion=!0)_step.value["delete"]()}catch(err){_didIteratorError=!0,_iteratorError=err}finally{try{if(!_iteratorNormalCompletion&&null!=_iterator["return"])_iterator["return"]()}finally{if(_didIteratorError)throw _iteratorError;}}this.shadowPasses.length=0;this.shadowMaps.length=0;this.dummyShadowMap&&(this.dummyShadowMap["delete"](),this.dummyShadowMap=null);this.shadow&&this.programManager&&(this.programManager.removeDefaultModule(_shadow["default"]),
this.programManager=null)}},{key:"_createLightMatrix",value:function(){var lightMatrices=[],_iteratorNormalCompletion2=!0,_didIteratorError2=!1,_iteratorError2=void 0;try{for(var _iterator2=this.directionalLights[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=!0){var light=_step2.value,viewMatrix=(new _math.Matrix4).lookAt({eye:(new _math.Vector3(light.direction)).negate()});lightMatrices.push(viewMatrix)}}catch(err){_didIteratorError2=
!0,_iteratorError2=err}finally{try{if(!_iteratorNormalCompletion2&&null!=_iterator2["return"])_iterator2["return"]()}finally{if(_didIteratorError2)throw _iteratorError2;}}return lightMatrices}},{key:"_createShadowPasses",value:function(gl){for(var i=0;i<this.directionalLights.length;i++){var shadowPass=new _shadowPass["default"](gl);this.shadowPasses[i]=shadowPass;this.shadowMaps[i]=shadowPass.shadowMap}}},{key:"_applyDefaultLights",value:function(){var pointLights=this.pointLights,directionalLights=
this.directionalLights;this.ambientLight||0!==pointLights.length||0!==directionalLights.length||(this.ambientLight=new _ambientLight.AmbientLight(DEFAULT_AMBIENT_LIGHT_PROPS),this.directionalLights.push(new _directionalLight.DirectionalLight(DEFAULT_DIRECTIONAL_LIGHT_PROPS[0]),new _directionalLight.DirectionalLight(DEFAULT_DIRECTIONAL_LIGHT_PROPS[1])))}}]);return LightingEffect}(module["default"]);exports["default"]=require}
//# sourceMappingURL=module$node_modules$$deck_DOT_gl$core$dist$es5$effects$lighting$lighting_effect.js.map
