{
"version":3,
"file":"module$node_modules$$loaders_DOT_gl$core$dist$es5$worker_utils$get_worker_url.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,8EAAA,CAAkG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG1IC,MAAAC,eAAA,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAAI,aAAA,CAMAA,QAAqB,CAACC,YAAD,CAAe,CAElC,CAAC,CAAA,CAAGC,YAAAC,OAAJ,EAAiD,QAAjD,GAAyB,MAAOF,aAAhC,CAA2D,eAA3D,CAEA,IAAIA,YAAAG,WAAA,CAAwB,MAAxB,CAAJ,EAAuCH,YAAAI,SAAA,CAAsB,GAAtB,CAAvC,CAAmE,CAGjE,IAFIC,YAEJ,CAFgBL,YAAAM,MAAA,CAAmB,eAAnB,CAAA,CAAoC,CAApC,CAEhB,GAAiB,CAACD,YAAAF,WAAA,CAAqB,MAArB,CAAlB,CACE,MAAOE,aAGTL,aAAA,CAiBK,0BAAAO,OAAA,CAjBsBF,YAiBtB;AAA6C,oDAA7C,CAxB4D,CAUnE,IAAIG,UAAYC,cAAAC,IAAA,CAAmBV,YAAnB,CAEXQ,UAAL,GACMG,SAIJ,CAJW,IAAIC,IAAJ,CAAS,CAACZ,YAAD,CAAT,CAAyB,CAClCa,KAAM,wBAD4B,CAAzB,CAIX,CADAL,SACA,CADYM,GAAAC,gBAAA,CAAoBJ,SAApB,CACZ,CAAAF,cAAAO,IAAA,CAAmBhB,YAAnB,CAAiCQ,SAAjC,CALF,CAQA,OAAOA,UAxB2B,CAJpC,KAAIP,aAAeR,OAAA,CAAQ,iEAAR,CAAnB,CAEIgB,eAAiB,IAAIQ,GAViH;",
"sources":["node_modules/@loaders_DOT_gl/core/dist/es5/worker-utils/get-worker-url.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$loaders_DOT_gl$core$dist$es5$worker_utils$get_worker_url\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getWorkerURL = getWorkerURL;\n\nvar _loaderUtils = require(\"@loaders.gl/loader-utils\");\n\nvar workerURLCache = new Map();\n\nfunction getWorkerURL(workerSource) {\n  var workerName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'Worker';\n  (0, _loaderUtils.assert)(typeof workerSource === 'string', 'worker source');\n\n  if (workerSource.startsWith('url(') && workerSource.endsWith(')')) {\n    var workerUrl = workerSource.match(/^url\\((.*)\\)$/)[1];\n\n    if (workerUrl && !workerUrl.startsWith('http')) {\n      return workerUrl;\n    }\n\n    workerSource = buildScript(workerUrl);\n  }\n\n  var workerURL = workerURLCache.get(workerSource);\n\n  if (!workerURL) {\n    var blob = new Blob([workerSource], {\n      type: 'application/javascript'\n    });\n    workerURL = URL.createObjectURL(blob);\n    workerURLCache.set(workerSource, workerURL);\n  }\n\n  return workerURL;\n}\n\nfunction buildScript(workerUrl) {\n  return \"try {\\n  importScripts('\".concat(workerUrl, \"');\\n} catch (error) {\\n  console.error(error);\\n}\");\n}\n//# sourceMappingURL=get-worker-url.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","getWorkerURL","workerSource","_loaderUtils","assert","startsWith","endsWith","workerUrl","match","concat","workerURL","workerURLCache","get","blob","Blob","type","URL","createObjectURL","set","Map"]
}
