{
"version":3,
"file":"module$node_modules$$deck_DOT_gl$layers$dist$es5$column_layer$column_layer.js",
"lineCount":12,
"mappings":"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",
"sources":["node_modules/@deck_DOT_gl/layers/dist/es5/column-layer/column-layer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$deck_DOT_gl$layers$dist$es5$column_layer$column_layer\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _core = require(\"@deck.gl/core\");\n\nvar _core2 = require(\"@luma.gl/core\");\n\nvar _columnGeometry = _interopRequireDefault(require(\"./column-geometry\"));\n\nvar _columnLayerVertex = _interopRequireDefault(require(\"./column-layer-vertex.glsl\"));\n\nvar _columnLayerFragment = _interopRequireDefault(require(\"./column-layer-fragment.glsl\"));\n\nvar DEFAULT_COLOR = [0, 0, 0, 255];\nvar defaultProps = {\n  diskResolution: {\n    type: 'number',\n    min: 4,\n    value: 20\n  },\n  vertices: null,\n  radius: {\n    type: 'number',\n    min: 0,\n    value: 1000\n  },\n  angle: {\n    type: 'number',\n    value: 0\n  },\n  offset: {\n    type: 'array',\n    value: [0, 0]\n  },\n  coverage: {\n    type: 'number',\n    min: 0,\n    max: 1,\n    value: 1\n  },\n  elevationScale: {\n    type: 'number',\n    min: 0,\n    value: 1\n  },\n  lineWidthUnits: 'meters',\n  lineWidthScale: 1,\n  lineWidthMinPixels: 0,\n  lineWidthMaxPixels: Number.MAX_SAFE_INTEGER,\n  extruded: true,\n  wireframe: false,\n  filled: true,\n  stroked: false,\n  getPosition: {\n    type: 'accessor',\n    value: function value(x) {\n      return x.position;\n    }\n  },\n  getFillColor: {\n    type: 'accessor',\n    value: DEFAULT_COLOR\n  },\n  getLineColor: {\n    type: 'accessor',\n    value: DEFAULT_COLOR\n  },\n  getLineWidth: {\n    type: 'accessor',\n    value: 1\n  },\n  getElevation: {\n    type: 'accessor',\n    value: 1000\n  },\n  material: true,\n  getColor: {\n    deprecatedFor: ['getFillColor', 'getLineColor']\n  }\n};\n\nvar ColumnLayer = function (_Layer) {\n  (0, _inherits2[\"default\"])(ColumnLayer, _Layer);\n\n  function ColumnLayer() {\n    (0, _classCallCheck2[\"default\"])(this, ColumnLayer);\n    return (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(ColumnLayer).apply(this, arguments));\n  }\n\n  (0, _createClass2[\"default\"])(ColumnLayer, [{\n    key: \"getShaders\",\n    value: function getShaders() {\n      return (0, _get2[\"default\"])((0, _getPrototypeOf2[\"default\"])(ColumnLayer.prototype), \"getShaders\", this).call(this, {\n        vs: _columnLayerVertex[\"default\"],\n        fs: _columnLayerFragment[\"default\"],\n        modules: [_core.project32, _core.gouraudLighting, _core.picking]\n      });\n    }\n  }, {\n    key: \"initializeState\",\n    value: function initializeState() {\n      var attributeManager = this.getAttributeManager();\n      attributeManager.addInstanced({\n        instancePositions: {\n          size: 3,\n          type: 5130,\n          fp64: this.use64bitPositions(),\n          transition: true,\n          accessor: 'getPosition'\n        },\n        instanceElevations: {\n          size: 1,\n          transition: true,\n          accessor: 'getElevation'\n        },\n        instanceFillColors: {\n          size: this.props.colorFormat.length,\n          type: 5121,\n          normalized: true,\n          transition: true,\n          accessor: 'getFillColor',\n          defaultValue: DEFAULT_COLOR\n        },\n        instanceLineColors: {\n          size: this.props.colorFormat.length,\n          type: 5121,\n          normalized: true,\n          transition: true,\n          accessor: 'getLineColor',\n          defaultValue: DEFAULT_COLOR\n        },\n        instanceStrokeWidths: {\n          size: 1,\n          accessor: 'getLineWidth',\n          transition: true\n        }\n      });\n    }\n  }, {\n    key: \"updateState\",\n    value: function updateState(_ref) {\n      var props = _ref.props,\n          oldProps = _ref.oldProps,\n          changeFlags = _ref.changeFlags;\n      (0, _get2[\"default\"])((0, _getPrototypeOf2[\"default\"])(ColumnLayer.prototype), \"updateState\", this).call(this, {\n        props: props,\n        oldProps: oldProps,\n        changeFlags: changeFlags\n      });\n      var regenerateModels = changeFlags.extensionsChanged;\n\n      if (regenerateModels) {\n        var gl = this.context.gl;\n\n        if (this.state.model) {\n          this.state.model[\"delete\"]();\n        }\n\n        this.setState({\n          model: this._getModel(gl)\n        });\n        this.getAttributeManager().invalidateAll();\n      }\n\n      if (regenerateModels || props.diskResolution !== oldProps.diskResolution || props.vertices !== oldProps.vertices) {\n        this._updateGeometry(props);\n      }\n    }\n  }, {\n    key: \"getGeometry\",\n    value: function getGeometry(diskResolution, vertices) {\n      var geometry = new _columnGeometry[\"default\"]({\n        radius: 1,\n        height: 2,\n        vertices: vertices,\n        nradial: diskResolution\n      });\n      var meanVertexDistance = 0;\n\n      if (vertices) {\n        for (var i = 0; i < diskResolution; i++) {\n          var p = vertices[i];\n          var d = Math.sqrt(p[0] * p[0] + p[1] * p[1]);\n          meanVertexDistance += d / diskResolution;\n        }\n      } else {\n        meanVertexDistance = 1;\n      }\n\n      this.setState({\n        edgeDistance: Math.cos(Math.PI / diskResolution) * meanVertexDistance\n      });\n      return geometry;\n    }\n  }, {\n    key: \"_getModel\",\n    value: function _getModel(gl) {\n      return new _core2.Model(gl, Object.assign({}, this.getShaders(), {\n        id: this.props.id,\n        isInstanced: true\n      }));\n    }\n  }, {\n    key: \"_updateGeometry\",\n    value: function _updateGeometry(_ref2) {\n      var diskResolution = _ref2.diskResolution,\n          vertices = _ref2.vertices;\n      var geometry = this.getGeometry(diskResolution, vertices);\n      this.setState({\n        fillVertexCount: geometry.attributes.POSITION.value.length / 3,\n        wireframeVertexCount: geometry.indices.value.length\n      });\n      this.state.model.setProps({\n        geometry: geometry\n      });\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(_ref3) {\n      var uniforms = _ref3.uniforms;\n      var viewport = this.context.viewport;\n      var _this$props = this.props,\n          lineWidthUnits = _this$props.lineWidthUnits,\n          lineWidthScale = _this$props.lineWidthScale,\n          lineWidthMinPixels = _this$props.lineWidthMinPixels,\n          lineWidthMaxPixels = _this$props.lineWidthMaxPixels,\n          elevationScale = _this$props.elevationScale,\n          extruded = _this$props.extruded,\n          filled = _this$props.filled,\n          stroked = _this$props.stroked,\n          wireframe = _this$props.wireframe,\n          offset = _this$props.offset,\n          coverage = _this$props.coverage,\n          radius = _this$props.radius,\n          angle = _this$props.angle;\n      var _this$state = this.state,\n          model = _this$state.model,\n          fillVertexCount = _this$state.fillVertexCount,\n          wireframeVertexCount = _this$state.wireframeVertexCount,\n          edgeDistance = _this$state.edgeDistance;\n      var widthMultiplier = lineWidthUnits === 'pixels' ? viewport.metersPerPixel : 1;\n      model.setUniforms(Object.assign({}, uniforms, {\n        radius: radius,\n        angle: angle / 180 * Math.PI,\n        offset: offset,\n        extruded: extruded,\n        coverage: coverage,\n        elevationScale: elevationScale,\n        edgeDistance: edgeDistance,\n        widthScale: lineWidthScale * widthMultiplier,\n        widthMinPixels: lineWidthMinPixels,\n        widthMaxPixels: lineWidthMaxPixels\n      }));\n\n      if (extruded && wireframe) {\n        model.setProps({\n          isIndexed: true\n        });\n        model.setVertexCount(wireframeVertexCount).setDrawMode(1).setUniforms({\n          isStroke: true\n        }).draw();\n      }\n\n      if (filled) {\n        model.setProps({\n          isIndexed: false\n        });\n        model.setVertexCount(fillVertexCount).setDrawMode(5).setUniforms({\n          isStroke: false\n        }).draw();\n      }\n\n      if (!extruded && stroked) {\n        model.setProps({\n          isIndexed: false\n        });\n        model.setVertexCount(fillVertexCount * 2 / 3).setDrawMode(5).setUniforms({\n          isStroke: true\n        }).draw();\n      }\n    }\n  }]);\n  return ColumnLayer;\n}(_core.Layer);\n\nexports[\"default\"] = ColumnLayer;\nColumnLayer.layerName = 'ColumnLayer';\nColumnLayer.defaultProps = defaultProps;\n//# sourceMappingURL=column-layer.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","Object","defineProperty","value","_classCallCheck2","_createClass2","_possibleConstructorReturn2","_getPrototypeOf2","_get2","_inherits2","_core","_core2","_columnGeometry","_columnLayerVertex","_columnLayerFragment","DEFAULT_COLOR","defaultProps","diskResolution","type","min","vertices","radius","angle","offset","coverage","max","elevationScale","lineWidthUnits","lineWidthScale","lineWidthMinPixels","lineWidthMaxPixels","Number","MAX_SAFE_INTEGER","extruded","wireframe","filled","stroked","getPosition","x","position","getFillColor","getLineColor","getLineWidth","getElevation","material","getColor","deprecatedFor","ColumnLayer","_Layer","apply","arguments","key","getShaders","prototype","call","vs","fs","modules","project32","gouraudLighting","picking","initializeState","getAttributeManager","attributeManager","addInstanced","instancePositions","size","fp64","use64bitPositions","transition","accessor","instanceElevations","instanceFillColors","props","colorFormat","length","normalized","defaultValue","instanceLineColors","instanceStrokeWidths","updateState","_ref","oldProps","changeFlags","regenerateModels","extensionsChanged","gl","context","state","model","setState","_getModel","invalidateAll","_updateGeometry","getGeometry","geometry","height","nradial","meanVertexDistance","i","p","Math","sqrt","d","edgeDistance","cos","PI","Model","assign","id","isInstanced","_ref2","fillVertexCount","attributes","POSITION","wireframeVertexCount","indices","setProps","draw","_ref3","viewport","_this$props","_this$state","setUniforms","uniforms","widthScale","widthMultiplier","metersPerPixel","widthMinPixels","widthMaxPixels","isIndexed","setVertexCount","setDrawMode","isStroke","Layer","layerName"]
}
