{
"version":3,
"file":"module$node_modules$$deck_DOT_gl$core$dist$es5$shaderlib$project$viewport_uniforms.js",
"lineCount":14,
"mappings":"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",
"sources":["node_modules/@deck_DOT_gl/core/dist/es5/shaderlib/project/viewport-uniforms.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$deck_DOT_gl$core$dist$es5$shaderlib$project$viewport_uniforms\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getOffsetOrigin = getOffsetOrigin;\nexports.getUniformsFromViewport = getUniformsFromViewport;\n\nvar mat4 = _interopRequireWildcard(require(\"gl-matrix/mat4\"));\n\nvar vec4 = _interopRequireWildcard(require(\"gl-matrix/vec4\"));\n\nvar _constants = require(\"../../lib/constants\");\n\nvar _memoize = _interopRequireDefault(require(\"../../utils/memoize\"));\n\nvar _assert = _interopRequireDefault(require(\"../../utils/assert\"));\n\nvar ZERO_VECTOR = [0, 0, 0, 0];\nvar VECTOR_TO_POINT_MATRIX = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0];\nvar IDENTITY_MATRIX = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\nvar DEFAULT_PIXELS_PER_UNIT2 = [0, 0, 0];\nvar DEFAULT_COORDINATE_ORIGIN = [0, 0, 0];\nvar getMemoizedViewportUniforms = (0, _memoize[\"default\"])(calculateViewportUniforms);\n\nfunction getOffsetOrigin(viewport, coordinateSystem) {\n  var coordinateOrigin = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_COORDINATE_ORIGIN;\n  var shaderCoordinateOrigin = coordinateOrigin;\n  var geospatialOrigin;\n  var offsetMode = true;\n\n  if (coordinateSystem === _constants.COORDINATE_SYSTEM.LNGLAT_OFFSETS || coordinateSystem === _constants.COORDINATE_SYSTEM.METER_OFFSETS) {\n    geospatialOrigin = coordinateOrigin;\n  } else {\n    geospatialOrigin = viewport.isGeospatial ? [Math.fround(viewport.longitude), Math.fround(viewport.latitude), 0] : null;\n  }\n\n  switch (viewport.projectionMode) {\n    case _constants.PROJECTION_MODE.WEB_MERCATOR:\n      if (coordinateSystem === _constants.COORDINATE_SYSTEM.LNGLAT || coordinateSystem === _constants.COORDINATE_SYSTEM.CARTESIAN) {\n        offsetMode = false;\n      }\n\n      break;\n\n    case _constants.PROJECTION_MODE.WEB_MERCATOR_AUTO_OFFSET:\n      if (coordinateSystem === _constants.COORDINATE_SYSTEM.LNGLAT) {\n        shaderCoordinateOrigin = geospatialOrigin;\n      } else if (coordinateSystem === _constants.COORDINATE_SYSTEM.CARTESIAN) {\n        shaderCoordinateOrigin = [Math.fround(viewport.center[0]), Math.fround(viewport.center[1]), 0];\n        geospatialOrigin = viewport.unprojectPosition(shaderCoordinateOrigin);\n        shaderCoordinateOrigin[0] -= coordinateOrigin[0];\n        shaderCoordinateOrigin[1] -= coordinateOrigin[1];\n        shaderCoordinateOrigin[2] -= coordinateOrigin[2];\n      }\n\n      break;\n\n    case _constants.PROJECTION_MODE.IDENTITY:\n      shaderCoordinateOrigin = viewport.position.map(Math.fround);\n      break;\n\n    case _constants.PROJECTION_MODE.GLOBE:\n      offsetMode = false;\n      break;\n\n    default:\n      offsetMode = false;\n  }\n\n  shaderCoordinateOrigin[2] = shaderCoordinateOrigin[2] || 0;\n  return {\n    geospatialOrigin: geospatialOrigin,\n    shaderCoordinateOrigin: shaderCoordinateOrigin,\n    offsetMode: offsetMode\n  };\n}\n\nfunction calculateMatrixAndOffset(viewport, coordinateSystem, coordinateOrigin) {\n  var viewMatrixUncentered = viewport.viewMatrixUncentered,\n      projectionMatrix = viewport.projectionMatrix;\n  var viewMatrix = viewport.viewMatrix,\n      viewProjectionMatrix = viewport.viewProjectionMatrix;\n  var projectionCenter = ZERO_VECTOR;\n  var cameraPosCommon = viewport.cameraPosition;\n\n  var _getOffsetOrigin = getOffsetOrigin(viewport, coordinateSystem, coordinateOrigin),\n      geospatialOrigin = _getOffsetOrigin.geospatialOrigin,\n      shaderCoordinateOrigin = _getOffsetOrigin.shaderCoordinateOrigin,\n      offsetMode = _getOffsetOrigin.offsetMode;\n\n  if (offsetMode) {\n    var positionCommonSpace = viewport.projectPosition(geospatialOrigin || shaderCoordinateOrigin);\n    cameraPosCommon = [cameraPosCommon[0] - positionCommonSpace[0], cameraPosCommon[1] - positionCommonSpace[1], cameraPosCommon[2] - positionCommonSpace[2]];\n    positionCommonSpace[3] = 1;\n    projectionCenter = vec4.transformMat4([], positionCommonSpace, viewProjectionMatrix);\n    viewMatrix = viewMatrixUncentered || viewMatrix;\n    viewProjectionMatrix = mat4.multiply([], projectionMatrix, viewMatrix);\n    viewProjectionMatrix = mat4.multiply([], viewProjectionMatrix, VECTOR_TO_POINT_MATRIX);\n  }\n\n  return {\n    viewMatrix: viewMatrix,\n    viewProjectionMatrix: viewProjectionMatrix,\n    projectionCenter: projectionCenter,\n    cameraPosCommon: cameraPosCommon,\n    shaderCoordinateOrigin: shaderCoordinateOrigin,\n    geospatialOrigin: geospatialOrigin\n  };\n}\n\nfunction getUniformsFromViewport() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      viewport = _ref.viewport,\n      _ref$devicePixelRatio = _ref.devicePixelRatio,\n      devicePixelRatio = _ref$devicePixelRatio === void 0 ? 1 : _ref$devicePixelRatio,\n      _ref$modelMatrix = _ref.modelMatrix,\n      modelMatrix = _ref$modelMatrix === void 0 ? null : _ref$modelMatrix,\n      _ref$coordinateSystem = _ref.coordinateSystem,\n      coordinateSystem = _ref$coordinateSystem === void 0 ? _constants.COORDINATE_SYSTEM.DEFAULT : _ref$coordinateSystem,\n      coordinateOrigin = _ref.coordinateOrigin,\n      _ref$autoWrapLongitud = _ref.autoWrapLongitude,\n      autoWrapLongitude = _ref$autoWrapLongitud === void 0 ? false : _ref$autoWrapLongitud,\n      projectionMode = _ref.projectionMode,\n      positionOrigin = _ref.positionOrigin;\n\n  (0, _assert[\"default\"])(viewport);\n\n  if (coordinateSystem === _constants.COORDINATE_SYSTEM.DEFAULT) {\n    coordinateSystem = viewport.isGeospatial ? _constants.COORDINATE_SYSTEM.LNGLAT : _constants.COORDINATE_SYSTEM.CARTESIAN;\n  }\n\n  var uniforms = getMemoizedViewportUniforms({\n    viewport: viewport,\n    devicePixelRatio: devicePixelRatio,\n    coordinateSystem: coordinateSystem,\n    coordinateOrigin: coordinateOrigin\n  });\n  uniforms.project_uWrapLongitude = autoWrapLongitude;\n  uniforms.project_uModelMatrix = modelMatrix || IDENTITY_MATRIX;\n  return uniforms;\n}\n\nfunction calculateViewportUniforms(_ref2) {\n  var viewport = _ref2.viewport,\n      devicePixelRatio = _ref2.devicePixelRatio,\n      coordinateSystem = _ref2.coordinateSystem,\n      coordinateOrigin = _ref2.coordinateOrigin;\n\n  var _calculateMatrixAndOf = calculateMatrixAndOffset(viewport, coordinateSystem, coordinateOrigin),\n      projectionCenter = _calculateMatrixAndOf.projectionCenter,\n      viewProjectionMatrix = _calculateMatrixAndOf.viewProjectionMatrix,\n      cameraPosCommon = _calculateMatrixAndOf.cameraPosCommon,\n      shaderCoordinateOrigin = _calculateMatrixAndOf.shaderCoordinateOrigin,\n      geospatialOrigin = _calculateMatrixAndOf.geospatialOrigin;\n\n  var distanceScales = viewport.getDistanceScales();\n  var viewportSize = [viewport.width * devicePixelRatio, viewport.height * devicePixelRatio];\n  var uniforms = {\n    project_uCoordinateSystem: coordinateSystem,\n    project_uProjectionMode: viewport.projectionMode,\n    project_uCoordinateOrigin: shaderCoordinateOrigin,\n    project_uCenter: projectionCenter,\n    project_uAntimeridian: (viewport.longitude || 0) - 180,\n    project_uViewportSize: viewportSize,\n    project_uDevicePixelRatio: devicePixelRatio,\n    project_uFocalDistance: viewport.focalDistance || 1,\n    project_uCommonUnitsPerMeter: distanceScales.unitsPerMeter,\n    project_uCommonUnitsPerWorldUnit: distanceScales.unitsPerMeter,\n    project_uCommonUnitsPerWorldUnit2: DEFAULT_PIXELS_PER_UNIT2,\n    project_uScale: viewport.scale,\n    project_uViewProjectionMatrix: viewProjectionMatrix,\n    project_uCameraPosition: cameraPosCommon\n  };\n\n  if (geospatialOrigin) {\n    var distanceScalesAtOrigin = viewport.getDistanceScales(geospatialOrigin);\n\n    switch (coordinateSystem) {\n      case _constants.COORDINATE_SYSTEM.METER_OFFSETS:\n        uniforms.project_uCommonUnitsPerWorldUnit = distanceScalesAtOrigin.unitsPerMeter;\n        uniforms.project_uCommonUnitsPerWorldUnit2 = distanceScalesAtOrigin.unitsPerMeter2;\n        break;\n\n      case _constants.COORDINATE_SYSTEM.LNGLAT:\n      case _constants.COORDINATE_SYSTEM.LNGLAT_OFFSETS:\n        uniforms.project_uCommonUnitsPerWorldUnit = distanceScalesAtOrigin.unitsPerDegree;\n        uniforms.project_uCommonUnitsPerWorldUnit2 = distanceScalesAtOrigin.unitsPerDegree2;\n        break;\n\n      case _constants.COORDINATE_SYSTEM.CARTESIAN:\n        uniforms.project_uCommonUnitsPerWorldUnit = [1, 1, distanceScalesAtOrigin.unitsPerMeter[2]];\n        uniforms.project_uCommonUnitsPerWorldUnit2 = [0, 0, distanceScalesAtOrigin.unitsPerMeter2[2]];\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  return uniforms;\n}\n//# sourceMappingURL=viewport-uniforms.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","getOffsetOrigin","viewport","coordinateSystem","coordinateOrigin","arguments","length","undefined","DEFAULT_COORDINATE_ORIGIN","shaderCoordinateOrigin","offsetMode","geospatialOrigin","_constants","COORDINATE_SYSTEM","LNGLAT_OFFSETS","METER_OFFSETS","isGeospatial","Math","fround","longitude","latitude","projectionMode","PROJECTION_MODE","WEB_MERCATOR","LNGLAT","CARTESIAN","WEB_MERCATOR_AUTO_OFFSET","center","unprojectPosition","IDENTITY","position","map","GLOBE","_interopRequireDefault","_interopRequireWildcard","Object","defineProperty","value","getUniformsFromViewport","_ref","_ref$devicePixelRatio","devicePixelRatio","_ref$modelMatrix","modelMatrix","_ref$coordinateSystem","DEFAULT","_ref$autoWrapLongitud","autoWrapLongitude","_assert","uniforms","getMemoizedViewportUniforms","project_uWrapLongitude","project_uModelMatrix","IDENTITY_MATRIX","mat4","vec4","_memoize","ZERO_VECTOR","VECTOR_TO_POINT_MATRIX","DEFAULT_PIXELS_PER_UNIT2","calculateViewportUniforms","_ref2","viewMatrixUncentered","projectionMatrix","viewMatrix","viewProjectionMatrix","projectionCenter","cameraPosCommon","cameraPosition","_getOffsetOrigin","positionCommonSpace","projectPosition","transformMat4","multiply","distanceScales","getDistanceScales","project_uCoordinateSystem","project_uProjectionMode","project_uCoordinateOrigin","project_uCenter","project_uAntimeridian","project_uViewportSize","viewportSize","width","height","project_uDevicePixelRatio","project_uFocalDistance","focalDistance","project_uCommonUnitsPerMeter","unitsPerMeter","project_uCommonUnitsPerWorldUnit","project_uCommonUnitsPerWorldUnit2","project_uScale","scale","project_uViewProjectionMatrix","project_uCameraPosition","distanceScalesAtOrigin","unitsPerMeter2","unitsPerDegree","unitsPerDegree2"]
}
