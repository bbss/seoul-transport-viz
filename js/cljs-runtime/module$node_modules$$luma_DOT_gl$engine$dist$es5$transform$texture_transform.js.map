{
"version":3,
"file":"module$node_modules$$luma_DOT_gl$engine$dist$es5$transform$texture_transform.js",
"lineCount":19,
"mappings":"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",
"sources":["node_modules/@luma_DOT_gl/engine/dist/es5/transform/texture-transform.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$luma_DOT_gl$engine$dist$es5$transform$texture_transform\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _webgl = require(\"@luma.gl/webgl\");\n\nvar _shadertools = require(\"@luma.gl/shadertools\");\n\nvar _transformShaderUtils = require(\"./transform-shader-utils\");\n\nvar _SRC_TEX_PARAMETER_OV;\n\nvar SRC_TEX_PARAMETER_OVERRIDES = (_SRC_TEX_PARAMETER_OV = {}, (0, _defineProperty2[\"default\"])(_SRC_TEX_PARAMETER_OV, 10241, 9728), (0, _defineProperty2[\"default\"])(_SRC_TEX_PARAMETER_OV, 10240, 9728), (0, _defineProperty2[\"default\"])(_SRC_TEX_PARAMETER_OV, 10242, 33071), (0, _defineProperty2[\"default\"])(_SRC_TEX_PARAMETER_OV, 10243, 33071), _SRC_TEX_PARAMETER_OV);\nvar FS_OUTPUT_VARIABLE = 'transform_output';\n\nvar TextureTransform = function () {\n  function TextureTransform(gl) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    (0, _classCallCheck2[\"default\"])(this, TextureTransform);\n    this.gl = gl;\n    this.currentIndex = 0;\n    this._swapTexture = null;\n    this.targetTextureVarying = null;\n    this.targetTextureType = null;\n    this.samplerTextureMap = null;\n    this.bindings = [];\n    this.resources = {};\n\n    this._initialize(props);\n\n    Object.seal(this);\n  }\n\n  (0, _createClass2[\"default\"])(TextureTransform, [{\n    key: \"updateModelProps\",\n    value: function updateModelProps() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      var updatedModelProps = this._processVertexShader(props);\n\n      return Object.assign({}, props, updatedModelProps);\n    }\n  }, {\n    key: \"getDrawOptions\",\n    value: function getDrawOptions() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _this$bindings$this$c = this.bindings[this.currentIndex],\n          sourceBuffers = _this$bindings$this$c.sourceBuffers,\n          sourceTextures = _this$bindings$this$c.sourceTextures,\n          framebuffer = _this$bindings$this$c.framebuffer,\n          targetTexture = _this$bindings$this$c.targetTexture;\n      var attributes = Object.assign({}, sourceBuffers, opts.attributes);\n      var uniforms = Object.assign({}, opts.uniforms);\n      var parameters = Object.assign({}, opts.parameters);\n      var discard = opts.discard;\n\n      if (this.hasSourceTextures || this.hasTargetTexture) {\n        attributes.transform_elementID = this.elementIDBuffer;\n\n        for (var sampler in this.samplerTextureMap) {\n          var textureName = this.samplerTextureMap[sampler];\n          uniforms[sampler] = sourceTextures[textureName];\n        }\n\n        this._setSourceTextureParameters();\n\n        var sizeUniforms = (0, _transformShaderUtils.getSizeUniforms)({\n          sourceTextureMap: sourceTextures,\n          targetTextureVarying: this.targetTextureVarying,\n          targetTexture: targetTexture\n        });\n        Object.assign(uniforms, sizeUniforms);\n      }\n\n      if (this.hasTargetTexture) {\n        discard = false;\n        parameters.viewport = [0, 0, framebuffer.width, framebuffer.height];\n      }\n\n      return {\n        attributes: attributes,\n        framebuffer: framebuffer,\n        uniforms: uniforms,\n        discard: discard,\n        parameters: parameters\n      };\n    }\n  }, {\n    key: \"swap\",\n    value: function swap() {\n      if (this._swapTexture) {\n        this.currentIndex = this._getNextIndex();\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      this._setupTextures(opts);\n    }\n  }, {\n    key: \"getTargetTexture\",\n    value: function getTargetTexture() {\n      var targetTexture = this.bindings[this.currentIndex].targetTexture;\n      return targetTexture;\n    }\n  }, {\n    key: \"getData\",\n    value: function getData() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$packed = _ref.packed,\n          packed = _ref$packed === void 0 ? false : _ref$packed;\n\n      var framebuffer = this.bindings[this.currentIndex].framebuffer;\n      var pixels = (0, _webgl.readPixelsToArray)(framebuffer);\n\n      if (!packed) {\n        return pixels;\n      }\n\n      var ArrayType = pixels.constructor;\n      var channelCount = (0, _shadertools.typeToChannelCount)(this.targetTextureType);\n      var packedPixels = new ArrayType(pixels.length * channelCount / 4);\n      var packCount = 0;\n\n      for (var i = 0; i < pixels.length; i += 4) {\n        for (var j = 0; j < channelCount; j++) {\n          packedPixels[packCount++] = pixels[i + j];\n        }\n      }\n\n      return packedPixels;\n    }\n  }, {\n    key: \"getFramebuffer\",\n    value: function getFramebuffer() {\n      var currentResources = this.bindings[this.currentIndex];\n      return currentResources.framebuffer;\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete() {\n      if (this.ownTexture) {\n        this.ownTexture[\"delete\"]();\n      }\n\n      if (this.elementIDBuffer) {\n        this.elementIDBuffer[\"delete\"]();\n      }\n    }\n  }, {\n    key: \"_initialize\",\n    value: function _initialize() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _targetTextureVarying = props._targetTextureVarying,\n          _swapTexture = props._swapTexture;\n      this._swapTexture = _swapTexture;\n      this.targetTextureVarying = _targetTextureVarying;\n      this.hasTargetTexture = _targetTextureVarying;\n\n      this._setupTextures(props);\n    }\n  }, {\n    key: \"_createTargetTexture\",\n    value: function _createTargetTexture(props) {\n      var sourceTextures = props.sourceTextures,\n          textureOrReference = props.textureOrReference;\n\n      if (textureOrReference instanceof _webgl.Texture2D) {\n        return textureOrReference;\n      }\n\n      var refTexture = sourceTextures[textureOrReference];\n\n      if (!refTexture) {\n        return null;\n      }\n\n      this._targetRefTexName = textureOrReference;\n      return this._createNewTexture(refTexture);\n    }\n  }, {\n    key: \"_setupTextures\",\n    value: function _setupTextures() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      var sourceBuffers = props.sourceBuffers,\n          _props$_sourceTexture = props._sourceTextures,\n          _sourceTextures = _props$_sourceTexture === void 0 ? {} : _props$_sourceTexture,\n          _targetTexture = props._targetTexture;\n\n      var targetTexture = this._createTargetTexture({\n        sourceTextures: _sourceTextures,\n        textureOrReference: _targetTexture\n      });\n\n      this.hasSourceTextures = this.hasSourceTextures || _sourceTextures && Object.keys(_sourceTextures).length > 0;\n\n      this._updateBindings({\n        sourceBuffers: sourceBuffers,\n        sourceTextures: _sourceTextures,\n        targetTexture: targetTexture\n      });\n\n      if ('elementCount' in props) {\n        this._updateElementIDBuffer(props.elementCount);\n      }\n    }\n  }, {\n    key: \"_updateElementIDBuffer\",\n    value: function _updateElementIDBuffer(elementCount) {\n      if (typeof elementCount !== 'number' || this.elementCount >= elementCount) {\n        return;\n      }\n\n      var elementIds = new Float32Array(elementCount);\n      elementIds.forEach(function (_, index, array) {\n        array[index] = index;\n      });\n\n      if (!this.elementIDBuffer) {\n        this.elementIDBuffer = new _webgl.Buffer(this.gl, {\n          data: elementIds,\n          accessor: {\n            size: 1\n          }\n        });\n      } else {\n        this.elementIDBuffer.setData({\n          data: elementIds\n        });\n      }\n\n      this.elementCount = elementCount;\n    }\n  }, {\n    key: \"_updateBindings\",\n    value: function _updateBindings(opts) {\n      this.bindings[this.currentIndex] = this._updateBinding(this.bindings[this.currentIndex], opts);\n\n      if (this._swapTexture) {\n        var _this$_swapTextures = this._swapTextures(this.bindings[this.currentIndex]),\n            sourceTextures = _this$_swapTextures.sourceTextures,\n            targetTexture = _this$_swapTextures.targetTexture;\n\n        var nextIndex = this._getNextIndex();\n\n        this.bindings[nextIndex] = this._updateBinding(this.bindings[nextIndex], {\n          sourceTextures: sourceTextures,\n          targetTexture: targetTexture\n        });\n      }\n    }\n  }, {\n    key: \"_updateBinding\",\n    value: function _updateBinding(binding, opts) {\n      var sourceBuffers = opts.sourceBuffers,\n          sourceTextures = opts.sourceTextures,\n          targetTexture = opts.targetTexture;\n\n      if (!binding) {\n        binding = {\n          sourceBuffers: {},\n          sourceTextures: {},\n          targetTexture: null\n        };\n      }\n\n      Object.assign(binding.sourceTextures, sourceTextures);\n      Object.assign(binding.sourceBuffers, sourceBuffers);\n\n      if (targetTexture) {\n        binding.targetTexture = targetTexture;\n        var width = targetTexture.width,\n            height = targetTexture.height;\n        var _binding = binding,\n            framebuffer = _binding.framebuffer;\n\n        if (framebuffer) {\n          framebuffer.update({\n            attachments: (0, _defineProperty2[\"default\"])({}, 36064, targetTexture),\n            resizeAttachments: false\n          });\n          framebuffer.resize({\n            width: width,\n            height: height\n          });\n        } else {\n          binding.framebuffer = new _webgl.Framebuffer(this.gl, {\n            id: \"\".concat(this.id || 'transform', \"-framebuffer\"),\n            width: width,\n            height: height,\n            attachments: (0, _defineProperty2[\"default\"])({}, 36064, targetTexture)\n          });\n        }\n      }\n\n      return binding;\n    }\n  }, {\n    key: \"_setSourceTextureParameters\",\n    value: function _setSourceTextureParameters() {\n      var index = this.currentIndex;\n      var sourceTextures = this.bindings[index].sourceTextures;\n\n      for (var name in sourceTextures) {\n        sourceTextures[name].setParameters(SRC_TEX_PARAMETER_OVERRIDES);\n      }\n    }\n  }, {\n    key: \"_swapTextures\",\n    value: function _swapTextures(opts) {\n      if (!this._swapTexture) {\n        return null;\n      }\n\n      var sourceTextures = Object.assign({}, opts.sourceTextures);\n      sourceTextures[this._swapTexture] = opts.targetTexture;\n      var targetTexture = opts.sourceTextures[this._swapTexture];\n      return {\n        sourceTextures: sourceTextures,\n        targetTexture: targetTexture\n      };\n    }\n  }, {\n    key: \"_createNewTexture\",\n    value: function _createNewTexture(refTexture) {\n      var _parameters;\n\n      var texture = (0, _webgl.cloneTextureFrom)(refTexture, {\n        parameters: (_parameters = {}, (0, _defineProperty2[\"default\"])(_parameters, 10241, 9728), (0, _defineProperty2[\"default\"])(_parameters, 10240, 9728), (0, _defineProperty2[\"default\"])(_parameters, 10242, 33071), (0, _defineProperty2[\"default\"])(_parameters, 10243, 33071), _parameters),\n        pixelStore: (0, _defineProperty2[\"default\"])({}, 37440, false)\n      });\n\n      if (this.ownTexture) {\n        this.ownTexture[\"delete\"]();\n      }\n\n      this.ownTexture = texture;\n      return texture;\n    }\n  }, {\n    key: \"_getNextIndex\",\n    value: function _getNextIndex() {\n      return (this.currentIndex + 1) % 2;\n    }\n  }, {\n    key: \"_processVertexShader\",\n    value: function _processVertexShader() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _this$bindings$this$c2 = this.bindings[this.currentIndex],\n          sourceTextures = _this$bindings$this$c2.sourceTextures,\n          targetTexture = _this$bindings$this$c2.targetTexture;\n\n      var _updateForTextures = (0, _transformShaderUtils.updateForTextures)({\n        vs: props.vs,\n        sourceTextureMap: sourceTextures,\n        targetTextureVarying: this.targetTextureVarying,\n        targetTexture: targetTexture\n      }),\n          vs = _updateForTextures.vs,\n          uniforms = _updateForTextures.uniforms,\n          targetTextureType = _updateForTextures.targetTextureType,\n          inject = _updateForTextures.inject,\n          samplerTextureMap = _updateForTextures.samplerTextureMap;\n\n      var combinedInject = (0, _shadertools.combineInjects)([props.inject || {}, inject]);\n      this.targetTextureType = targetTextureType;\n      this.samplerTextureMap = samplerTextureMap;\n      var fs = props._fs || (0, _shadertools.getPassthroughFS)({\n        version: (0, _webgl.getShaderVersion)(vs),\n        input: this.targetTextureVarying,\n        inputType: targetTextureType,\n        output: FS_OUTPUT_VARIABLE\n      });\n      var modules = this.hasSourceTextures || this.targetTextureVarying ? [_shadertools._transform].concat(props.modules || []) : props.modules;\n      return {\n        vs: vs,\n        fs: fs,\n        modules: modules,\n        uniforms: uniforms,\n        inject: combinedInject\n      };\n    }\n  }]);\n  return TextureTransform;\n}();\n\nexports[\"default\"] = TextureTransform;\n//# sourceMappingURL=texture-transform.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","Object","defineProperty","value","_classCallCheck2","_createClass2","_defineProperty2","_webgl","_shadertools","_transformShaderUtils","_SRC_TEX_PARAMETER_OV","SRC_TEX_PARAMETER_OVERRIDES","TextureTransform","gl","props","arguments","length","undefined","currentIndex","samplerTextureMap","targetTextureType","targetTextureVarying","_swapTexture","bindings","resources","_initialize","seal","key","updateModelProps","updatedModelProps","_processVertexShader","assign","getDrawOptions","opts","_this$bindings$this$c","sourceTextures","framebuffer","targetTexture","attributes","sourceBuffers","uniforms","parameters","discard","hasSourceTextures","hasTargetTexture","transform_elementID","elementIDBuffer","sampler","textureName","_setSourceTextureParameters","sizeUniforms","getSizeUniforms","sourceTextureMap","viewport","width","height","swap","_getNextIndex","update","_setupTextures","getTargetTexture","getData","_ref$packed","packed","_ref","pixels","readPixelsToArray","ArrayType","constructor","channelCount","typeToChannelCount","packedPixels","packCount","i","j","getFramebuffer","currentResources","_delete","ownTexture","_targetTextureVarying","_createTargetTexture","textureOrReference","Texture2D","refTexture","_targetRefTexName","_createNewTexture","_props$_sourceTexture","_sourceTextures","_targetTexture","keys","_updateBindings","_updateElementIDBuffer","elementCount","elementIds","Float32Array","forEach","_","index","array","setData","data","Buffer","accessor","size","_updateBinding","_this$_swapTextures","_swapTextures","nextIndex","binding","attachments","resizeAttachments","resize","Framebuffer","id","concat","name","setParameters","_parameters","texture","cloneTextureFrom","pixelStore","_this$bindings$this$c2","_updateForTextures","updateForTextures","vs","inject","combinedInject","combineInjects","fs","_fs","getPassthroughFS","version","getShaderVersion","input","inputType","output","FS_OUTPUT_VARIABLE","modules","_transform"]
}
