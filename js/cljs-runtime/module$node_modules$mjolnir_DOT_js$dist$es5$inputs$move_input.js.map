{
"version":3,
"file":"module$node_modules$mjolnir_DOT_js$dist$es5$inputs$move_input.js",
"lineCount":6,
"mappings":"AAAAA,cAAA,8DAAA,CAAkF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGtHC,MAAAA,CAAyBH,OAAA,CAAQ,kEAAR,CAE7BI,OAAAC,eAAA,CAAsBH,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CI,MAAO,CAAA,CADoC,CAA7C,CAGAJ,QAAA,CAAQ,SAAR,CAAA,CAAqB,IAAK,EAE1B,KAAIK,iBAAmBJ,MAAA,CAAuBH,OAAA,CAAQ,2DAAR,CAAvB,CAAvB,CAEIQ,cAAgBL,MAAA,CAAuBH,OAAA,CAAQ,wDAAR,CAAvB,CAFpB,CAMIS,aAFaT,OAAAU,CAAQ,uDAARA,CAEEC,kBAAAF,aAMfG;OAAAA,CAAY,QAAS,EAAG,CAC1BA,QAASA,UAAS,CAACC,OAAD,CAAUC,QAAV,CAAoB,CACpC,IAAIC,MAAQ,IAAZ,CAEIC,QAA6B,CAAnB,CAAAC,SAAAC,OAAA,EAAyCC,IAAAA,EAAzC,GAAwBF,SAAA,CAAU,CAAV,CAAxB,CAAqDA,SAAA,CAAU,CAAV,CAArD,CAAoE,EAClF,EAAC,CAAA,CAAGV,gBAAA,CAAiB,SAAjB,CAAJ,EAAiC,IAAjC,CAAuCK,SAAvC,CACA,KAAAC,QAAA,CAAeA,OACf,KAAAC,SAAA,CAAgBA,QAChB,KAAAM,QAAA,CAAe,CAAA,CACf,KAAAJ,QAAA,CAAeZ,MAAAiB,OAAA,CAAc,CAC3BC,OAAQ,CAAA,CADmB,CAAd,CAEZN,OAFY,CAMf,KAAAO,gBAAA,CADA,IAAAC,eACA,CAFA,IAAAC,iBAEA,CAHA,IAAAC,gBAGA,CAHuB,IAAAV,QAAAM,OAIvB,KAAAK,OAAA,CAAclB,YAAAmB,OAAA,CAAoBZ,OAAAW,OAApB,EAAsC,EAAtC,CACd,KAAAE,YAAA,CAAmB,IAAAA,YAAAC,KAAA,CAAsB,IAAtB,CACnB,KAAAH,OAAAI,QAAA,CAAoB,QAAS,CAACC,KAAD,CAAQ,CACnC,MAAOnB,QAAAoB,iBAAA,CAAyBD,KAAzB;AAAgCjB,KAAAc,YAAhC,CAD4B,CAArC,CAjBoC,CAsBtC,CAAC,CAAA,CAAGrB,aAAA,CAAc,SAAd,CAAJ,EAA8BI,SAA9B,CAAyC,CAAC,CACxCsB,IAAK,SADmC,CAExC5B,MAAO6B,QAAgB,EAAG,CACxB,IAAIC,OAAS,IAEb,KAAAT,OAAAI,QAAA,CAAoB,QAAS,CAACC,KAAD,CAAQ,CACnC,MAAOI,OAAAvB,QAAAwB,oBAAA,CAAmCL,KAAnC,CAA0CI,MAAAP,YAA1C,CAD4B,CAArC,CAHwB,CAFc,CAAD,CAStC,CACDK,IAAK,iBADJ,CAED5B,MAAOgC,QAAwB,CAACC,SAAD,CAAYC,OAAZ,CAAqB,CAvClCC,aAwChB,GAAIF,SAAJ,GACE,IAAAb,gBADF,CACyBc,OADzB,CAvCgBE,cA2ChB,GAAIH,SAAJ,GACE,IAAAhB,gBADF,CACyBiB,OADzB,CA1CeG,aA8Cf,GAAIJ,SAAJ,GACE,IAAAf,eADF,CACwBgB,OADxB,CA7CiBI,eAiDjB,GAAIL,SAAJ,GACE,IAAAd,iBADF,CAC0Be,OAD1B,CAbkD,CAFnD,CATsC;AA4BtC,CACDN,IAAK,aADJ,CAED5B,MAAOuB,QAAoB,CAACG,KAAD,CAAQ,CACjC,IAAAa,gBAAA,CAAqBb,KAArB,CACA,KAAAc,eAAA,CAAoBd,KAApB,CACA,KAAAe,iBAAA,CAAsBf,KAAtB,CACA,KAAAgB,gBAAA,CAAqBhB,KAArB,CAJiC,CAFlC,CA5BsC,CAoCtC,CACDE,IAAK,iBADJ,CAED5B,MAAOuC,QAAwB,CAACb,KAAD,CAAQ,CACjC,IAAAT,gBAAJ,EACqB,WADrB,GACMS,KAAAiB,KADN,EAEI,IAAAnC,SAAA,CAAc,CACZmC,KArEUP,aAoEE,CAEZQ,SAAUlB,KAFE,CAGZmB,YAAa,OAHD,CAIZC,OAAQpB,KAAAoB,OAJI,CAAd,CAHiC,CAFtC,CApCsC,CAkDtC,CACDlB,IAAK,gBADJ,CAED5B,MAAOwC,QAAuB,CAACd,KAAD,CAAQ,CAChC,IAAAR,eAAJ,EACqB,UADrB,GACMQ,KAAAiB,KADN,EAEI,IAAAnC,SAAA,CAAc,CACZmC,KAlFSN,YAiFG,CAEZO,SAAUlB,KAFE,CAGZmB,YAAa,OAHD,CAIZC,OAAQpB,KAAAoB,OAJI,CAAd,CAHgC,CAFrC,CAlDsC;AAgEtC,CACDlB,IAAK,kBADJ,CAED5B,MAAOyC,QAAyB,CAACf,KAAD,CAAQ,CAClC,IAAAP,iBAAJ,EACqB,YADrB,GACMO,KAAAiB,KADN,EAEI,IAAAnC,SAAA,CAAc,CACZmC,KA/FWL,cA8FC,CAEZM,SAAUlB,KAFE,CAGZmB,YAAa,OAHD,CAIZC,OAAQpB,KAAAoB,OAJI,CAAd,CAHkC,CAFvC,CAhEsC,CA8EtC,CACDlB,IAAK,iBADJ,CAED5B,MAAO0C,QAAwB,CAAChB,KAAD,CAAQ,CACrC,GAAI,IAAAN,gBAAJ,CACE,OAAQM,KAAAiB,KAAR,EACE,KAAK,WAAL,CACsB,CAApB,EAAIjB,KAAAqB,OAAJ,GACE,IAAAjC,QADF,CACiB,CAAA,CADjB,CAIA,MAEF,MAAK,WAAL,CACsB,CAApB,GAAIY,KAAAsB,MAAJ,GACE,IAAAlC,QADF,CACiB,CAAA,CADjB,CAIK,KAAAA,QAAL,EACE,IAAAN,SAAA,CAAc,CACZmC,KA7HMR,aA4HM,CAEZS,SAAUlB,KAFE,CAGZmB,YAAa,OAHD,CAIZC,OAAQpB,KAAAoB,OAJI,CAAd,CAQF,MAEF,MAAK,SAAL,CACE,IAAAhC,QAAA;AAAe,CAAA,CAzBnB,CAFmC,CAFtC,CA9EsC,CAAzC,CAmHA,OAAOR,UA1ImB,CAAZ,EA6IhBV,QAAA,CAAQ,SAAR,CAAA,CAAqBU,OAnKqG;",
"sources":["node_modules/mjolnir_DOT_js/dist/es5/inputs/move-input.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mjolnir_DOT_js$dist$es5$inputs$move_input\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _constants = require(\"../constants\");\n\nvar MOUSE_EVENTS = _constants.INPUT_EVENT_TYPES.MOUSE_EVENTS;\nvar MOVE_EVENT_TYPE = 'pointermove';\nvar OVER_EVENT_TYPE = 'pointerover';\nvar OUT_EVENT_TYPE = 'pointerout';\nvar LEAVE_EVENT_TYPE = 'pointerleave';\n\nvar MoveInput = function () {\n  function MoveInput(element, callback) {\n    var _this = this;\n\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    (0, _classCallCheck2[\"default\"])(this, MoveInput);\n    this.element = element;\n    this.callback = callback;\n    this.pressed = false;\n    this.options = Object.assign({\n      enable: true\n    }, options);\n    this.enableMoveEvent = this.options.enable;\n    this.enableLeaveEvent = this.options.enable;\n    this.enableOutEvent = this.options.enable;\n    this.enableOverEvent = this.options.enable;\n    this.events = MOUSE_EVENTS.concat(options.events || []);\n    this.handleEvent = this.handleEvent.bind(this);\n    this.events.forEach(function (event) {\n      return element.addEventListener(event, _this.handleEvent);\n    });\n  }\n\n  (0, _createClass2[\"default\"])(MoveInput, [{\n    key: \"destroy\",\n    value: function destroy() {\n      var _this2 = this;\n\n      this.events.forEach(function (event) {\n        return _this2.element.removeEventListener(event, _this2.handleEvent);\n      });\n    }\n  }, {\n    key: \"enableEventType\",\n    value: function enableEventType(eventType, enabled) {\n      if (eventType === MOVE_EVENT_TYPE) {\n        this.enableMoveEvent = enabled;\n      }\n\n      if (eventType === OVER_EVENT_TYPE) {\n        this.enableOverEvent = enabled;\n      }\n\n      if (eventType === OUT_EVENT_TYPE) {\n        this.enableOutEvent = enabled;\n      }\n\n      if (eventType === LEAVE_EVENT_TYPE) {\n        this.enableLeaveEvent = enabled;\n      }\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(event) {\n      this.handleOverEvent(event);\n      this.handleOutEvent(event);\n      this.handleLeaveEvent(event);\n      this.handleMoveEvent(event);\n    }\n  }, {\n    key: \"handleOverEvent\",\n    value: function handleOverEvent(event) {\n      if (this.enableOverEvent) {\n        if (event.type === 'mouseover') {\n          this.callback({\n            type: OVER_EVENT_TYPE,\n            srcEvent: event,\n            pointerType: 'mouse',\n            target: event.target\n          });\n        }\n      }\n    }\n  }, {\n    key: \"handleOutEvent\",\n    value: function handleOutEvent(event) {\n      if (this.enableOutEvent) {\n        if (event.type === 'mouseout') {\n          this.callback({\n            type: OUT_EVENT_TYPE,\n            srcEvent: event,\n            pointerType: 'mouse',\n            target: event.target\n          });\n        }\n      }\n    }\n  }, {\n    key: \"handleLeaveEvent\",\n    value: function handleLeaveEvent(event) {\n      if (this.enableLeaveEvent) {\n        if (event.type === 'mouseleave') {\n          this.callback({\n            type: LEAVE_EVENT_TYPE,\n            srcEvent: event,\n            pointerType: 'mouse',\n            target: event.target\n          });\n        }\n      }\n    }\n  }, {\n    key: \"handleMoveEvent\",\n    value: function handleMoveEvent(event) {\n      if (this.enableMoveEvent) {\n        switch (event.type) {\n          case 'mousedown':\n            if (event.button >= 0) {\n              this.pressed = true;\n            }\n\n            break;\n\n          case 'mousemove':\n            if (event.which === 0) {\n              this.pressed = false;\n            }\n\n            if (!this.pressed) {\n              this.callback({\n                type: MOVE_EVENT_TYPE,\n                srcEvent: event,\n                pointerType: 'mouse',\n                target: event.target\n              });\n            }\n\n            break;\n\n          case 'mouseup':\n            this.pressed = false;\n            break;\n\n          default:\n        }\n      }\n    }\n  }]);\n  return MoveInput;\n}();\n\nexports[\"default\"] = MoveInput;\n//# sourceMappingURL=move-input.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","Object","defineProperty","value","_classCallCheck2","_createClass2","MOUSE_EVENTS","_constants","INPUT_EVENT_TYPES","MoveInput","element","callback","_this","options","arguments","length","undefined","pressed","assign","enable","enableOverEvent","enableOutEvent","enableLeaveEvent","enableMoveEvent","events","concat","handleEvent","bind","forEach","event","addEventListener","key","destroy","_this2","removeEventListener","enableEventType","eventType","enabled","MOVE_EVENT_TYPE","OVER_EVENT_TYPE","OUT_EVENT_TYPE","LEAVE_EVENT_TYPE","handleOverEvent","handleOutEvent","handleLeaveEvent","handleMoveEvent","type","srcEvent","pointerType","target","button","which"]
}
