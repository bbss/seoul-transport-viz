{
"version":3,
"file":"module$node_modules$$deck_DOT_gl$geo_layers$dist$es5$tile_3d_layer$tile_3d_layer.js",
"lineCount":19,
"mappings":"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",
"sources":["node_modules/@deck_DOT_gl/geo-layers/dist/es5/tile-3d-layer/tile-3d-layer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$deck_DOT_gl$geo_layers$dist$es5$tile_3d_layer$tile_3d_layer\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _math = require(\"math.gl\");\n\nvar _core = require(\"@luma.gl/core\");\n\nvar _core2 = require(\"@deck.gl/core\");\n\nvar _layers = require(\"@deck.gl/layers\");\n\nvar _meshLayers = require(\"@deck.gl/mesh-layers\");\n\nvar _core3 = require(\"@loaders.gl/core\");\n\nvar _tiles = require(\"@loaders.gl/tiles\");\n\nvar _dTiles = require(\"@loaders.gl/3d-tiles\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar scratchOffset = new _math.Vector3();\nvar defaultProps = {\n  getPointColor: [0, 0, 0],\n  pointSize: 1.0,\n  data: null,\n  loadOptions: {},\n  loader: _dTiles.Tiles3DLoader,\n  onTilesetLoad: function onTilesetLoad(tileset3d) {},\n  onTileLoad: function onTileLoad(tileHeader) {},\n  onTileUnload: function onTileUnload(tileHeader) {},\n  onTileError: function onTileError(tile, message, url) {}\n};\n\nvar Tile3DLayer = function (_CompositeLayer) {\n  (0, _inherits2[\"default\"])(Tile3DLayer, _CompositeLayer);\n\n  function Tile3DLayer() {\n    (0, _classCallCheck2[\"default\"])(this, Tile3DLayer);\n    return (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(Tile3DLayer).apply(this, arguments));\n  }\n\n  (0, _createClass2[\"default\"])(Tile3DLayer, [{\n    key: \"initializeState\",\n    value: function initializeState() {\n      if ('onTileLoadFail' in this.props) {\n        _core2.log.removed('onTileLoadFail', 'onTileError')();\n      }\n\n      this.state = {\n        layerMap: {},\n        tileset3d: null\n      };\n    }\n  }, {\n    key: \"shouldUpdateState\",\n    value: function shouldUpdateState(_ref) {\n      var changeFlags = _ref.changeFlags;\n      return changeFlags.somethingChanged;\n    }\n  }, {\n    key: \"updateState\",\n    value: function updateState(_ref2) {\n      var props = _ref2.props,\n          oldProps = _ref2.oldProps,\n          changeFlags = _ref2.changeFlags;\n\n      if (props.data && props.data !== oldProps.data) {\n        this._loadTileset(props.data);\n      }\n\n      if (changeFlags.viewportChanged) {\n        var tileset3d = this.state.tileset3d;\n\n        this._updateTileset(tileset3d);\n      }\n    }\n  }, {\n    key: \"getPickingInfo\",\n    value: function getPickingInfo(_ref3) {\n      var info = _ref3.info,\n          sourceLayer = _ref3.sourceLayer;\n      var layerMap = this.state.layerMap;\n      var layerId = sourceLayer && sourceLayer.id;\n\n      if (layerId) {\n        var substr = layerId.substring(this.id.length + 1);\n        var tileId = substr.substring(substr.indexOf('-') + 1);\n        info.object = layerMap[tileId] && layerMap[tileId].tile;\n      }\n\n      return info;\n    }\n  }, {\n    key: \"_loadTileset\",\n    value: function () {\n      var _loadTileset2 = (0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee(tilesetUrl) {\n        var _this$props, loader, loadOptions, options, preloadOptions, tilesetJson, tileset3d;\n\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$props = this.props, loader = _this$props.loader, loadOptions = _this$props.loadOptions;\n                options = _objectSpread({}, loadOptions);\n\n                if (!loader.preload) {\n                  _context.next = 7;\n                  break;\n                }\n\n                _context.next = 5;\n                return loader.preload(tilesetUrl, loadOptions);\n\n              case 5:\n                preloadOptions = _context.sent;\n                Object.assign(options, preloadOptions);\n\n              case 7:\n                _context.next = 9;\n                return (0, _core3.load)(tilesetUrl, loader, options);\n\n              case 9:\n                tilesetJson = _context.sent;\n                tileset3d = new _tiles.Tileset3D(tilesetJson, _objectSpread({\n                  onTileLoad: this._onTileLoad.bind(this),\n                  onTileUnload: this._onTileUnload.bind(this),\n                  onTileLoadFail: this.props.onTileError\n                }, options));\n                this.setState({\n                  tileset3d: tileset3d,\n                  layerMap: {}\n                });\n\n                this._updateTileset(tileset3d);\n\n                this.props.onTilesetLoad(tileset3d);\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function _loadTileset(_x) {\n        return _loadTileset2.apply(this, arguments);\n      }\n\n      return _loadTileset;\n    }()\n  }, {\n    key: \"_onTileLoad\",\n    value: function _onTileLoad(tileHeader) {\n      this.props.onTileLoad(tileHeader);\n\n      this._updateTileset(this.state.tileset3d);\n\n      this.setNeedsUpdate();\n    }\n  }, {\n    key: \"_onTileUnload\",\n    value: function _onTileUnload(tileHeader) {\n      delete this.state.layerMap[tileHeader.id];\n      this.props.onTileUnload(tileHeader);\n    }\n  }, {\n    key: \"_updateTileset\",\n    value: function _updateTileset(tileset3d) {\n      var _this$context = this.context,\n          timeline = _this$context.timeline,\n          viewport = _this$context.viewport;\n\n      if (!timeline || !viewport || !tileset3d) {\n        return;\n      }\n\n      var frameNumber = tileset3d.update(viewport);\n      var tilesetChanged = this.state.frameNumber !== frameNumber;\n\n      if (tilesetChanged) {\n        this.setState({\n          frameNumber: frameNumber\n        });\n      }\n    }\n  }, {\n    key: \"_create3DTileLayer\",\n    value: function _create3DTileLayer(tileHeader) {\n      if (!tileHeader.content) {\n        return null;\n      }\n\n      switch (tileHeader.type) {\n        case _tiles.TILE_TYPE.POINTCLOUD:\n          return this._createPointCloudTileLayer(tileHeader);\n\n        case _tiles.TILE_TYPE.SCENEGRAPH:\n          return this._create3DModelTileLayer(tileHeader);\n\n        case _tiles.TILE_TYPE.MESH:\n          return this._createSimpleMeshLayer(tileHeader);\n\n        default:\n          throw new Error(\"Tile3DLayer: Failed to render layer of type \".concat(tileHeader.content.type));\n      }\n    }\n  }, {\n    key: \"_createPointCloudTileLayer\",\n    value: function _createPointCloudTileLayer(tileHeader) {\n      var _tileHeader$content = tileHeader.content,\n          attributes = _tileHeader$content.attributes,\n          pointCount = _tileHeader$content.pointCount,\n          constantRGBA = _tileHeader$content.constantRGBA,\n          cartographicOrigin = _tileHeader$content.cartographicOrigin,\n          modelMatrix = _tileHeader$content.modelMatrix;\n      var positions = attributes.positions,\n          normals = attributes.normals,\n          colors = attributes.colors;\n\n      if (!positions) {\n        return null;\n      }\n\n      var _this$props2 = this.props,\n          pointSize = _this$props2.pointSize,\n          getPointColor = _this$props2.getPointColor;\n      var SubLayerClass = this.getSubLayerClass('pointcloud', _layers.PointCloudLayer);\n      return new SubLayerClass({\n        pointSize: pointSize\n      }, this.getSubLayerProps({\n        id: 'pointcloud'\n      }), {\n        id: \"\".concat(this.id, \"-pointcloud-\").concat(tileHeader.id),\n        data: {\n          header: {\n            vertexCount: pointCount\n          },\n          attributes: {\n            POSITION: positions,\n            NORMAL: normals,\n            COLOR_0: colors\n          }\n        },\n        coordinateSystem: _core2.COORDINATE_SYSTEM.METER_OFFSETS,\n        coordinateOrigin: cartographicOrigin,\n        modelMatrix: modelMatrix,\n        getColor: constantRGBA || getPointColor\n      });\n    }\n  }, {\n    key: \"_create3DModelTileLayer\",\n    value: function _create3DModelTileLayer(tileHeader) {\n      var _tileHeader$content2 = tileHeader.content,\n          gltf = _tileHeader$content2.gltf,\n          instances = _tileHeader$content2.instances,\n          cartographicOrigin = _tileHeader$content2.cartographicOrigin,\n          modelMatrix = _tileHeader$content2.modelMatrix;\n      var SubLayerClass = this.getSubLayerClass('scenegraph', _meshLayers.ScenegraphLayer);\n      return new SubLayerClass({\n        _lighting: 'pbr'\n      }, this.getSubLayerProps({\n        id: 'scenegraph'\n      }), {\n        id: \"\".concat(this.id, \"-scenegraph-\").concat(tileHeader.id),\n        data: instances || [{}],\n        scenegraph: gltf,\n        coordinateSystem: _core2.COORDINATE_SYSTEM.METER_OFFSETS,\n        coordinateOrigin: cartographicOrigin,\n        modelMatrix: modelMatrix,\n        getTransformMatrix: function getTransformMatrix(instance) {\n          return instance.modelMatrix;\n        },\n        getPosition: function getPosition(instance) {\n          return [0, 0, 0];\n        }\n      });\n    }\n  }, {\n    key: \"_createSimpleMeshLayer\",\n    value: function _createSimpleMeshLayer(tileHeader) {\n      var content = tileHeader.content;\n      var attributes = content.attributes,\n          modelMatrix = content.modelMatrix,\n          cartographicOrigin = content.cartographicOrigin,\n          texture = content.texture;\n      var normals = attributes.normals,\n          texCoords = attributes.texCoords;\n      var positions = new Float32Array(attributes.positions.value.length);\n\n      for (var i = 0; i < positions.length; i += 3) {\n        scratchOffset.copy(attributes.positions.value.subarray(i, i + 3));\n        positions.set(scratchOffset, i);\n      }\n\n      var geometry = new _core.Geometry({\n        drawMode: 4,\n        attributes: {\n          positions: positions,\n          normals: normals,\n          texCoords: texCoords\n        }\n      });\n      var SubLayerClass = this.getSubLayerClass('mesh', _meshLayers.SimpleMeshLayer);\n      return new SubLayerClass(this.getSubLayerProps({\n        id: 'mesh'\n      }), {\n        id: \"\".concat(this.id, \"-mesh-\").concat(tileHeader.id),\n        mesh: geometry,\n        data: [{}],\n        getPosition: [0, 0, 0],\n        getColor: [255, 255, 255],\n        texture: texture,\n        modelMatrix: modelMatrix,\n        coordinateOrigin: cartographicOrigin,\n        coordinateSystem: _core2.COORDINATE_SYSTEM.METER_OFFSETS\n      });\n    }\n  }, {\n    key: \"renderLayers\",\n    value: function renderLayers() {\n      var _this = this;\n\n      var _this$state = this.state,\n          tileset3d = _this$state.tileset3d,\n          layerMap = _this$state.layerMap;\n\n      if (!tileset3d) {\n        return null;\n      }\n\n      return tileset3d.tiles.map(function (tile) {\n        var layer = layerMap[tile.id] && layerMap[tile.id].layer;\n\n        if (tile.selected) {\n          if (!layer) {\n            layer = _this._create3DTileLayer(tile);\n            layerMap[tile.id] = {\n              layer: layer,\n              tile: tile\n            };\n          }\n\n          if (layer && layer.props && !layer.props.visible) {\n            layer = layer.clone({\n              visible: true\n            });\n            layerMap[tile.id].layer = layer;\n          }\n\n          return layer;\n        }\n\n        if (layer && layer.props && layer.props.visible) {\n          layer = layer.clone({\n            visible: false\n          });\n          layerMap[tile.id].layer = layer;\n        }\n\n        return layer;\n      }).filter(Boolean);\n    }\n  }]);\n  return Tile3DLayer;\n}(_core2.CompositeLayer);\n\nexports[\"default\"] = Tile3DLayer;\nTile3DLayer.layerName = 'Tile3DLayer';\nTile3DLayer.defaultProps = defaultProps;\n//# sourceMappingURL=tile-3d-layer.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty2","getOwnPropertyDescriptors","defineProperties","defineProperty","_interopRequireDefault","value","_regenerator","_asyncToGenerator2","_classCallCheck2","_createClass2","_possibleConstructorReturn2","_getPrototypeOf2","_inherits2","_math","_core","_core2","_layers","_meshLayers","_core3","_tiles","_dTiles","scratchOffset","Vector3","defaultProps","getPointColor","pointSize","data","loadOptions","loader","Tiles3DLoader","onTilesetLoad","tileset3d","onTileLoad","tileHeader","onTileUnload","onTileError","tile","message","url","Tile3DLayer","_CompositeLayer","initializeState","props","log","removed","state","layerMap","shouldUpdateState","_ref","changeFlags","somethingChanged","updateState","_ref2","oldProps","_loadTileset","viewportChanged","_updateTileset","getPickingInfo","_ref3","info","sourceLayer","layerId","id","substr","substring","tileId","indexOf","_loadTileset2","mark","_callee","tilesetUrl","_this$props","options","preloadOptions","tilesetJson","wrap","_callee$","_context","prev","next","preload","sent","assign","load","Tileset3D","_onTileLoad","bind","_onTileUnload","onTileLoadFail","setState","stop","_x","setNeedsUpdate","_this$context","context","viewport","timeline","frameNumber","update","_create3DTileLayer","content","type","TILE_TYPE","POINTCLOUD","_createPointCloudTileLayer","SCENEGRAPH","_create3DModelTileLayer","MESH","_createSimpleMeshLayer","Error","concat","_tileHeader$content","attributes","pointCount","constantRGBA","cartographicOrigin","modelMatrix","positions","normals","colors","_this$props2","getSubLayerClass","SubLayerClass","PointCloudLayer","getSubLayerProps","header","vertexCount","POSITION","NORMAL","COLOR_0","coordinateSystem","COORDINATE_SYSTEM","METER_OFFSETS","coordinateOrigin","getColor","_tileHeader$content2","gltf","instances","ScenegraphLayer","_lighting","scenegraph","getTransformMatrix","instance","getPosition","texture","texCoords","Float32Array","copy","subarray","set","geometry","Geometry","drawMode","SimpleMeshLayer","mesh","renderLayers","_this","_this$state","tiles","map","layer","selected","visible","clone","Boolean","CompositeLayer","layerName"]
}
