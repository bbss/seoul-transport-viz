{
"version":3,
"file":"module$node_modules$$deck_DOT_gl$geo_layers$dist$es5$h3_layers$h3_hexagon_layer.js",
"lineCount":19,
"mappings":"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",
"sources":["node_modules/@deck_DOT_gl/geo-layers/dist/es5/h3-layers/h3-hexagon-layer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$deck_DOT_gl$geo_layers$dist$es5$h3_layers$h3_hexagon_layer\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.normalizeLongitudes = normalizeLongitudes;\nexports.scalePolygon = scalePolygon;\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _h3Js = require(\"h3-js\");\n\nvar _math = require(\"math.gl\");\n\nvar _core = require(\"@deck.gl/core\");\n\nvar _layers = require(\"@deck.gl/layers\");\n\nvar UPDATE_THRESHOLD_KM = 10;\n\nfunction normalizeLongitudes(vertices, refLng) {\n  refLng = refLng === undefined ? vertices[0][0] : refLng;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = vertices[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var pt = _step.value;\n      var deltaLng = pt[0] - refLng;\n\n      if (deltaLng > 180) {\n        pt[0] -= 360;\n      } else if (deltaLng < -180) {\n        pt[0] += 360;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n        _iterator[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n}\n\nfunction scalePolygon(hexId, vertices, factor) {\n  var _h3ToGeo = (0, _h3Js.h3ToGeo)(hexId),\n      _h3ToGeo2 = (0, _slicedToArray2[\"default\"])(_h3ToGeo, 2),\n      lat = _h3ToGeo2[0],\n      lng = _h3ToGeo2[1];\n\n  var actualCount = vertices.length;\n  normalizeLongitudes(vertices, lng);\n  var vertexCount = vertices[0] === vertices[actualCount - 1] ? actualCount - 1 : actualCount;\n\n  for (var i = 0; i < vertexCount; i++) {\n    vertices[i][0] = (0, _math.lerp)(lng, vertices[i][0], factor);\n    vertices[i][1] = (0, _math.lerp)(lat, vertices[i][1], factor);\n  }\n}\n\nfunction getHexagonCentroid(getHexagon, object, objectInfo) {\n  var hexagonId = getHexagon(object, objectInfo);\n\n  var _h3ToGeo3 = (0, _h3Js.h3ToGeo)(hexagonId),\n      _h3ToGeo4 = (0, _slicedToArray2[\"default\"])(_h3ToGeo3, 2),\n      lat = _h3ToGeo4[0],\n      lng = _h3ToGeo4[1];\n\n  return [lng, lat];\n}\n\nfunction h3ToPolygon(hexId) {\n  var coverage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var flatten = arguments.length > 2 ? arguments[2] : undefined;\n  var vertices = (0, _h3Js.h3ToGeoBoundary)(hexId, true);\n\n  if (coverage !== 1) {\n    scalePolygon(hexId, vertices, coverage);\n  } else {\n    normalizeLongitudes(vertices);\n  }\n\n  if (flatten) {\n    var positions = new Float64Array(vertices.length * 2);\n    var i = 0;\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n      for (var _iterator2 = vertices[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n        var pt = _step2.value;\n        positions[i++] = pt[0];\n        positions[i++] = pt[1];\n      }\n    } catch (err) {\n      _didIteratorError2 = true;\n      _iteratorError2 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n          _iterator2[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError2) {\n          throw _iteratorError2;\n        }\n      }\n    }\n\n    return positions;\n  }\n\n  return vertices;\n}\n\nfunction mergeTriggers(getHexagon, coverage) {\n  var trigger;\n\n  if (getHexagon === undefined || getHexagon === null) {\n    trigger = coverage;\n  } else if ((0, _typeof2[\"default\"])(getHexagon) === 'object') {\n    trigger = Object.assign({}, getHexagon, {\n      coverage: coverage\n    });\n  } else {\n    trigger = {\n      getHexagon: getHexagon,\n      coverage: coverage\n    };\n  }\n\n  return trigger;\n}\n\nvar defaultProps = Object.assign({}, _layers.PolygonLayer.defaultProps, {\n  highPrecision: false,\n  coverage: {\n    type: 'number',\n    min: 0,\n    max: 1,\n    value: 1\n  },\n  centerHexagon: null,\n  getHexagon: {\n    type: 'accessor',\n    value: function value(x) {\n      return x.hexagon;\n    }\n  },\n  extruded: true\n});\ndelete defaultProps.getLineDashArray;\n\nvar H3HexagonLayer = function (_CompositeLayer) {\n  (0, _inherits2[\"default\"])(H3HexagonLayer, _CompositeLayer);\n\n  function H3HexagonLayer() {\n    (0, _classCallCheck2[\"default\"])(this, H3HexagonLayer);\n    return (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(H3HexagonLayer).apply(this, arguments));\n  }\n\n  (0, _createClass2[\"default\"])(H3HexagonLayer, [{\n    key: \"shouldUpdateState\",\n    value: function shouldUpdateState(_ref) {\n      var changeFlags = _ref.changeFlags;\n      return this._shouldUseHighPrecision() ? changeFlags.propsOrDataChanged : changeFlags.somethingChanged;\n    }\n  }, {\n    key: \"updateState\",\n    value: function updateState(_ref2) {\n      var props = _ref2.props,\n          oldProps = _ref2.oldProps,\n          changeFlags = _ref2.changeFlags;\n\n      if (changeFlags.dataChanged || changeFlags.updateTriggers && changeFlags.updateTriggers.getHexagon) {\n        var resolution = -1;\n        var hasPentagon = false;\n        var hasMultipleRes = false;\n\n        var _createIterable = (0, _core.createIterable)(props.data),\n            iterable = _createIterable.iterable,\n            objectInfo = _createIterable.objectInfo;\n\n        var _iteratorNormalCompletion3 = true;\n        var _didIteratorError3 = false;\n        var _iteratorError3 = undefined;\n\n        try {\n          for (var _iterator3 = iterable[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n            var object = _step3.value;\n            objectInfo.index++;\n            var hexId = props.getHexagon(object, objectInfo);\n            var hexResolution = (0, _h3Js.h3GetResolution)(hexId);\n            if (resolution < 0) resolution = hexResolution;else if (resolution !== hexResolution) {\n              hasMultipleRes = true;\n              break;\n            }\n\n            if ((0, _h3Js.h3IsPentagon)(hexId)) {\n              hasPentagon = true;\n              break;\n            }\n          }\n        } catch (err) {\n          _didIteratorError3 = true;\n          _iteratorError3 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n              _iterator3[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError3) {\n              throw _iteratorError3;\n            }\n          }\n        }\n\n        this.setState({\n          resolution: resolution,\n          edgeLengthKM: resolution >= 0 ? (0, _h3Js.edgeLength)(resolution, _h3Js.UNITS.km) : 0,\n          hasMultipleRes: hasMultipleRes,\n          hasPentagon: hasPentagon\n        });\n      }\n\n      this._updateVertices(this.context.viewport);\n    }\n  }, {\n    key: \"_shouldUseHighPrecision\",\n    value: function _shouldUseHighPrecision() {\n      var _this$state = this.state,\n          resolution = _this$state.resolution,\n          hasPentagon = _this$state.hasPentagon,\n          hasMultipleRes = _this$state.hasMultipleRes;\n      return this.props.highPrecision || hasMultipleRes || hasPentagon || resolution >= 0 && resolution <= 5;\n    }\n  }, {\n    key: \"_updateVertices\",\n    value: function _updateVertices(viewport) {\n      if (this._shouldUseHighPrecision()) {\n        return;\n      }\n\n      var _this$state2 = this.state,\n          resolution = _this$state2.resolution,\n          edgeLengthKM = _this$state2.edgeLengthKM,\n          centerHex = _this$state2.centerHex;\n\n      if (resolution < 0) {\n        return;\n      }\n\n      var hex = this.props.centerHexagon || (0, _h3Js.geoToH3)(viewport.latitude, viewport.longitude, resolution);\n\n      if (centerHex === hex) {\n        return;\n      }\n\n      if (centerHex) {\n        var distance = (0, _h3Js.h3Distance)(centerHex, hex);\n\n        if (distance >= 0 && distance * edgeLengthKM < UPDATE_THRESHOLD_KM) {\n          return;\n        }\n      }\n\n      var unitsPerMeter = viewport.distanceScales.unitsPerMeter;\n      var vertices = h3ToPolygon(hex);\n\n      var _h3ToGeo5 = (0, _h3Js.h3ToGeo)(hex),\n          _h3ToGeo6 = (0, _slicedToArray2[\"default\"])(_h3ToGeo5, 2),\n          centerLat = _h3ToGeo6[0],\n          centerLng = _h3ToGeo6[1];\n\n      var _viewport$projectFlat = viewport.projectFlat([centerLng, centerLat]),\n          _viewport$projectFlat2 = (0, _slicedToArray2[\"default\"])(_viewport$projectFlat, 2),\n          centerX = _viewport$projectFlat2[0],\n          centerY = _viewport$projectFlat2[1];\n\n      vertices = vertices.map(function (p) {\n        var worldPosition = viewport.projectFlat(p);\n        worldPosition[0] = (worldPosition[0] - centerX) / unitsPerMeter[0];\n        worldPosition[1] = (worldPosition[1] - centerY) / unitsPerMeter[1];\n        return worldPosition;\n      });\n      this.setState({\n        centerHex: hex,\n        vertices: vertices\n      });\n    }\n  }, {\n    key: \"renderLayers\",\n    value: function renderLayers() {\n      return this._shouldUseHighPrecision() ? this._renderPolygonLayer() : this._renderColumnLayer();\n    }\n  }, {\n    key: \"_getForwardProps\",\n    value: function _getForwardProps() {\n      var _this$props = this.props,\n          elevationScale = _this$props.elevationScale,\n          material = _this$props.material,\n          coverage = _this$props.coverage,\n          extruded = _this$props.extruded,\n          wireframe = _this$props.wireframe,\n          stroked = _this$props.stroked,\n          filled = _this$props.filled,\n          lineWidthUnits = _this$props.lineWidthUnits,\n          lineWidthScale = _this$props.lineWidthScale,\n          lineWidthMinPixels = _this$props.lineWidthMinPixels,\n          lineWidthMaxPixels = _this$props.lineWidthMaxPixels,\n          getFillColor = _this$props.getFillColor,\n          getElevation = _this$props.getElevation,\n          getLineColor = _this$props.getLineColor,\n          getLineWidth = _this$props.getLineWidth,\n          updateTriggers = _this$props.updateTriggers;\n      return {\n        elevationScale: elevationScale,\n        extruded: extruded,\n        coverage: coverage,\n        wireframe: wireframe,\n        stroked: stroked,\n        filled: filled,\n        lineWidthUnits: lineWidthUnits,\n        lineWidthScale: lineWidthScale,\n        lineWidthMinPixels: lineWidthMinPixels,\n        lineWidthMaxPixels: lineWidthMaxPixels,\n        material: material,\n        getElevation: getElevation,\n        getFillColor: getFillColor,\n        getLineColor: getLineColor,\n        getLineWidth: getLineWidth,\n        updateTriggers: {\n          getFillColor: updateTriggers.getFillColor,\n          getElevation: updateTriggers.getElevation,\n          getLineColor: updateTriggers.getLineColor,\n          getLineWidth: updateTriggers.getLineWidth\n        }\n      };\n    }\n  }, {\n    key: \"_renderPolygonLayer\",\n    value: function _renderPolygonLayer() {\n      var _this$props2 = this.props,\n          data = _this$props2.data,\n          getHexagon = _this$props2.getHexagon,\n          updateTriggers = _this$props2.updateTriggers,\n          coverage = _this$props2.coverage;\n      var SubLayerClass = this.getSubLayerClass('hexagon-cell-hifi', _layers.PolygonLayer);\n\n      var forwardProps = this._getForwardProps();\n\n      forwardProps.updateTriggers.getPolygon = mergeTriggers(updateTriggers.getHexagon, coverage);\n      return new SubLayerClass(forwardProps, this.getSubLayerProps({\n        id: 'hexagon-cell-hifi',\n        updateTriggers: forwardProps.updateTriggers\n      }), {\n        data: data,\n        _normalize: false,\n        positionFormat: 'XY',\n        getPolygon: function getPolygon(object, objectInfo) {\n          var hexagonId = getHexagon(object, objectInfo);\n          return h3ToPolygon(hexagonId, coverage, true);\n        }\n      });\n    }\n  }, {\n    key: \"_renderColumnLayer\",\n    value: function _renderColumnLayer() {\n      var _this$props3 = this.props,\n          data = _this$props3.data,\n          getHexagon = _this$props3.getHexagon,\n          updateTriggers = _this$props3.updateTriggers;\n      var SubLayerClass = this.getSubLayerClass('hexagon-cell', _layers.ColumnLayer);\n\n      var forwardProps = this._getForwardProps();\n\n      forwardProps.updateTriggers.getPosition = updateTriggers.getHexagon;\n      return new SubLayerClass(forwardProps, this.getSubLayerProps({\n        id: 'hexagon-cell',\n        updateTriggers: forwardProps.updateTriggers\n      }), {\n        data: data,\n        diskResolution: 6,\n        radius: 1,\n        vertices: this.state.vertices,\n        getPosition: getHexagonCentroid.bind(null, getHexagon)\n      });\n    }\n  }]);\n  return H3HexagonLayer;\n}(_core.CompositeLayer);\n\nexports[\"default\"] = H3HexagonLayer;\nH3HexagonLayer.defaultProps = defaultProps;\nH3HexagonLayer.layerName = 'H3HexagonLayer';\n//# sourceMappingURL=h3-hexagon-layer.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","normalizeLongitudes","vertices","refLng","undefined","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","Symbol","iterator","_step","done","next","pt","value","deltaLng","err","scalePolygon","hexId","factor","_h3ToGeo","_h3Js","h3ToGeo","_h3ToGeo2","_slicedToArray2","lat","lng","actualCount","length","vertexCount","i","_math","lerp","getHexagonCentroid","getHexagon","object","objectInfo","hexagonId","_h3ToGeo3","_h3ToGeo4","h3ToPolygon","coverage","arguments","flatten","h3ToGeoBoundary","positions","Float64Array","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","mergeTriggers","trigger","_typeof2","Object","assign","_interopRequireDefault","defineProperty","_classCallCheck2","_createClass2","_possibleConstructorReturn2","_getPrototypeOf2","_inherits2","_core","_layers","defaultProps","PolygonLayer","highPrecision","type","min","max","centerHexagon","x","hexagon","extruded","getLineDashArray","H3HexagonLayer","_CompositeLayer","apply","key","shouldUpdateState","_ref","changeFlags","_shouldUseHighPrecision","propsOrDataChanged","somethingChanged","updateState","_ref2","props","dataChanged","updateTriggers","resolution","hasPentagon","hasMultipleRes","_createIterable","createIterable","data","iterable","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","index","hexResolution","h3GetResolution","h3IsPentagon","setState","edgeLengthKM","edgeLength","UNITS","km","_updateVertices","context","viewport","_this$state","state","_this$state2","centerHex","hex","geoToH3","latitude","longitude","distance","h3Distance","UPDATE_THRESHOLD_KM","unitsPerMeter","distanceScales","_h3ToGeo5","_h3ToGeo6","_viewport$projectFlat","projectFlat","centerLng","centerLat","_viewport$projectFlat2","centerX","centerY","map","p","worldPosition","renderLayers","_renderPolygonLayer","_renderColumnLayer","_getForwardProps","_this$props","elevationScale","wireframe","stroked","filled","lineWidthUnits","lineWidthScale","lineWidthMinPixels","lineWidthMaxPixels","material","getElevation","getFillColor","getLineColor","getLineWidth","_this$props2","SubLayerClass","getSubLayerClass","forwardProps","getPolygon","getSubLayerProps","id","_normalize","positionFormat","_this$props3","ColumnLayer","getPosition","diskResolution","radius","bind","CompositeLayer","layerName"]
}
