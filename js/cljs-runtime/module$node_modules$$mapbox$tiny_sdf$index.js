shadow$provide.module$node_modules$$mapbox$tiny_sdf$index=function(global,require,module,exports){function TinySDF(fontSize,buffer,radius,cutoff,fontFamily,fontWeight){this.fontSize=fontSize||24;this.buffer=void 0===buffer?3:buffer;this.cutoff=cutoff||.25;this.fontFamily=fontFamily||"sans-serif";this.fontWeight=fontWeight||"normal";this.radius=radius||8;fontSize=this.size=this.fontSize+2*this.buffer;this.canvas=document.createElement("canvas");this.canvas.width=this.canvas.height=fontSize;this.ctx=
this.canvas.getContext("2d");this.ctx.font=this.fontWeight+" "+this.fontSize+"px "+this.fontFamily;this.ctx.textBaseline="middle";this.ctx.fillStyle="black";this.gridOuter=new Float64Array(fontSize*fontSize);this.gridInner=new Float64Array(fontSize*fontSize);this.f=new Float64Array(fontSize);this.d=new Float64Array(fontSize);this.z=new Float64Array(fontSize+1);this.v=new Int16Array(fontSize);this.middle=Math.round(fontSize/2*(0<=navigator.userAgent.indexOf("Gecko/")?1.2:1))}function edt(data,width,
height,f,d,v,z){for(var x=0;x<width;x++){for(var y=0;y<height;y++)f[y]=data[y*width+x];edt1d(f,d,v,z,height);for(y=0;y<height;y++)data[y*width+x]=d[y]}for(y=0;y<height;y++){for(x=0;x<width;x++)f[x]=data[y*width+x];edt1d(f,d,v,z,width);for(x=0;x<width;x++)data[y*width+x]=Math.sqrt(d[x])}}function edt1d(f,d,v,z,n){v[0]=0;z[0]=-1E20;z[1]=1E20;for(var q=1,k=0;q<n;q++){for(var s=(f[q]+q*q-(f[v[k]]+v[k]*v[k]))/(2*q-2*v[k]);s<=z[k];)k--,s=(f[q]+q*q-(f[v[k]]+v[k]*v[k]))/(2*q-2*v[k]);k++;v[k]=q;z[k]=s;z[k+
1]=1E20}for(k=q=0;q<n;q++){for(;z[k+1]<q;)k++;d[q]=(q-v[k])*(q-v[k])+f[v[k]]}}module.exports=TinySDF;module.exports.default=TinySDF;TinySDF.prototype.draw=function(char){this.ctx.clearRect(0,0,this.size,this.size);this.ctx.fillText(char,this.buffer,this.middle);char=this.ctx.getImageData(0,0,this.size,this.size);for(var alphaChannel=new Uint8ClampedArray(this.size*this.size),i=0;i<this.size*this.size;i++){var a=char.data[4*i+3]/255;this.gridOuter[i]=1===a?0:0===a?1E20:Math.pow(Math.max(0,.5-a),2);
this.gridInner[i]=1===a?1E20:0===a?0:Math.pow(Math.max(0,a-.5),2)}edt(this.gridOuter,this.size,this.size,this.f,this.d,this.v,this.z);edt(this.gridInner,this.size,this.size,this.f,this.d,this.v,this.z);for(i=0;i<this.size*this.size;i++)alphaChannel[i]=Math.max(0,Math.min(255,Math.round(255-255*((this.gridOuter[i]-this.gridInner[i])/this.radius+this.cutoff))));return alphaChannel}}
//# sourceMappingURL=module$node_modules$$mapbox$tiny_sdf$index.js.map
