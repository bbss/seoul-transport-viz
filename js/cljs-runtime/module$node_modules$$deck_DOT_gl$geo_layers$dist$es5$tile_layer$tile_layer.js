shadow$provide.module$node_modules$$deck_DOT_gl$geo_layers$dist$es5$tile_layer$tile_layer=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard");module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports["default"]=void 0;var _classCallCheck2=module(require("module$node_modules$$babel$runtime$helpers$classCallCheck")),_createClass2=module(require("module$node_modules$$babel$runtime$helpers$createClass")),
_possibleConstructorReturn2=module(require("module$node_modules$$babel$runtime$helpers$possibleConstructorReturn")),_getPrototypeOf2=module(require("module$node_modules$$babel$runtime$helpers$getPrototypeOf")),_inherits2=module(require("module$node_modules$$babel$runtime$helpers$inherits")),_core=require("module$node_modules$$deck_DOT_gl$core$dist$es5$index"),_layers=require("module$node_modules$$deck_DOT_gl$layers$dist$es5$index"),_tileset2d=global(require("module$node_modules$$deck_DOT_gl$geo_layers$dist$es5$tile_layer$tileset_2d")),
_utils=require("module$node_modules$$deck_DOT_gl$geo_layers$dist$es5$tile_layer$utils");require={data:[],dataComparator:_utils.urlType.equals,renderSubLayers:{type:"function",value:function(props){return new _layers.GeoJsonLayer(props)},compare:!1},getTileData:{type:"function",optional:!0,value:null,compare:!1},onViewportLoad:{type:"function",optional:!0,value:null,compare:!1},onTileLoad:{type:"function",value:function(tile){},compare:!1},onTileError:{type:"function",value:function(err){return console.error(err)},
compare:!1},extent:{type:"array",optional:!0,value:null,compare:!0},tileSize:512,maxZoom:null,minZoom:0,maxCacheSize:null,maxCacheByteSize:null,refinementStrategy:_tileset2d.STRATEGY_DEFAULT,zRange:null,throttleRequests:!0,maxRequests:8};global=function(_CompositeLayer){function TileLayer(){(0,_classCallCheck2["default"])(this,TileLayer);return(0,_possibleConstructorReturn2["default"])(this,(0,_getPrototypeOf2["default"])(TileLayer).apply(this,arguments))}(0,_inherits2["default"])(TileLayer,_CompositeLayer);
(0,_createClass2["default"])(TileLayer,[{key:"initializeState",value:function(){this.state={tiles:[],isLoaded:!1}}},{key:"shouldUpdateState",value:function(_ref){return _ref.changeFlags.somethingChanged}},{key:"updateState",value:function(_ref2){var props=_ref2.props;_ref2=_ref2.changeFlags;var tileset=this.state.tileset;if(!tileset||_ref2.dataChanged||_ref2.updateTriggersChanged&&(_ref2.updateTriggersChanged.all||_ref2.updateTriggersChanged.getTileData)){_ref2=props.maxZoom;tileset=props.minZoom;
var tileSize=props.tileSize,maxCacheSize=props.maxCacheSize,maxCacheByteSize=props.maxCacheByteSize,refinementStrategy=props.refinementStrategy,extent=props.extent,throttleRequests=props.throttleRequests;props=props.maxRequests;tileset=new _tileset2d["default"]({getTileData:this.getTileData.bind(this),maxCacheSize:maxCacheSize,maxCacheByteSize:maxCacheByteSize,maxZoom:_ref2,minZoom:tileset,tileSize:tileSize,refinementStrategy:refinementStrategy,extent:extent,onTileLoad:this._onTileLoad.bind(this),
onTileError:this._onTileError.bind(this),throttleRequests:throttleRequests,maxRequests:props});this.setState({tileset:tileset})}else if(_ref2.propsChanged||_ref2.updateTriggersChanged)tileset.setOptions(props),this.state.tileset.tiles.forEach(function(tile){tile.layers=null});this._updateTileset()}},{key:"_updateTileset",value:function(){var tileset=this.state.tileset,_this$props=this.props,onViewportLoad=_this$props.onViewportLoad;_this$props=tileset.update(this.context.viewport,{zRange:_this$props.zRange});
var isLoaded=tileset.isLoaded,loadingStateChanged=this.state.isLoaded!==isLoaded,tilesetChanged=this.state.frameNumber!==_this$props;isLoaded&&onViewportLoad&&(loadingStateChanged||tilesetChanged)&&onViewportLoad(tileset.selectedTiles.map(function(tile){return tile.data}));tilesetChanged&&this.setState({frameNumber:_this$props});this.state.isLoaded=isLoaded}},{key:"_onTileLoad",value:function(tile){this.getCurrentLayer().props.onTileLoad(tile);tile.isVisible&&this.setNeedsUpdate()}},{key:"_onTileError",
value:function(error,tile){var layer=this.getCurrentLayer();layer.props.onTileError(error);layer._updateTileset();tile.isVisible&&this.setNeedsUpdate()}},{key:"getTileData",value:function(tile){var _this$props2=this.props,getTileData=_this$props2.getTileData,fetch=_this$props2.fetch;_this$props2=_this$props2.data;tile.url=(0,_utils.getURLFromTemplate)(_this$props2,tile);return getTileData?getTileData(tile):tile.url?fetch(tile.url,{layer:this}):null}},{key:"renderSubLayers",value:function(props){return this.props.renderSubLayers(props)}},
{key:"getHighlightedObjectIndex",value:function(){return-1}},{key:"getPickingInfo",value:function(_ref3){var info=_ref3.info;_ref3=_ref3.sourceLayer;info.sourceLayer=_ref3;info.tile=_ref3.props.tile;return info}},{key:"renderLayers",value:function(){var _this=this,visible=this.props.visible;return this.state.tileset.tiles.map(function(tile){var isVisible=visible&&tile.isVisible,highlightedObjectIndex=_this.getHighlightedObjectIndex(tile);if(tile.isLoaded)if(tile.layers)!tile.layers[0]||tile.layers[0].props.visible===
isVisible&&tile.layers[0].props.highlightedObjectIndex===highlightedObjectIndex||(tile.layers=tile.layers.map(function(layer){return layer.clone({visible:isVisible,highlightedObjectIndex:highlightedObjectIndex})}));else{var layers=_this.renderSubLayers(Object.assign({},_this.props,{id:"".concat(_this.id,"-").concat(tile.x,"-").concat(tile.y,"-").concat(tile.z),data:tile.data,visible:isVisible,_offset:0,tile:tile,highlightedObjectIndex:highlightedObjectIndex}));tile.layers=(0,_core._flatten)(layers,
Boolean)}return tile.layers})}},{key:"isLoaded",get:function(){return this.state.tileset.selectedTiles.every(function(tile){return tile.layers&&tile.layers.every(function(layer){return layer.isLoaded})})}}]);return TileLayer}(_core.CompositeLayer);exports["default"]=global;global.layerName="TileLayer";global.defaultProps=require}
//# sourceMappingURL=module$node_modules$$deck_DOT_gl$geo_layers$dist$es5$tile_layer$tile_layer.js.map
