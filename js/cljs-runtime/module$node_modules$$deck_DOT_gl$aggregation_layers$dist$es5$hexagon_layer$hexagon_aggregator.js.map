{
"version":3,
"file":"module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$hexagon_layer$hexagon_aggregator.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/@deck_DOT_gl/aggregation-layers/dist/es5/hexagon-layer/hexagon-aggregator.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$hexagon_layer$hexagon_aggregator\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pointToHexbin = pointToHexbin;\nexports.getPointsCenter = getPointsCenter;\nexports.getRadiusInCommon = getRadiusInCommon;\n\nvar _d3Hexbin = require(\"d3-hexbin\");\n\nvar _core = require(\"@deck.gl/core\");\n\nfunction pointToHexbin(props, aggregationParams) {\n  var data = props.data,\n      radius = props.radius;\n  var viewport = aggregationParams.viewport,\n      attributes = aggregationParams.attributes;\n  var centerLngLat = data.length ? getPointsCenter(data, aggregationParams) : null;\n  var radiusCommon = getRadiusInCommon(radius, viewport, centerLngLat);\n  var screenPoints = [];\n\n  var _createIterable = (0, _core.createIterable)(data),\n      iterable = _createIterable.iterable,\n      objectInfo = _createIterable.objectInfo;\n\n  var positions = attributes.positions.value;\n\n  var _attributes$positions = attributes.positions.getAccessor(),\n      size = _attributes$positions.size;\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = iterable[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var object = _step.value;\n      objectInfo.index++;\n      var posIndex = objectInfo.index * size;\n      var position = [positions[posIndex], positions[posIndex + 1]];\n      var arrayIsFinite = Number.isFinite(position[0]) && Number.isFinite(position[1]);\n\n      if (arrayIsFinite) {\n        screenPoints.push(Object.assign({\n          screenCoord: viewport.projectFlat(position)\n        }, object));\n      } else {\n        _core.log.warn('HexagonLayer: invalid position')();\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n        _iterator[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var newHexbin = (0, _d3Hexbin.hexbin)().radius(radiusCommon).x(function (d) {\n    return d.screenCoord[0];\n  }).y(function (d) {\n    return d.screenCoord[1];\n  });\n  var hexagonBins = newHexbin(screenPoints);\n  return {\n    hexagons: hexagonBins.map(function (hex, index) {\n      return {\n        position: viewport.unprojectFlat([hex.x, hex.y]),\n        points: hex,\n        index: index\n      };\n    }),\n    radiusCommon: radiusCommon\n  };\n}\n\nfunction getPointsCenter(data, aggregationParams) {\n  var attributes = aggregationParams.attributes;\n  var positions = attributes.positions.value;\n\n  var _attributes$positions2 = attributes.positions.getAccessor(),\n      size = _attributes$positions2.size;\n\n  var minX = Infinity;\n  var minY = Infinity;\n  var maxX = -Infinity;\n  var maxY = -Infinity;\n  var i;\n\n  for (i = 0; i < size * data.length; i += size) {\n    var x = positions[i];\n    var y = positions[i + 1];\n    var arrayIsFinite = Number.isFinite(x) && Number.isFinite(y);\n\n    if (arrayIsFinite) {\n      minX = Math.min(x, minX);\n      maxX = Math.max(x, maxX);\n      minY = Math.min(y, minY);\n      maxY = Math.max(y, maxY);\n    }\n  }\n\n  return [minX, minY, maxX, maxY].every(Number.isFinite) ? [(minX + maxX) / 2, (minY + maxY) / 2] : null;\n}\n\nfunction getRadiusInCommon(radius, viewport, center) {\n  var _viewport$getDistance = viewport.getDistanceScales(center),\n      unitsPerMeter = _viewport$getDistance.unitsPerMeter;\n\n  return radius * unitsPerMeter[0];\n}\n//# sourceMappingURL=hexagon-aggregator.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","getPointsCenter","data","aggregationParams","attributes","positions","value","size","getAccessor","_attributes$positions2","minX","Infinity","minY","maxX","maxY","i","length","x","y","Number","isFinite","Math","min","max","every","getRadiusInCommon","radius","viewport","center","unitsPerMeter","getDistanceScales","_viewport$getDistance","Object","defineProperty","pointToHexbin","props","centerLngLat","radiusCommon","screenPoints","_createIterable","_core","createIterable","iterable","objectInfo","_attributes$positions","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iterator","Symbol","iterator","_step","done","next","object","index","posIndex","position","push","assign","screenCoord","projectFlat","log","warn","err","hexagons","_d3Hexbin","hexbin","d","newHexbin","hexagonBins","map","hex","unprojectFlat","points"]
}
