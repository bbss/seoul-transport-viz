{
"version":3,
"file":"module$node_modules$$deck_DOT_gl$layers$dist$es5$solid_polygon_layer$polygon.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/@deck_DOT_gl/layers/dist/es5/solid-polygon-layer/polygon.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$deck_DOT_gl$layers$dist$es5$solid_polygon_layer$polygon\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.normalize = normalize;\nexports.getSurfaceIndices = getSurfaceIndices;\n\nvar _earcut = _interopRequireDefault(require(\"earcut\"));\n\nfunction validate(polygon) {\n  polygon = polygon && polygon.positions || polygon;\n\n  if (!Array.isArray(polygon) && !ArrayBuffer.isView(polygon)) {\n    throw new Error('invalid polygon');\n  }\n}\n\nfunction isSimple(polygon) {\n  return polygon.length >= 1 && polygon[0].length >= 2 && Number.isFinite(polygon[0][0]);\n}\n\nfunction isNestedRingClosed(simplePolygon) {\n  var p0 = simplePolygon[0];\n  var p1 = simplePolygon[simplePolygon.length - 1];\n  return p0[0] === p1[0] && p0[1] === p1[1] && p0[2] === p1[2];\n}\n\nfunction isFlatRingClosed(positions, size, startIndex, endIndex) {\n  for (var i = 0; i < size; i++) {\n    if (positions[startIndex + i] !== positions[endIndex - size + i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction copyNestedRing(target, targetStartIndex, simplePolygon, size) {\n  var targetIndex = targetStartIndex;\n  var len = simplePolygon.length;\n\n  for (var i = 0; i < len; i++) {\n    for (var j = 0; j < size; j++) {\n      target[targetIndex++] = simplePolygon[i][j] || 0;\n    }\n  }\n\n  if (!isNestedRingClosed(simplePolygon)) {\n    for (var _j = 0; _j < size; _j++) {\n      target[targetIndex++] = simplePolygon[0][_j] || 0;\n    }\n  }\n\n  return targetIndex;\n}\n\nfunction copyFlatRing(target, targetStartIndex, positions, size) {\n  var srcStartIndex = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n  var srcEndIndex = arguments.length > 5 ? arguments[5] : undefined;\n  srcEndIndex = srcEndIndex || positions.length;\n  var srcLength = srcEndIndex - srcStartIndex;\n\n  if (srcLength <= 0) {\n    return targetStartIndex;\n  }\n\n  var targetIndex = targetStartIndex;\n\n  for (var i = 0; i < srcLength; i++) {\n    target[targetIndex++] = positions[srcStartIndex + i];\n  }\n\n  if (!isFlatRingClosed(positions, size, srcStartIndex, srcEndIndex)) {\n    for (var _i = 0; _i < size; _i++) {\n      target[targetIndex++] = positions[srcStartIndex + _i];\n    }\n  }\n\n  return targetIndex;\n}\n\nfunction normalize(polygon, positionSize) {\n  validate(polygon);\n  var positions = [];\n  var holeIndices = [];\n\n  if (polygon.positions) {\n    var _polygon = polygon,\n        srcPositions = _polygon.positions,\n        srcHoleIndices = _polygon.holeIndices;\n\n    if (srcHoleIndices) {\n      var targetIndex = 0;\n\n      for (var i = 0; i <= srcHoleIndices.length; i++) {\n        targetIndex = copyFlatRing(positions, targetIndex, srcPositions, positionSize, srcHoleIndices[i - 1], srcHoleIndices[i]);\n        holeIndices.push(targetIndex);\n      }\n\n      holeIndices.pop();\n      return {\n        positions: positions,\n        holeIndices: holeIndices\n      };\n    }\n\n    polygon = srcPositions;\n  }\n\n  if (Number.isFinite(polygon[0])) {\n    copyFlatRing(positions, 0, polygon, positionSize);\n    return positions;\n  }\n\n  if (!isSimple(polygon)) {\n    var _targetIndex = 0;\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = polygon[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var simplePolygon = _step.value;\n        _targetIndex = copyNestedRing(positions, _targetIndex, simplePolygon, positionSize);\n        holeIndices.push(_targetIndex);\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n          _iterator[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    holeIndices.pop();\n    return {\n      positions: positions,\n      holeIndices: holeIndices\n    };\n  }\n\n  copyNestedRing(positions, 0, polygon, positionSize);\n  return positions;\n}\n\nfunction getSurfaceIndices(normalizedPolygon, positionSize, preproject) {\n  var holeIndices = null;\n\n  if (normalizedPolygon.holeIndices) {\n    holeIndices = normalizedPolygon.holeIndices.map(function (positionIndex) {\n      return positionIndex / positionSize;\n    });\n  }\n\n  var positions = normalizedPolygon.positions || normalizedPolygon;\n\n  if (preproject) {\n    var n = positions.length;\n    positions = positions.slice();\n    var p = [];\n\n    for (var i = 0; i < n; i += positionSize) {\n      p[0] = positions[i];\n      p[1] = positions[i + 1];\n      var xy = preproject(p);\n      positions[i] = xy[0];\n      positions[i + 1] = xy[1];\n    }\n  }\n\n  return (0, _earcut[\"default\"])(positions, holeIndices, positionSize);\n}\n//# sourceMappingURL=polygon.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","copyNestedRing","target","targetStartIndex","simplePolygon","size","len","length","i","j","targetIndex","p0","p1","_j","copyFlatRing","positions","srcStartIndex","arguments","undefined","srcEndIndex","srcLength","_i","_interopRequireDefault","Object","defineProperty","value","normalize","polygon","positionSize","Array","isArray","ArrayBuffer","isView","Error","holeIndices","_polygon","srcPositions","srcHoleIndices","push","pop","Number","isFinite","_targetIndex","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","Symbol","iterator","done","_step","next","err","getSurfaceIndices","normalizedPolygon","preproject","map","positionIndex","n","slice","p","xy","_earcut"]
}
