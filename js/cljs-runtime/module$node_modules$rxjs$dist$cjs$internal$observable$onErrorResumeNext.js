shadow$provide.module$node_modules$rxjs$dist$cjs$internal$observable$onErrorResumeNext=function(global,require,module,exports){function onErrorResumeNext(){for(var sources=[],_i=0;_i<arguments.length;_i++)sources[_i]=arguments[_i];if(0===sources.length)return empty_1.EMPTY;var first=sources[0],remainder=sources.slice(1);return 1===sources.length&&isArray_1.isArray(first)?onErrorResumeNext.apply(void 0,first):new Observable_1.Observable(function(subscriber){var subNext=function(){return subscriber.add(onErrorResumeNext.apply(void 0,
remainder).subscribe(subscriber))};return from_1.from(first).subscribe({next:function(value){subscriber.next(value)},error:subNext,complete:subNext})})}Object.defineProperty(exports,"__esModule",{value:!0});exports.onErrorResumeNext=void 0;var Observable_1=require("module$node_modules$rxjs$dist$cjs$internal$Observable"),from_1=require("module$node_modules$rxjs$dist$cjs$internal$observable$from"),isArray_1=require("module$node_modules$rxjs$dist$cjs$internal$util$isArray"),empty_1=require("module$node_modules$rxjs$dist$cjs$internal$observable$empty");
exports.onErrorResumeNext=onErrorResumeNext}
//# sourceMappingURL=module$node_modules$rxjs$dist$cjs$internal$observable$onErrorResumeNext.js.map
