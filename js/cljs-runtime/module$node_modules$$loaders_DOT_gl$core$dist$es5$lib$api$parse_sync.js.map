{
"version":3,
"file":"module$node_modules$$loaders_DOT_gl$core$dist$es5$lib$api$parse_sync.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,qEAAA,CAAyF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAkBjIC,QAASA,UAAS,CAACC,IAAD,CAAOC,OAAP,CAAgBC,OAAhB,CAAyBC,OAAzB,CAAkC,CAC7CC,KAAAC,QAAA,CAAcJ,OAAd,CAAL,EAAgC,CAAC,CAAA,CAAGK,gBAAAC,eAAJ,EAAqCN,OAArC,CAAhC,GACEE,OAEA,CAFUD,OAEV,CADAA,OACA,CADUD,OACV,CAAAA,OAAA,CAAU,IAHZ,CAMA,KAAIO,IAAM,EAEa,SAAvB,GAAI,MAAOL,QAAX,GACEK,GACA,CADML,OACN,CAAAA,OAAA,CAAU,IAFZ,CAKAD,QAAA,CAAUA,OAAV,EAAqB,EACrB,KAAIO,iBAAmB,CAAC,CAAA,CAAGC,iBAAAC,WAAJ,EAAkCV,OAAlC,CAA2CE,OAA3C,CACnBS,iBAAAA,CAAS,CAAC,CAAA,CAAGC,aAAAC,aAAJ,EAAgCd,IAAhC,CAAsCS,gBAAtC;AAAwDP,OAAxD,CAAiE,CAC5EM,IAAKA,GADuE,CAAjE,CAIb,IAAI,CAACI,gBAAL,CACE,MAAO,KAGTV,QAAA,CAAU,CAAC,CAAA,CAAGa,aAAAC,aAAJ,EAAgCJ,gBAAhC,CAAwCV,OAAxC,CAAiDM,GAAjD,CACVL,QAAA,CAAU,CAAC,CAAA,CAAGO,iBAAAO,iBAAJ,EAAwC,CAChDT,IAAKA,GAD2C,CAEhDT,UAAWA,SAFqC,CAGhDE,QAASA,OAHuC,CAAxC,CAIPC,OAJO,CASVF,KAAA,CAAO,CAAC,CAAA,CAAGkB,QAAAC,mCAAJ,EAAiDnB,IAAjD,CAJoBY,gBAIpB,CAEP,IAN2BA,gBAMvBQ,cAAJ,EAA4C,QAA5C,GAA4B,MAAOpB,KAAnC,CACE,gBAAA,CAPyBY,gBAOlBQ,cAAA,CAAqBpB,IAArB,CAA2BE,OAA3B,CAAoCC,OAApC,CAPkBS,gBAOlB,CADT,KAIA,IAV2BA,gBAUvBb,UAAJ,CACE,gBAAA,CAXyBa,gBAWlBb,UAAA,CAAiBC,IAAjB;AAAuBE,OAAvB,CAAgCC,OAAhC,CAXkBS,gBAWlB,CADT,KAIA,MAAUS,MAAJ,CAAU,EAAAC,OAAA,CAdWV,gBAcDW,KAAV,CAAuB,0EAAvB,CAAAD,OAAA,CAA0GnB,OAAAK,IAA1G,EAAyH,EAAzH,CAAV,CAAN,CAdA,MAAO,iBA9B2C,CAfpDgB,MAAAC,eAAA,CAAsB3B,OAAtB,CAA+B,YAA/B,CAA6C,CAC3C4B,MAAO,CAAA,CADoC,CAA7C,CAGA5B,QAAAC,UAAA,CAAoBA,SAEpB,KAAIc,cAAgBjB,OAAA,CAAQ,yEAAR,CAApB,CAEIU,iBAAmBV,OAAA,CAAQ,qFAAR,CAFvB;AAIImB,cAAgBnB,OAAA,CAAQ,kFAAR,CAJpB,CAMIsB,SAAWtB,OAAA,CAAQ,6EAAR,CANf,CAQIc,kBAAoBd,OAAA,CAAQ,uFAAR,CAhByG;",
"sources":["node_modules/@loaders_DOT_gl/core/dist/es5/lib/api/parse-sync.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$loaders_DOT_gl$core$dist$es5$lib$api$parse_sync\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseSync = parseSync;\n\nvar _selectLoader = require(\"./select-loader\");\n\nvar _normalizeLoader = require(\"../loader-utils/normalize-loader\");\n\nvar _mergeOptions = require(\"../loader-utils/merge-options\");\n\nvar _getData = require(\"../loader-utils/get-data\");\n\nvar _getLoaderContext = require(\"../loader-utils/get-loader-context\");\n\nfunction parseSync(data, loaders, options, context) {\n  if (!Array.isArray(loaders) && !(0, _normalizeLoader.isLoaderObject)(loaders)) {\n    context = options;\n    options = loaders;\n    loaders = null;\n  }\n\n  var url = '';\n\n  if (typeof context === 'string') {\n    url = context;\n    context = null;\n  }\n\n  options = options || {};\n  var candidateLoaders = (0, _getLoaderContext.getLoaders)(loaders, context);\n  var loader = (0, _selectLoader.selectLoader)(data, candidateLoaders, options, {\n    url: url\n  });\n\n  if (!loader) {\n    return null;\n  }\n\n  options = (0, _mergeOptions.mergeOptions)(loader, options, url);\n  context = (0, _getLoaderContext.getLoaderContext)({\n    url: url,\n    parseSync: parseSync,\n    loaders: loaders\n  }, options);\n  return parseWithLoaderSync(loader, data, options, context);\n}\n\nfunction parseWithLoaderSync(loader, data, options, context) {\n  data = (0, _getData.getArrayBufferOrStringFromDataSync)(data, loader);\n\n  if (loader.parseTextSync && typeof data === 'string') {\n    return loader.parseTextSync(data, options, context, loader);\n  }\n\n  if (loader.parseSync) {\n    return loader.parseSync(data, options, context, loader);\n  }\n\n  throw new Error(\"\".concat(loader.name, \" loader: 'parseSync' not supported by this loader, use 'parse' instead. \").concat(context.url || ''));\n}\n//# sourceMappingURL=parse-sync.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","parseSync","data","loaders","options","context","Array","isArray","_normalizeLoader","isLoaderObject","url","candidateLoaders","_getLoaderContext","getLoaders","loader","_selectLoader","selectLoader","_mergeOptions","mergeOptions","getLoaderContext","_getData","getArrayBufferOrStringFromDataSync","parseTextSync","Error","concat","name","Object","defineProperty","value"]
}
