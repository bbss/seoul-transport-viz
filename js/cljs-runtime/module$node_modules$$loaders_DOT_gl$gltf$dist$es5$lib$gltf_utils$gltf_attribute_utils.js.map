{
"version":3,
"file":"module$node_modules$$loaders_DOT_gl$gltf$dist$es5$lib$gltf_utils$gltf_attribute_utils.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,sFAAA,CAA0G,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA2BlJC,QAASA,gBAAe,CAACC,SAAD,CAAYC,iBAAZ,CAA+B,CAAA,IAuBjDC,OAtBmCF,SAuBnCG,KAAAA,mCAAO,CACPC,kBAAAA,CAAQ,CAxB2BJ,UA0BvC,EA1BuCA,SA0BtBK,MAAjB,GACEH,MACA,CA5BqCF,SA2B5BK,MACT,CAAAF,kCAAA,CA5BqCH,SA4B9BG,KAAP,EAAyB,CAF3B,CAKID,OAAJ,GACOI,WAAAC,OAAA,CAAmBL,MAAnB,CAIL,GAHEA,MAGF,CAHWM,YAAA,CAAaN,MAAb,CAAqBO,YAArB,CAGX,EAAAL,iBAAA,CAAQF,MAAAQ,OAAR,CAAwBP,kCAL1B,CAQA;SAAA,CACUD,MA1BV,OATmBS,CACjBN,MALWH,SAIMS,CAEjBR,KALSA,kCAGQQ,CAGjBC,WAAY,IAHKD,CAIjBE,WAAY,CAJKF,CAKjBP,MAgCOA,iBArCUO,CAMjBG,KAAM,CAAC,CAAA,CAAGC,UAAAC,wBAAJ,EATGb,kCASH,CANWQ,CAOjBM,cAAe,CAAC,CAAA,CAAGF,UAAAG,0BAAJ,EAXJhB,SAWI,CAPES,CANkC,CA+CvDH,QAASA,aAAY,CAACW,KAAD,CAAQC,SAAR,CAAmB,CACtC,IAAIC,mBAAwC,CAAnB,CAAAC,SAAAZ,OAAA,EAAyCa,IAAAA,EAAzC,GAAwBD,SAAA,CAAU,CAAV,CAAxB,CAAqDA,SAAA,CAAU,CAAV,CAArD,CAAoE,CAAA,CAE7F,OAAKH,MAAL,CAIIK,KAAAC,QAAA,CAAcN,KAAd,CAIJ,EAAIE,kBAAJ,EAA0B,EAAEF,KAAF,WAAmBC,UAAnB,CAA1B,CACS,IAAIA,SAAJ,CAAcD,KAAd,CADT;AAIOA,KAZP,CACS,IAJ6B,CAvExCO,MAAAC,eAAA,CAAsB7B,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CO,MAAO,CAAA,CADoC,CAA7C,CAGAP,QAAA8B,iBAAA,CAMAA,QAAyB,CAACC,UAAD,CAAa,CACpC,IAAIC,UAAY,EAAhB,CAESC,IAAT,KAASA,IAAT,GAAiBF,WAAjB,CAA6B,CAC3B,IAAI7B,UAAY6B,UAAA,CAAWE,IAAX,CAEH,UAAb,GAAIA,IAAJ,GACMpB,SACJ,CADmBZ,eAAA,CAAgBC,SAAhB,CACnB,CAAA8B,SAAA,CAAUC,IAAV,CAAA,CAAkBpB,SAFpB,CAH2B,CAS7B,MAAOmB,UAZ6B,CALtChC,QAAAC,gBAAA,CAA0BA,eAC1BD,QAAAkC,iBAAA,CAqCAA,QAAyB,CAACC,IAAD,CAAOhC,iBAAP,CAA0B,CACjD,MAAOgC,KAAAJ,WAAA,CAAgBI,IAAAC,iBAAA,CAAsBjC,iBAAtB,CAAhB,CAD0C,CAnCnD,KAAIc,WAAanB,OAAA,CAAQ,6EAAR,CAViI;",
"sources":["node_modules/@loaders_DOT_gl/gltf/dist/es5/lib/gltf-utils/gltf-attribute-utils.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$loaders_DOT_gl$gltf$dist$es5$lib$gltf_utils$gltf_attribute_utils\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getGLTFAccessors = getGLTFAccessors;\nexports.getGLTFAccessor = getGLTFAccessor;\nexports.getGLTFAttribute = getGLTFAttribute;\n\nvar _gltfUtils = require(\"./gltf-utils\");\n\nfunction getGLTFAccessors(attributes) {\n  var accessors = {};\n\n  for (var name in attributes) {\n    var attribute = attributes[name];\n\n    if (name !== 'indices') {\n      var glTFAccessor = getGLTFAccessor(attribute);\n      accessors[name] = glTFAccessor;\n    }\n  }\n\n  return accessors;\n}\n\nfunction getGLTFAccessor(attribute, gltfAttributeName) {\n  var _getAccessorData = getAccessorData(attribute, gltfAttributeName),\n      buffer = _getAccessorData.buffer,\n      size = _getAccessorData.size,\n      count = _getAccessorData.count;\n\n  var glTFAccessor = {\n    value: buffer,\n    size: size,\n    bufferView: null,\n    byteOffset: 0,\n    count: count,\n    type: (0, _gltfUtils.getAccessorTypeFromSize)(size),\n    componentType: (0, _gltfUtils.getComponentTypeFromArray)(buffer)\n  };\n  return glTFAccessor;\n}\n\nfunction getGLTFAttribute(data, gltfAttributeName) {\n  return data.attributes[data.glTFAttributeMap[gltfAttributeName]];\n}\n\nfunction getAccessorData(attribute, attributeName) {\n  var buffer = attribute;\n  var size = 1;\n  var count = 0;\n\n  if (attribute && attribute.value) {\n    buffer = attribute.value;\n    size = attribute.size || 1;\n  }\n\n  if (buffer) {\n    if (!ArrayBuffer.isView(buffer)) {\n      buffer = toTypedArray(buffer, Float32Array);\n    }\n\n    count = buffer.length / size;\n  }\n\n  return {\n    buffer: buffer,\n    size: size,\n    count: count\n  };\n}\n\nfunction toTypedArray(array, ArrayType) {\n  var convertTypedArrays = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  if (!array) {\n    return null;\n  }\n\n  if (Array.isArray(array)) {\n    return new ArrayType(array);\n  }\n\n  if (convertTypedArrays && !(array instanceof ArrayType)) {\n    return new ArrayType(array);\n  }\n\n  return array;\n}\n//# sourceMappingURL=gltf-attribute-utils.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","getGLTFAccessor","attribute","gltfAttributeName","buffer","size","count","value","ArrayBuffer","isView","toTypedArray","Float32Array","length","glTFAccessor","bufferView","byteOffset","type","_gltfUtils","getAccessorTypeFromSize","componentType","getComponentTypeFromArray","array","ArrayType","convertTypedArrays","arguments","undefined","Array","isArray","Object","defineProperty","getGLTFAccessors","attributes","accessors","name","getGLTFAttribute","data","glTFAttributeMap"]
}
