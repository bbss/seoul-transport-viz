shadow$provide.module$node_modules$$deck_DOT_gl$layers$dist$es5$solid_polygon_layer$polygon=function(global,require,module,exports){function copyNestedRing(target,targetStartIndex,simplePolygon,size){for(var len=simplePolygon.length,i=0;i<len;i++)for(var j=0;j<size;j++)target[targetStartIndex++]=simplePolygon[i][j]||0;len=simplePolygon[0];i=simplePolygon[simplePolygon.length-1];if(len[0]!==i[0]||len[1]!==i[1]||len[2]!==i[2])for(len=0;len<size;len++)target[targetStartIndex++]=simplePolygon[0][len]||
0;return targetStartIndex}function copyFlatRing(target,targetStartIndex,positions,size){var srcStartIndex=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,srcEndIndex=5<arguments.length?arguments[5]:void 0;srcEndIndex=srcEndIndex||positions.length;var srcLength=srcEndIndex-srcStartIndex;if(0>=srcLength)return targetStartIndex;for(var targetIndex=targetStartIndex,i=0;i<srcLength;i++)target[targetIndex++]=positions[srcStartIndex+i];a:{for(srcLength=0;srcLength<size;srcLength++)if(positions[srcStartIndex+
srcLength]!==positions[srcEndIndex-size+srcLength]){srcEndIndex=!1;break a}srcEndIndex=!0}if(!srcEndIndex)for(srcEndIndex=0;srcEndIndex<size;srcEndIndex++)target[targetIndex++]=positions[srcStartIndex+srcEndIndex];return targetIndex}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.normalize=function(polygon$jscomp$0,positionSize){var polygon=polygon$jscomp$0;polygon=polygon&&polygon.positions||polygon;
if(!Array.isArray(polygon)&&!ArrayBuffer.isView(polygon))throw Error("invalid polygon");polygon=[];var holeIndices=[];if(polygon$jscomp$0.positions){var _polygon=polygon$jscomp$0;polygon$jscomp$0=_polygon.positions;if(_polygon=_polygon.holeIndices){for(var targetIndex=0,i=0;i<=_polygon.length;i++)targetIndex=copyFlatRing(polygon,targetIndex,polygon$jscomp$0,positionSize,_polygon[i-1],_polygon[i]),holeIndices.push(targetIndex);holeIndices.pop();return{positions:polygon,holeIndices:holeIndices}}}if(Number.isFinite(polygon$jscomp$0[0]))return copyFlatRing(polygon,
0,polygon$jscomp$0,positionSize),polygon;if(!(1<=polygon$jscomp$0.length&&2<=polygon$jscomp$0[0].length&&Number.isFinite(polygon$jscomp$0[0][0]))){_polygon=0;var _iteratorNormalCompletion=!0,_didIteratorError=!1,_iteratorError=void 0;try{for(targetIndex=polygon$jscomp$0[Symbol.iterator]();!(_iteratorNormalCompletion=(i=targetIndex.next()).done);_iteratorNormalCompletion=!0)_polygon=copyNestedRing(polygon,_polygon,i.value,positionSize),holeIndices.push(_polygon)}catch(err){_didIteratorError=!0,_iteratorError=
err}finally{try{if(!_iteratorNormalCompletion&&null!=targetIndex["return"])targetIndex["return"]()}finally{if(_didIteratorError)throw _iteratorError;}}holeIndices.pop();return{positions:polygon,holeIndices:holeIndices}}copyNestedRing(polygon,0,polygon$jscomp$0,positionSize);return polygon};exports.getSurfaceIndices=function(normalizedPolygon,positionSize,preproject){var holeIndices=null;normalizedPolygon.holeIndices&&(holeIndices=normalizedPolygon.holeIndices.map(function(positionIndex){return positionIndex/
positionSize}));normalizedPolygon=normalizedPolygon.positions||normalizedPolygon;if(preproject){var n=normalizedPolygon.length;normalizedPolygon=normalizedPolygon.slice();for(var p=[],i=0;i<n;i+=positionSize){p[0]=normalizedPolygon[i];p[1]=normalizedPolygon[i+1];var xy=preproject(p);normalizedPolygon[i]=xy[0];normalizedPolygon[i+1]=xy[1]}}return(0,_earcut["default"])(normalizedPolygon,holeIndices,positionSize)};var _earcut=global(require("module$node_modules$earcut$src$earcut"))}
//# sourceMappingURL=module$node_modules$$deck_DOT_gl$layers$dist$es5$solid_polygon_layer$polygon.js.map
