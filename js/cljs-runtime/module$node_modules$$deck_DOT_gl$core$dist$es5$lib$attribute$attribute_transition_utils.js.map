{
"version":3,
"file":"module$node_modules$$deck_DOT_gl$core$dist$es5$lib$attribute$attribute_transition_utils.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/@deck_DOT_gl/core/dist/es5/lib/attribute/attribute-transition-utils.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$deck_DOT_gl$core$dist$es5$lib$attribute$attribute_transition_utils\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.normalizeTransitionSettings = normalizeTransitionSettings;\nexports.getSourceBufferAttribute = getSourceBufferAttribute;\nexports.getAttributeTypeFromSize = getAttributeTypeFromSize;\nexports.cycleBuffers = cycleBuffers;\nexports.getAttributeBufferLength = getAttributeBufferLength;\nexports.padBuffer = padBuffer;\n\nvar _arrayUtils = require(\"../../utils/array-utils\");\n\nvar DEFAULT_TRANSITION_SETTINGS = {\n  interpolation: {\n    duration: 0,\n    easing: function easing(t) {\n      return t;\n    }\n  },\n  spring: {\n    stiffness: 0.05,\n    damping: 0.5\n  }\n};\n\nfunction normalizeTransitionSettings(userSettings, layerSettings) {\n  if (!userSettings) {\n    return null;\n  }\n\n  if (Number.isFinite(userSettings)) {\n    userSettings = {\n      duration: userSettings\n    };\n  }\n\n  userSettings.type = userSettings.type || 'interpolation';\n  return Object.assign({}, DEFAULT_TRANSITION_SETTINGS[userSettings.type], layerSettings, userSettings);\n}\n\nfunction getSourceBufferAttribute(gl, attribute) {\n  var buffer = attribute.getBuffer();\n\n  if (buffer) {\n    return [attribute.getBuffer(), {\n      divisor: 0,\n      size: attribute.size,\n      normalized: attribute.settings.normalized\n    }];\n  }\n\n  return attribute.value;\n}\n\nfunction getAttributeTypeFromSize(size) {\n  switch (size) {\n    case 1:\n      return 'float';\n\n    case 2:\n      return 'vec2';\n\n    case 3:\n      return 'vec3';\n\n    case 4:\n      return 'vec4';\n\n    default:\n      throw new Error(\"No defined attribute type for size \\\"\".concat(size, \"\\\"\"));\n  }\n}\n\nfunction cycleBuffers(buffers) {\n  buffers.push(buffers.shift());\n}\n\nfunction getAttributeBufferLength(attribute, numInstances) {\n  var doublePrecision = attribute.doublePrecision,\n      settings = attribute.settings,\n      value = attribute.value,\n      size = attribute.size;\n  var multiplier = doublePrecision ? 2 : 1;\n  return (settings.noAlloc ? value.length : numInstances * size) * multiplier;\n}\n\nfunction padBuffer(_ref) {\n  var buffer = _ref.buffer,\n      numInstances = _ref.numInstances,\n      attribute = _ref.attribute,\n      fromLength = _ref.fromLength,\n      fromStartIndices = _ref.fromStartIndices,\n      _ref$getData = _ref.getData,\n      getData = _ref$getData === void 0 ? function (x) {\n    return x;\n  } : _ref$getData;\n  var precisionMultiplier = attribute.doublePrecision ? 2 : 1;\n  var size = attribute.size * precisionMultiplier;\n  var byteOffset = attribute.byteOffset;\n  var toStartIndices = attribute.startIndices;\n  var hasStartIndices = fromStartIndices && toStartIndices;\n  var toLength = getAttributeBufferLength(attribute, numInstances);\n  var isConstant = attribute.state.constant;\n\n  if (!hasStartIndices && fromLength >= toLength) {\n    return;\n  }\n\n  var toData = isConstant ? attribute.value : attribute.getBuffer().getData({\n    srcByteOffset: byteOffset\n  });\n\n  if (attribute.settings.normalized && !isConstant) {\n    var getter = getData;\n\n    getData = function getData(value, chunk) {\n      return attribute._normalizeConstant(getter(value, chunk));\n    };\n  }\n\n  var getMissingData = isConstant ? function (i, chunk) {\n    return getData(toData, chunk);\n  } : function (i, chunk) {\n    return getData(toData.subarray(i, i + size), chunk);\n  };\n  var source = buffer.getData({\n    length: fromLength\n  });\n  var data = new Float32Array(toLength);\n  (0, _arrayUtils.padArray)({\n    source: source,\n    target: data,\n    sourceStartIndices: fromStartIndices,\n    targetStartIndices: toStartIndices,\n    size: size,\n    getData: getMissingData\n  });\n\n  if (buffer.byteLength < data.byteLength + byteOffset) {\n    buffer.reallocate(data.byteLength + byteOffset);\n  }\n\n  buffer.subData({\n    data: data,\n    offset: byteOffset\n  });\n}\n//# sourceMappingURL=attribute-transition-utils.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","getAttributeBufferLength","attribute","numInstances","value","size","settings","noAlloc","length","doublePrecision","multiplier","Object","defineProperty","normalizeTransitionSettings","userSettings","layerSettings","Number","isFinite","duration","type","assign","DEFAULT_TRANSITION_SETTINGS","getSourceBufferAttribute","gl","getBuffer","buffer","divisor","normalized","getAttributeTypeFromSize","Error","concat","cycleBuffers","buffers","push","shift","padBuffer","_ref","fromLength","fromStartIndices","_ref$getData","getData","x","precisionMultiplier","byteOffset","toStartIndices","startIndices","hasStartIndices","toLength","isConstant","state","constant","toData","srcByteOffset","getter","chunk","_normalizeConstant","getMissingData","i","subarray","source","data","Float32Array","_arrayUtils","padArray","target","sourceStartIndices","targetStartIndices","byteLength","reallocate","subData","offset","interpolation","easing","t","spring","stiffness","damping"]
}
