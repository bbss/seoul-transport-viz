{
"version":3,
"file":"module$node_modules$$deck_DOT_gl$layers$dist$es5$scatterplot_layer$scatterplot_layer.js",
"lineCount":10,
"mappings":"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",
"sources":["node_modules/@deck_DOT_gl/layers/dist/es5/scatterplot-layer/scatterplot-layer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$deck_DOT_gl$layers$dist$es5$scatterplot_layer$scatterplot_layer\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _core = require(\"@deck.gl/core\");\n\nvar _core2 = require(\"@luma.gl/core\");\n\nvar _scatterplotLayerVertex = _interopRequireDefault(require(\"./scatterplot-layer-vertex.glsl\"));\n\nvar _scatterplotLayerFragment = _interopRequireDefault(require(\"./scatterplot-layer-fragment.glsl\"));\n\nvar DEFAULT_COLOR = [0, 0, 0, 255];\nvar defaultProps = {\n  radiusUnits: 'meters',\n  radiusScale: {\n    type: 'number',\n    min: 0,\n    value: 1\n  },\n  radiusMinPixels: {\n    type: 'number',\n    min: 0,\n    value: 0\n  },\n  radiusMaxPixels: {\n    type: 'number',\n    min: 0,\n    value: Number.MAX_SAFE_INTEGER\n  },\n  lineWidthUnits: 'meters',\n  lineWidthScale: {\n    type: 'number',\n    min: 0,\n    value: 1\n  },\n  lineWidthMinPixels: {\n    type: 'number',\n    min: 0,\n    value: 0\n  },\n  lineWidthMaxPixels: {\n    type: 'number',\n    min: 0,\n    value: Number.MAX_SAFE_INTEGER\n  },\n  stroked: false,\n  filled: true,\n  getPosition: {\n    type: 'accessor',\n    value: function value(x) {\n      return x.position;\n    }\n  },\n  getRadius: {\n    type: 'accessor',\n    value: 1\n  },\n  getFillColor: {\n    type: 'accessor',\n    value: DEFAULT_COLOR\n  },\n  getLineColor: {\n    type: 'accessor',\n    value: DEFAULT_COLOR\n  },\n  getLineWidth: {\n    type: 'accessor',\n    value: 1\n  },\n  strokeWidth: {\n    deprecatedFor: 'getLineWidth'\n  },\n  outline: {\n    deprecatedFor: 'stroked'\n  },\n  getColor: {\n    deprecatedFor: ['getFillColor', 'getLineColor']\n  }\n};\n\nvar ScatterplotLayer = function (_Layer) {\n  (0, _inherits2[\"default\"])(ScatterplotLayer, _Layer);\n\n  function ScatterplotLayer() {\n    (0, _classCallCheck2[\"default\"])(this, ScatterplotLayer);\n    return (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(ScatterplotLayer).apply(this, arguments));\n  }\n\n  (0, _createClass2[\"default\"])(ScatterplotLayer, [{\n    key: \"getShaders\",\n    value: function getShaders(id) {\n      return (0, _get2[\"default\"])((0, _getPrototypeOf2[\"default\"])(ScatterplotLayer.prototype), \"getShaders\", this).call(this, {\n        vs: _scatterplotLayerVertex[\"default\"],\n        fs: _scatterplotLayerFragment[\"default\"],\n        modules: [_core.project32, _core.picking]\n      });\n    }\n  }, {\n    key: \"initializeState\",\n    value: function initializeState() {\n      this.getAttributeManager().addInstanced({\n        instancePositions: {\n          size: 3,\n          type: 5130,\n          fp64: this.use64bitPositions(),\n          transition: true,\n          accessor: 'getPosition'\n        },\n        instanceRadius: {\n          size: 1,\n          transition: true,\n          accessor: 'getRadius',\n          defaultValue: 1\n        },\n        instanceFillColors: {\n          size: this.props.colorFormat.length,\n          transition: true,\n          normalized: true,\n          type: 5121,\n          accessor: 'getFillColor',\n          defaultValue: [0, 0, 0, 255]\n        },\n        instanceLineColors: {\n          size: this.props.colorFormat.length,\n          transition: true,\n          normalized: true,\n          type: 5121,\n          accessor: 'getLineColor',\n          defaultValue: [0, 0, 0, 255]\n        },\n        instanceLineWidths: {\n          size: 1,\n          transition: true,\n          accessor: 'getLineWidth',\n          defaultValue: 1\n        }\n      });\n    }\n  }, {\n    key: \"updateState\",\n    value: function updateState(_ref) {\n      var props = _ref.props,\n          oldProps = _ref.oldProps,\n          changeFlags = _ref.changeFlags;\n      (0, _get2[\"default\"])((0, _getPrototypeOf2[\"default\"])(ScatterplotLayer.prototype), \"updateState\", this).call(this, {\n        props: props,\n        oldProps: oldProps,\n        changeFlags: changeFlags\n      });\n\n      if (changeFlags.extensionsChanged) {\n        var gl = this.context.gl;\n\n        if (this.state.model) {\n          this.state.model[\"delete\"]();\n        }\n\n        this.setState({\n          model: this._getModel(gl)\n        });\n        this.getAttributeManager().invalidateAll();\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(_ref2) {\n      var uniforms = _ref2.uniforms;\n      var viewport = this.context.viewport;\n      var _this$props = this.props,\n          radiusUnits = _this$props.radiusUnits,\n          radiusScale = _this$props.radiusScale,\n          radiusMinPixels = _this$props.radiusMinPixels,\n          radiusMaxPixels = _this$props.radiusMaxPixels,\n          stroked = _this$props.stroked,\n          filled = _this$props.filled,\n          lineWidthUnits = _this$props.lineWidthUnits,\n          lineWidthScale = _this$props.lineWidthScale,\n          lineWidthMinPixels = _this$props.lineWidthMinPixels,\n          lineWidthMaxPixels = _this$props.lineWidthMaxPixels;\n      var pointRadiusMultiplier = radiusUnits === 'pixels' ? viewport.metersPerPixel : 1;\n      var lineWidthMultiplier = lineWidthUnits === 'pixels' ? viewport.metersPerPixel : 1;\n      this.state.model.setUniforms(uniforms).setUniforms({\n        stroked: stroked ? 1 : 0,\n        filled: filled,\n        radiusScale: radiusScale * pointRadiusMultiplier,\n        radiusMinPixels: radiusMinPixels,\n        radiusMaxPixels: radiusMaxPixels,\n        lineWidthScale: lineWidthScale * lineWidthMultiplier,\n        lineWidthMinPixels: lineWidthMinPixels,\n        lineWidthMaxPixels: lineWidthMaxPixels\n      }).draw();\n    }\n  }, {\n    key: \"_getModel\",\n    value: function _getModel(gl) {\n      var positions = [-1, -1, 0, 1, -1, 0, 1, 1, 0, -1, 1, 0];\n      return new _core2.Model(gl, Object.assign(this.getShaders(), {\n        id: this.props.id,\n        geometry: new _core2.Geometry({\n          drawMode: 6,\n          vertexCount: 4,\n          attributes: {\n            positions: {\n              size: 3,\n              value: new Float32Array(positions)\n            }\n          }\n        }),\n        isInstanced: true\n      }));\n    }\n  }]);\n  return ScatterplotLayer;\n}(_core.Layer);\n\nexports[\"default\"] = ScatterplotLayer;\nScatterplotLayer.layerName = 'ScatterplotLayer';\nScatterplotLayer.defaultProps = defaultProps;\n//# sourceMappingURL=scatterplot-layer.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","Object","defineProperty","value","_classCallCheck2","_createClass2","_possibleConstructorReturn2","_getPrototypeOf2","_get2","_inherits2","_core","_core2","_scatterplotLayerVertex","_scatterplotLayerFragment","DEFAULT_COLOR","defaultProps","radiusUnits","radiusScale","type","min","radiusMinPixels","radiusMaxPixels","Number","MAX_SAFE_INTEGER","lineWidthUnits","lineWidthScale","lineWidthMinPixels","lineWidthMaxPixels","stroked","filled","getPosition","x","position","getRadius","getFillColor","getLineColor","getLineWidth","strokeWidth","deprecatedFor","outline","getColor","ScatterplotLayer","_Layer","apply","arguments","key","getShaders","id","prototype","call","vs","fs","modules","project32","picking","initializeState","getAttributeManager","addInstanced","instancePositions","size","fp64","use64bitPositions","transition","accessor","instanceRadius","defaultValue","instanceFillColors","props","colorFormat","length","normalized","instanceLineColors","instanceLineWidths","updateState","_ref","oldProps","changeFlags","extensionsChanged","gl","context","state","model","setState","_getModel","invalidateAll","draw","_ref2","viewport","_this$props","pointRadiusMultiplier","metersPerPixel","lineWidthMultiplier","setUniforms","uniforms","Model","assign","geometry","Geometry","drawMode","vertexCount","attributes","positions","Float32Array","isInstanced","Layer","layerName"]
}
