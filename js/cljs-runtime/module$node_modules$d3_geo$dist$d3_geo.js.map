{
"version":3,
"file":"module$node_modules$d3_geo$dist$d3_geo.js",
"lineCount":121,
"mappings":"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",
"sources":["node_modules/d3-geo/dist/d3-geo.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$d3_geo$dist$d3_geo\"] = function(global,require,module,exports) {\n// https://d3js.org/d3-geo/ v1.12.1 Copyright 2020 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-array')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-array'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}, global.d3));\n}(this, (function (exports, d3Array) { 'use strict';\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305\u2013363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nfunction adder() {\n  return new Adder;\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add(temp, y, this.t);\n    add(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon = 1e-6;\nvar epsilon2 = 1e-12;\nvar pi = Math.PI;\nvar halfPi = pi / 2;\nvar quarterPi = pi / 4;\nvar tau = pi * 2;\n\nvar degrees = 180 / pi;\nvar radians = pi / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n\nfunction noop() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nfunction geoStream(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n\nvar areaRingSum = adder();\n\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli\u2019s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nfunction area(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n}\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00$1, phi00$1, // first point\n    p0, // previous 3D point\n    deltaSum = adder(),\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0$1, range[1] = lambda1;\n  },\n  sphere: function() {\n    lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0$1, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0$1 = -(lambda1 = 180);\n  range[0] = lambda0$1, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360\u00b0) % 360\u00b0, except that we want\n// the distance between \u00b1180\u00b0 to be 360\u00b0.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nfunction bounds(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n}\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00$2, phi00$2, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroid(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\n}\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction compose(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n\nfunction rotationIdentity(lambda, phi) {\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nfunction rotation(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n\n// Generates a circle centered at [0\u00b0, 0\u00b0], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nfunction circle() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n\nfunction clipBuffer() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y, m) {\n      line.push([x, y, m]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n\nfunction pointEqual(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nfunction clipRejoin(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    if (pointEqual(p0, p1)) {\n      if (!p0[2] && !p1[2]) {\n        stream.lineStart();\n        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n        stream.lineEnd();\n        return;\n      }\n      // handle degenerate cases by moving the point\n      p1[0] += 2 * epsilon;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar sum = adder();\n\nfunction longitude(point) {\n  if (abs(point[0]) <= pi)\n    return point[0];\n  else\n    return sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nfunction polygonContains(polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum.reset();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point\u2019s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\n}\n\nfunction clip(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = d3Array.merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nfunction clipCircle(radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2))\n            point1[2] = 1;\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1], 2);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1], 3);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 \u2a2f n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n\nfunction clipLine(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon\u2019s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = d3Array.merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nfunction extent() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n\nvar lengthSum = adder(),\n    lambda0$2,\n    sinPhi0$1,\n    cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin(phi), cosPhi0$1 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nfunction length(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n}\n\nvar coordinates = [null, null],\n    object = {type: \"LineString\", coordinates: coordinates};\n\nfunction distance(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ao, bo, ab;\n  for (var i = 0, n = coordinates.length; i < n; i++) {\n    bo = distance(coordinates[i], point);\n    if (bo === 0) return true;\n    if (i > 0) {\n      ab = distance(coordinates[i], coordinates[i - 1]);\n      if (\n        ab > 0 &&\n        ao <= ab &&\n        bo <= ab &&\n        (ao + bo - ab) * (1 - Math.pow((ao - bo) / ab, 2)) < epsilon2 * ab\n      )\n        return true;\n    }\n    ao = bo;\n  }\n  return false;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nfunction contains(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n}\n\nfunction graticuleX(y0, y1, dy) {\n  var y = d3Array.range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = d3Array.range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return d3Array.range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(d3Array.range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(d3Array.range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(d3Array.range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nfunction interpolate(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n\nfunction identity(x) {\n  return x;\n}\n\nvar areaSum$1 = adder(),\n    areaRingSum$1 = adder(),\n    x00,\n    y00,\n    x0$1,\n    y0$1;\n\nvar areaStream$1 = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity,\n    y0$2 = x0$2,\n    x1 = -x0$2,\n    y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0,\n    Y0$1 = 0,\n    Z0$1 = 0,\n    X1$1 = 0,\n    Y1$1 = 0,\n    Z1$1 = 0,\n    X2$1 = 0,\n    Y2$1 = 0,\n    Z2$1 = 0,\n    x00$1,\n    y00$1,\n    x0$3,\n    y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n\nvar lengthSum$1 = adder(),\n    lengthRing,\n    x00$2,\n    y00$2,\n    x0$4,\n    y0$4;\n\nvar lengthStream$1 = {\n  point: noop,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle$1(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nfunction index(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n\nfunction transform(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream$1));\n  fitBounds(boundsStream$1.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nfunction fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nfunction fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nfunction fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nfunction resample(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy, sx, sy) {\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k * sx, (dy - y) / k * sy];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];\n  };\n  return transform;\n}\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate angle\n      sx = 1, // reflectX\n      sy = 1, // reflectX\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;\n  };\n\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),\n        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], sx, sy, alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y,\n        l = atan2(x, abs(r0y)) * sign(r0y);\n    if (r0y * n < 0)\n      l -= pi * sign(x) * sign(r0y);\n    return [l / n, asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nfunction conicEqualArea() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n\nfunction albers() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960\u00d7500. The projection also works quite well at 960\u00d7600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nfunction albersUsa() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function(width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function(height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nfunction azimuthalEqualArea() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nfunction azimuthalEquidistant() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nfunction mercator() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n\nfunction tany(y) {\n  return tan((halfPi + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\n    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\n    var r = f / pow(tany(y), n);\n    return [r * sin(n * x), f - r * cos(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy),\n      l = atan2(x, abs(fy)) * sign(fy);\n    if (fy * n < 0)\n      l -= pi * sign(x) * sign(fy);\n    return [l / n, 2 * atan(pow(f / r, 1 / n)) - halfPi];\n  };\n\n  return project;\n}\n\nfunction conicConformal() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n}\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nfunction equirectangular() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y,\n        l = atan2(x, abs(gy)) * sign(gy);\n    if (gy * n < 0)\n      l -= pi * sign(x) * sign(gy);\n    return [l / n, g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nfunction conicEquidistant() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\n\nfunction equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)), l2 = l * l, l6 = l2 * l2 * l2;\n  return [\n    lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),\n    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))\n  ];\n}\n\nequalEarthRaw.invert = function(x, y) {\n  var l = y, l2 = l * l, l6 = l2 * l2 * l2;\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n  return [\n    M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l),\n    asin(sin(l) / M)\n  ];\n};\n\nfunction equalEarth() {\n  return projection(equalEarthRaw)\n      .scale(177.158);\n}\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nfunction gnomonic() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n\nfunction identity$1() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, // scale, translate and reflect\n      alpha = 0, ca, sa, // angle\n      x0 = null, y0, x1, y1, // clip extent\n      kx = 1, ky = 1,\n      transform = transformer({\n        point: function(x, y) {\n          var p = projection([x, y]);\n          this.stream.point(p[0], p[1]);\n        }\n      }),\n      postclip = identity,\n      cache,\n      cacheStream;\n\n  function reset() {\n    kx = k * sx;\n    ky = k * sy;\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  function projection (p) {\n    var x = p[0] * kx, y = p[1] * ky;\n    if (alpha) {\n      var t = y * ca - x * sa;\n      x = x * ca + y * sa;\n      y = t;\n    }    \n    return [x + tx, y + ty];\n  }\n  projection.invert = function(p) {\n    var x = p[0] - tx, y = p[1] - ty;\n    if (alpha) {\n      var t = y * ca + x * sa;\n      x = x * ca - y * sa;\n      y = t;\n    }\n    return [x / kx, y / ky];\n  };\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));\n  };\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, reset()) : k;\n  };\n  projection.translate = function(_) {\n    return arguments.length ? (tx = +_[0], ty = +_[1], reset()) : [tx, ty];\n  };\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, sa = sin(alpha), ca = cos(alpha), reset()) : alpha * degrees;\n  };\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, reset()) : sx < 0;\n  };\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, reset()) : sy < 0;\n  };\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  return projection;\n}\n\nfunction naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nfunction naturalEarth1() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n\nfunction orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nfunction orthographic() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n\nfunction stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nfunction stereographic() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nfunction transverseMercator() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoArea = area;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipAntimeridian = clipAntimeridian;\nexports.geoClipCircle = clipCircle;\nexports.geoClipExtent = extent;\nexports.geoClipRectangle = clipRectangle;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoContains = contains;\nexports.geoDistance = distance;\nexports.geoEqualEarth = equalEarth;\nexports.geoEqualEarthRaw = equalEarthRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoIdentity = identity$1;\nexports.geoInterpolate = interpolate;\nexports.geoLength = length;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoNaturalEarth1 = naturalEarth1;\nexports.geoNaturalEarth1Raw = naturalEarth1Raw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoPath = index;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoRotation = rotation;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n};"],
"names":["shadow$provide","global","require","module","exports","factory","define","amd","self","d3","d3Array","Adder","reset","add","adder","a","b","x","s","bv","t","acos","pi","Math","asin","halfPi","haversin","sin","noop","streamGeometry","geometry","stream","streamGeometryType","hasOwnProperty","type","streamLine","coordinates","closed","i","n","length","lineStart","coordinate","point","lineEnd","streamPolygon","polygonStart","polygonEnd","geoStream","object","streamObjectType","areaRingStart","areaStream","areaPointFirst","areaRingEnd","areaPoint","lambda00","phi00","lambda","phi","radians","lambda0","cosPhi0","cos","quarterPi","sinPhi0","dLambda","sdLambda","adLambda","cosPhi","sinPhi","k","u","v","areaRingSum","atan2","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","d","l","sqrt","boundsPoint","ranges","push","range","lambda0$1","lambda1","phi0","phi1","linePoint","p","p0","normal","inflection","equatorial","delta","lambda2","sign","lambdai","degrees","antimeridian","abs","phii","angle","boundsLineStart","boundsStream","boundsLineEnd","boundsRingPoint","deltaSum","lambda00$1","phi00$1","boundsRingStart","boundsRingEnd","epsilon","rangeCompare","rangeContains","centroidPoint","centroidPointCartesian","y","z","W0","X0","Y0","Z0","centroidLineStart","centroidStream","centroidLinePointFirst","x0","y0","z0","centroidLinePoint","w","W1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidRingPointFirst","centroidRingEnd","centroidRingPoint","lambda00$2","phi00$2","cx","cy","cz","m","X2","Y2","Z2","constant","compose","invert","compose.invert","rotationIdentity","round","tau","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","rotation.invert","rotate","forward","forward.invert","circleStream","radius","direction","t0","t1","cosRadius","sinRadius","step","circleRadius","clipBuffer","lines","line","rejoin","pop","concat","shift","result","pointEqual","Intersection","points","other","entry","o","e","clipRejoin","segments","compareIntersection","startInside","interpolate","subject","clip","forEach","segment","p1","sort","link","start","current","isSubject","array","longitude","polygonContains","polygon","winding","sum","ring","point0","j","sinPhi1","cosPhi1","point1","absDelta","arc","intersection","phiArc","pointVisible","clipLine","sink","pointLine","pointRing","ringSink","ringStart","ringEnd","clean","ringSegments","ringBuffer","polygonStarted","filter","validSegment","merge","sphere","clipCircle","visible","cr","intersect","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","A","B","uu","t2","q","polar","q1","code","r","smallRadius","notHemisphere","c0","v0","v00","c","point2","from","to","x1","y1","ax","ay","dx","bx","dy","by","clipRectangle","a1","corner","comparePoint","ca","cb","activeStream","first","x__","y__","v__","v_","x_","max","clipMin","min","clipMax","y_","bufferStream","clipStream","NaN","b0","b1","a0","cleanInside","lengthLineEnd","lengthStream","lengthPointFirst","lambda0$2","sinPhi0$1","cosPhi0$1","lengthPoint","cosDelta","sinDelta","lengthSum","distance","containsGeometry","containsGeometryType","containsLine","ao","bo","ab","pow","epsilon2","containsPolygon","map","ringRadians","pointRadians","graticuleX","graticuleY","graticule","ceil","DX","X","DY","Y","precision","graticule.lines","outline","graticule.outline","slice","reverse","extent","graticule.extent","_","arguments","extentMajor","extentMinor","graticule.extentMajor","graticule.extentMinor","graticule.step","stepMajor","stepMinor","graticule.stepMajor","graticule.stepMinor","graticule.precision","identity","areaRingStart$1","areaStream$1","areaPointFirst$1","areaPoint$1","x00","x0$1","y00","y0$1","areaRingSum$1","areaRingEnd$1","centroidPoint$1","X0$1","Y0$1","Z0$1","centroidLineStart$1","centroidStream$1","centroidPointFirstLine","centroidPointLine","x0$3","y0$3","X1$1","Y1$1","Z1$1","centroidLineEnd$1","centroidRingStart$1","centroidPointFirstRing","centroidRingEnd$1","centroidPointRing","x00$1","y00$1","X2$1","Y2$1","Z2$1","PathContext","context","_context","lengthPointFirst$1","lengthStream$1","lengthPoint$1","x00$2","x0$4","y00$2","y0$4","lengthSum$1","PathString","_string","circle$1","transformer","methods","TransformStream","key","fit","projection","fitBounds","clipExtent","scale","translate","boundsStream$1","fitExtent","h","fitWidth","width","fitHeight","height","resampleNone","project","resample$1","delta2","resampleLineTo","depth","d2","phi2","x2","y2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringPoint","a00","b00","c00","transformRotate","scaleTranslate","sx","sy","transform","transform.invert","scaleTranslateRotate","alpha","cosAlpha","sinAlpha","ai","bi","ci","fi","projectionMutator","projectAt","projectRotateTransform","recenter","center","apply","projectTransform","cache","cacheStream","theta","preclip","clipAntimeridian","postclip","projectResample","projection.stream","transformRadians","projection.preclip","undefined","projection.postclip","clipAngle","projection.clipAngle","projection.clipExtent","projection.scale","projection.translate","projection.center","projection.rotate","projection.angle","reflectX","projection.reflectX","reflectY","projection.reflectY","projection.precision","projection.fitExtent","fitSize","projection.fitSize","size","projection.fitWidth","projection.fitHeight","conicProjection","parallels","p.parallels","cylindricalEqualAreaRaw","conicEqualAreaRaw","r0","sy0","project.invert","r0y","conicEqualArea","albers","multiplex","streams","azimuthalRaw","azimuthalInvert","sc","cc","mercatorRaw","log","tan","mercatorProjection","reclip","m.scale","m.translate","m.center","m.clipExtent","conicConformalRaw","f","cy0","fy","atan","equirectangularRaw","conicEquidistantRaw","gy","g","nx","equalEarthRaw","M","l2","l6","A1","A2","A3","A4","gnomonicRaw","naturalEarth1Raw","phi4","orthographicRaw","stereographicRaw","transverseMercatorRaw","prototype","constructor","temp","valueOf","PI","exp","Feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","areaSum","areaRing","clipAntimeridianLine","sign0","sign1","sinLambda0Lambda1","clipAntimeridianInterpolate","lengthLineStart","containsObjectType","areaSum$1","area","x0$2","Infinity","y0$2","boundsPoint$1","bounds","centroid","_radius","pointRadius","_line","_point","closePath","moveTo","lineTo","lengthRing","_circle","join","azimuthalEqualAreaRaw","cxcy","azimuthalEquidistantRaw","mercatorRaw.invert","equalEarthRaw.invert","iterations","fpy","naturalEarth1Raw.invert","transverseMercatorRaw.invert","geoAlbers","geoAlbersUsa","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","albersUsa.invert","albersUsa.stream","albersUsa.precision","albersUsa.scale","albersUsa.translate","albersUsa.fitExtent","albersUsa.fitSize","albersUsa.fitWidth","albersUsa.fitHeight","geoArea","geoAzimuthalEqualArea","azimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","azimuthalEquidistant","geoAzimuthalEquidistantRaw","geoBounds","feature","merged","deltaMax","geoCentroid","geoCircle","circle","circle.center","circle.radius","circle.precision","geoClipAntimeridian","geoClipCircle","geoClipExtent","geoClipRectangle","geoConicConformal","conicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","conicEquidistant","geoConicEquidistantRaw","geoContains","contains","geoDistance","geoEqualEarth","equalEarth","geoEqualEarthRaw","geoEquirectangular","equirectangular","geoEquirectangularRaw","geoGnomonic","gnomonic","geoGnomonicRaw","geoGraticule","geoGraticule10","graticule10","geoIdentity","identity$1","kx","ky","sa","tx","ty","projection.invert","geoInterpolate","cy1","sy1","kx0","ky0","kx1","ky1","geoLength","geoMercator","mercator","geoMercatorRaw","geoNaturalEarth1","naturalEarth1","geoNaturalEarth1Raw","geoOrthographic","orthographic","geoOrthographicRaw","geoPath","index","path","contextStream","projectionStream","path.area","measure","path.measure","path.bounds","path.centroid","path.projection","path.context","path.pointRadius","geoProjection","geoProjectionMutator","geoRotation","geoStereographic","stereographic","geoStereographicRaw","geoTransform","geoTransverseMercator","transverseMercator","m.rotate","geoTransverseMercatorRaw","Object","defineProperty","value"]
}
