{
"version":3,
"file":"module$node_modules$$luma_DOT_gl$engine$dist$es5$geometry$geometry.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/@luma_DOT_gl/engine/dist/es5/geometry/geometry.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$luma_DOT_gl$engine$dist$es5$geometry$geometry\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.DRAW_MODE = void 0;\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _webgl = require(\"@luma.gl/webgl\");\n\nvar DRAW_MODE = {\n  POINTS: 0x0000,\n  LINES: 0x0001,\n  LINE_LOOP: 0x0002,\n  LINE_STRIP: 0x0003,\n  TRIANGLES: 0x0004,\n  TRIANGLE_STRIP: 0x0005,\n  TRIANGLE_FAN: 0x0006\n};\nexports.DRAW_MODE = DRAW_MODE;\n\nvar Geometry = function () {\n  (0, _createClass2[\"default\"])(Geometry, null, [{\n    key: \"DRAW_MODE\",\n    get: function get() {\n      return DRAW_MODE;\n    }\n  }]);\n\n  function Geometry() {\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    (0, _classCallCheck2[\"default\"])(this, Geometry);\n    var _props$id = props.id,\n        id = _props$id === void 0 ? (0, _webgl.uid)('geometry') : _props$id,\n        _props$drawMode = props.drawMode,\n        drawMode = _props$drawMode === void 0 ? DRAW_MODE.TRIANGLES : _props$drawMode,\n        _props$attributes = props.attributes,\n        attributes = _props$attributes === void 0 ? {} : _props$attributes,\n        _props$indices = props.indices,\n        indices = _props$indices === void 0 ? null : _props$indices,\n        _props$vertexCount = props.vertexCount,\n        vertexCount = _props$vertexCount === void 0 ? null : _props$vertexCount;\n    this.id = id;\n    this.drawMode = drawMode | 0;\n    this.attributes = {};\n    this.userData = {};\n\n    this._setAttributes(attributes, indices);\n\n    this.vertexCount = vertexCount || this._calculateVertexCount(this.attributes, this.indices);\n  }\n\n  (0, _createClass2[\"default\"])(Geometry, [{\n    key: \"getVertexCount\",\n    value: function getVertexCount() {\n      return this.vertexCount;\n    }\n  }, {\n    key: \"getAttributes\",\n    value: function getAttributes() {\n      return this.indices ? (0, _objectSpread2[\"default\"])({\n        indices: this.indices\n      }, this.attributes) : this.attributes;\n    }\n  }, {\n    key: \"_print\",\n    value: function _print(attributeName) {\n      return \"Geometry \".concat(this.id, \" attribute \").concat(attributeName);\n    }\n  }, {\n    key: \"_setAttributes\",\n    value: function _setAttributes(attributes, indices) {\n      if (indices) {\n        this.indices = ArrayBuffer.isView(indices) ? {\n          value: indices,\n          size: 1\n        } : indices;\n      }\n\n      for (var attributeName in attributes) {\n        var attribute = attributes[attributeName];\n        attribute = ArrayBuffer.isView(attribute) ? {\n          value: attribute\n        } : attribute;\n        (0, _webgl.assert)(ArrayBuffer.isView(attribute.value), \"\".concat(this._print(attributeName), \": must be typed array or object with value as typed array\"));\n\n        if ((attributeName === 'POSITION' || attributeName === 'positions') && !attribute.size) {\n          attribute.size = 3;\n        }\n\n        if (attributeName === 'indices') {\n          (0, _webgl.assert)(!this.indices);\n          this.indices = attribute;\n        } else {\n          this.attributes[attributeName] = attribute;\n        }\n      }\n\n      if (this.indices && this.indices.isIndexed !== undefined) {\n        this.indices = Object.assign({}, this.indices);\n        delete this.indices.isIndexed;\n      }\n\n      return this;\n    }\n  }, {\n    key: \"_calculateVertexCount\",\n    value: function _calculateVertexCount(attributes, indices) {\n      if (indices) {\n        return indices.value.length;\n      }\n\n      var vertexCount = Infinity;\n\n      for (var attributeName in attributes) {\n        var attribute = attributes[attributeName];\n        var value = attribute.value,\n            size = attribute.size,\n            constant = attribute.constant;\n\n        if (!constant && value && size >= 1) {\n          vertexCount = Math.min(vertexCount, value.length / size);\n        }\n      }\n\n      (0, _webgl.assert)(Number.isFinite(vertexCount));\n      return vertexCount;\n    }\n  }, {\n    key: \"mode\",\n    get: function get() {\n      return this.drawMode;\n    }\n  }]);\n  return Geometry;\n}();\n\nexports[\"default\"] = Geometry;\n//# sourceMappingURL=geometry.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","Object","defineProperty","value","DRAW_MODE","_objectSpread2","_classCallCheck2","_createClass2","_webgl","POINTS","LINES","LINE_LOOP","LINE_STRIP","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","Geometry","props","arguments","length","undefined","_props$id","id","uid","_props$drawMode","drawMode","_props$attributes","attributes","_props$indices","indices","_props$vertexCount","vertexCount","userData","_setAttributes","_calculateVertexCount","key","get","getVertexCount","getAttributes","_print","attributeName","concat","ArrayBuffer","isView","size","attribute","assert","isIndexed","assign","Infinity","constant","Math","min","Number","isFinite"]
}
