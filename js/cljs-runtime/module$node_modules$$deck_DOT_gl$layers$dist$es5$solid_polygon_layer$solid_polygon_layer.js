shadow$provide.module$node_modules$$deck_DOT_gl$layers$dist$es5$solid_polygon_layer$solid_polygon_layer=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports["default"]=void 0;var _classCallCheck2=global(require("module$node_modules$$babel$runtime$helpers$classCallCheck")),_createClass2=global(require("module$node_modules$$babel$runtime$helpers$createClass")),_possibleConstructorReturn2=
global(require("module$node_modules$$babel$runtime$helpers$possibleConstructorReturn")),_getPrototypeOf2=global(require("module$node_modules$$babel$runtime$helpers$getPrototypeOf")),_get2=global(require("module$node_modules$$babel$runtime$helpers$get")),_inherits2=global(require("module$node_modules$$babel$runtime$helpers$inherits")),_core=require("module$node_modules$$deck_DOT_gl$core$dist$es5$index"),_core2=require("module$node_modules$$luma_DOT_gl$core$dist$es5$index"),_polygonTesselator=global(require("module$node_modules$$deck_DOT_gl$layers$dist$es5$solid_polygon_layer$polygon_tesselator")),
_solidPolygonLayerVertexTop=global(require("module$node_modules$$deck_DOT_gl$layers$dist$es5$solid_polygon_layer$solid_polygon_layer_vertex_top_glsl")),_solidPolygonLayerVertexSide=global(require("module$node_modules$$deck_DOT_gl$layers$dist$es5$solid_polygon_layer$solid_polygon_layer_vertex_side_glsl")),_solidPolygonLayerFragment=global(require("module$node_modules$$deck_DOT_gl$layers$dist$es5$solid_polygon_layer$solid_polygon_layer_fragment_glsl")),DEFAULT_COLOR=[0,0,0,255];require={filled:!0,extruded:!1,
wireframe:!1,_normalize:!0,elevationScale:{type:"number",min:0,value:1},getPolygon:{type:"accessor",value:function(f){return f.polygon}},getElevation:{type:"accessor",value:1E3},getFillColor:{type:"accessor",value:DEFAULT_COLOR},getLineColor:{type:"accessor",value:DEFAULT_COLOR},material:!0};var ATTRIBUTE_TRANSITION={enter:function(value,chunk){return chunk.length?chunk.subarray(chunk.length-value.length):value}};global=function(_Layer){function SolidPolygonLayer(){(0,_classCallCheck2["default"])(this,
SolidPolygonLayer);return(0,_possibleConstructorReturn2["default"])(this,(0,_getPrototypeOf2["default"])(SolidPolygonLayer).apply(this,arguments))}(0,_inherits2["default"])(SolidPolygonLayer,_Layer);(0,_createClass2["default"])(SolidPolygonLayer,[{key:"getShaders",value:function(vs){return(0,_get2["default"])((0,_getPrototypeOf2["default"])(SolidPolygonLayer.prototype),"getShaders",this).call(this,{vs:vs,fs:_solidPolygonLayerFragment["default"],defines:{},modules:[_core.project32,_core.gouraudLighting,
_core.picking]})}},{key:"initializeState",value:function(){var _this=this,_this$context=this.context,gl=_this$context.gl;_this$context=_this$context.viewport;var coordinateSystem=this.props.coordinateSystem;_this$context.isGeospatial&&coordinateSystem===_core.COORDINATE_SYSTEM.DEFAULT&&(coordinateSystem=_core.COORDINATE_SYSTEM.LNGLAT);this.setState({numInstances:0,polygonTesselator:new _polygonTesselator["default"]({preproject:coordinateSystem===_core.COORDINATE_SYSTEM.LNGLAT&&_this$context.projectFlat,
fp64:this.use64bitPositions(),IndexType:!gl||(0,_core2.hasFeatures)(gl,_core2.FEATURES.ELEMENT_INDEX_UINT32)?Uint32Array:Uint16Array})});gl=this.getAttributeManager();gl.remove(["instancePickingColors"]);gl.add({indices:{size:1,isIndexed:!0,update:this.calculateIndices,noAlloc:!0},positions:{size:3,type:5130,fp64:this.use64bitPositions(),transition:ATTRIBUTE_TRANSITION,accessor:"getPolygon",update:this.calculatePositions,noAlloc:!0,shaderAttributes:{positions:{vertexOffset:0,divisor:0},instancePositions:{vertexOffset:0,
divisor:1},nextPositions:{vertexOffset:1,divisor:1}}},vertexValid:{size:1,divisor:1,type:5121,update:this.calculateVertexValid,noAlloc:!0},elevations:{size:1,transition:ATTRIBUTE_TRANSITION,accessor:"getElevation",shaderAttributes:{elevations:{divisor:0},instanceElevations:{divisor:1}}},fillColors:{alias:"colors",size:this.props.colorFormat.length,type:5121,normalized:!0,transition:ATTRIBUTE_TRANSITION,accessor:"getFillColor",defaultValue:DEFAULT_COLOR,shaderAttributes:{fillColors:{divisor:0},instanceFillColors:{divisor:1}}},
lineColors:{alias:"colors",size:this.props.colorFormat.length,type:5121,normalized:!0,transition:ATTRIBUTE_TRANSITION,accessor:"getLineColor",defaultValue:DEFAULT_COLOR,shaderAttributes:{lineColors:{divisor:0},instanceLineColors:{divisor:1}}},pickingColors:{size:3,type:5121,accessor:function(object,_ref){var index=_ref.index;return _this.encodePickingColor(object&&object.__source?object.__source.index:index,_ref.target)},shaderAttributes:{pickingColors:{divisor:0},instancePickingColors:{divisor:1}}}})}},
{key:"getPickingInfo",value:function(params){params=(0,_get2["default"])((0,_getPrototypeOf2["default"])(SolidPolygonLayer.prototype),"getPickingInfo",this).call(this,params);var index=params.index,data=this.props.data;data[0]&&data[0].__source&&(params.object=data.find(function(d){return d.__source.index===index}));return params}},{key:"draw",value:function(_ref2){var _this$props=this.props,filled=_this$props.filled,wireframe=_this$props.wireframe,_this$state=this.state,topModel=_this$state.topModel,
sideModel=_this$state.sideModel;_this$state=_this$state.polygonTesselator;_ref2=Object.assign({},_ref2.uniforms,{extruded:!!_this$props.extruded,elevationScale:_this$props.elevationScale});sideModel&&(sideModel.setInstanceCount(_this$state.instanceCount-1),sideModel.setUniforms(_ref2),wireframe&&(sideModel.setDrawMode(3),sideModel.setUniforms({isWireframe:!0}).draw()),filled&&(sideModel.setDrawMode(6),sideModel.setUniforms({isWireframe:!1}).draw()));topModel&&(topModel.setVertexCount(_this$state.vertexCount),
topModel.setUniforms(_ref2).draw())}},{key:"updateState",value:function(updateParams){(0,_get2["default"])((0,_getPrototypeOf2["default"])(SolidPolygonLayer.prototype),"updateState",this).call(this,updateParams);this.updateGeometry(updateParams);var props=updateParams.props,oldProps=updateParams.oldProps;updateParams=updateParams.changeFlags;var attributeManager=this.getAttributeManager();if(updateParams.extensionsChanged||props.filled!==oldProps.filled||props.extruded!==oldProps.extruded)this.state.models&&
this.state.models.forEach(function(model){return model["delete"]()}),this.setState(this._getModels(this.context.gl)),attributeManager.invalidateAll()}},{key:"updateGeometry",value:function(_ref3){var props=_ref3.props;_ref3=_ref3.changeFlags;if(_ref3.dataChanged||_ref3.updateTriggersChanged&&(_ref3.updateTriggersChanged.all||_ref3.updateTriggersChanged.getPolygon)){var polygonTesselator=this.state.polygonTesselator,buffers=props.data.attributes||{};polygonTesselator.updateGeometry({data:props.data,
normalize:props._normalize,geometryBuffer:buffers.getPolygon,buffers:buffers,getGeometry:props.getPolygon,positionFormat:props.positionFormat,wrapLongitude:props.wrapLongitude,resolution:this.context.viewport.resolution,fp64:this.use64bitPositions(),dataChanged:_ref3.dataChanged});this.setState({numInstances:polygonTesselator.instanceCount,startIndices:polygonTesselator.vertexStarts});_ref3.dataChanged||this.getAttributeManager().invalidateAll()}}},{key:"_getModels",value:function(gl){var _this$props2=
this.props,id=_this$props2.id,extruded=_this$props2.extruded;if(_this$props2.filled){_this$props2=this.getShaders(_solidPolygonLayerVertexTop["default"]);_this$props2.defines.NON_INSTANCED_MODEL=1;var topModel=new _core2.Model(gl,Object.assign({},_this$props2,{id:"".concat(id,"-top"),drawMode:4,attributes:{vertexPositions:new Float32Array([0,1])},uniforms:{isWireframe:!1,isSideVertex:!1},vertexCount:0,isIndexed:!0}))}if(extruded){var sideModel=new _core2.Model(gl,Object.assign({},this.getShaders(_solidPolygonLayerVertexSide["default"]),
{id:"".concat(id,"-side"),geometry:new _core2.Geometry({drawMode:1,vertexCount:4,attributes:{vertexPositions:{size:2,value:new Float32Array([1,0,0,0,0,1,1,1])}}}),instanceCount:0,isInstanced:1}));sideModel.userData.excludeAttributes={indices:!0}}return{models:[sideModel,topModel].filter(Boolean),topModel:topModel,sideModel:sideModel}}},{key:"calculateIndices",value:function(attribute){var polygonTesselator=this.state.polygonTesselator;attribute.startIndices=polygonTesselator.indexStarts;attribute.value=
polygonTesselator.get("indices")}},{key:"calculatePositions",value:function(attribute){var polygonTesselator=this.state.polygonTesselator;attribute.startIndices=polygonTesselator.vertexStarts;attribute.value=polygonTesselator.get("positions")}},{key:"calculateVertexValid",value:function(attribute){attribute.value=this.state.polygonTesselator.get("vertexValid")}},{key:"wrapLongitude",get:function(){return!1}}]);return SolidPolygonLayer}(_core.Layer);exports["default"]=global;global.layerName="SolidPolygonLayer";
global.defaultProps=require}
//# sourceMappingURL=module$node_modules$$deck_DOT_gl$layers$dist$es5$solid_polygon_layer$solid_polygon_layer.js.map
