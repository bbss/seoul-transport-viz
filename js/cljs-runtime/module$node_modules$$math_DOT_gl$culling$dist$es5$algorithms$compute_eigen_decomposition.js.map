{
"version":3,
"file":"module$node_modules$$math_DOT_gl$culling$dist$es5$algorithms$compute_eigen_decomposition.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/@math_DOT_gl/culling/dist/es5/algorithms/compute-eigen-decomposition.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$math_DOT_gl$culling$dist$es5$algorithms$compute_eigen_decomposition\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = computeEigenDecomposition;\n\nvar _core = require(\"@math.gl/core\");\n\nvar scratchMatrix = new _core.Matrix3();\nvar scratchUnitary = new _core.Matrix3();\nvar scratchDiagonal = new _core.Matrix3();\nvar jMatrix = new _core.Matrix3();\nvar jMatrixTranspose = new _core.Matrix3();\n\nfunction computeEigenDecomposition(matrix) {\n  var result = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var EIGEN_TOLERANCE = _core._MathUtils.EPSILON20;\n  var EIGEN_MAX_SWEEPS = 10;\n  var count = 0;\n  var sweep = 0;\n  var unitaryMatrix = scratchUnitary;\n  var diagonalMatrix = scratchDiagonal;\n  unitaryMatrix.identity();\n  diagonalMatrix.copy(matrix);\n  var epsilon = EIGEN_TOLERANCE * computeFrobeniusNorm(diagonalMatrix);\n\n  while (sweep < EIGEN_MAX_SWEEPS && offDiagonalFrobeniusNorm(diagonalMatrix) > epsilon) {\n    shurDecomposition(diagonalMatrix, jMatrix);\n    jMatrixTranspose.copy(jMatrix).transpose();\n    diagonalMatrix.multiplyRight(jMatrix);\n    diagonalMatrix.multiplyLeft(jMatrixTranspose);\n    unitaryMatrix.multiplyRight(jMatrix);\n\n    if (++count > 2) {\n      ++sweep;\n      count = 0;\n    }\n  }\n\n  result.unitary = unitaryMatrix.toTarget(result.unitary);\n  result.diagonal = diagonalMatrix.toTarget(result.diagonal);\n  return result;\n}\n\nfunction computeFrobeniusNorm(matrix) {\n  var norm = 0.0;\n\n  for (var i = 0; i < 9; ++i) {\n    var temp = matrix[i];\n    norm += temp * temp;\n  }\n\n  return Math.sqrt(norm);\n}\n\nvar rowVal = [1, 0, 0];\nvar colVal = [2, 2, 1];\n\nfunction offDiagonalFrobeniusNorm(matrix) {\n  var norm = 0.0;\n\n  for (var i = 0; i < 3; ++i) {\n    var temp = matrix[scratchMatrix.getElementIndex(colVal[i], rowVal[i])];\n    norm += 2.0 * temp * temp;\n  }\n\n  return Math.sqrt(norm);\n}\n\nfunction shurDecomposition(matrix, result) {\n  var tolerance = _core._MathUtils.EPSILON15;\n  var maxDiagonal = 0.0;\n  var rotAxis = 1;\n\n  for (var i = 0; i < 3; ++i) {\n    var temp = Math.abs(matrix[scratchMatrix.getElementIndex(colVal[i], rowVal[i])]);\n\n    if (temp > maxDiagonal) {\n      rotAxis = i;\n      maxDiagonal = temp;\n    }\n  }\n\n  var p = rowVal[rotAxis];\n  var q = colVal[rotAxis];\n  var c = 1.0;\n  var s = 0.0;\n\n  if (Math.abs(matrix[scratchMatrix.getElementIndex(q, p)]) > tolerance) {\n    var qq = matrix[scratchMatrix.getElementIndex(q, q)];\n    var pp = matrix[scratchMatrix.getElementIndex(p, p)];\n    var qp = matrix[scratchMatrix.getElementIndex(q, p)];\n    var tau = (qq - pp) / 2.0 / qp;\n    var t;\n\n    if (tau < 0.0) {\n      t = -1.0 / (-tau + Math.sqrt(1.0 + tau * tau));\n    } else {\n      t = 1.0 / (tau + Math.sqrt(1.0 + tau * tau));\n    }\n\n    c = 1.0 / Math.sqrt(1.0 + t * t);\n    s = t * c;\n  }\n\n  _core.Matrix3.IDENTITY.to(result);\n\n  result[scratchMatrix.getElementIndex(p, p)] = result[scratchMatrix.getElementIndex(q, q)] = c;\n  result[scratchMatrix.getElementIndex(q, p)] = s;\n  result[scratchMatrix.getElementIndex(p, q)] = -s;\n  return result;\n}\n//# sourceMappingURL=compute-eigen-decomposition.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","offDiagonalFrobeniusNorm","matrix","norm","i","temp","scratchMatrix","getElementIndex","colVal","rowVal","Math","sqrt","Object","defineProperty","value","computeEigenDecomposition","result","arguments","length","undefined","EIGEN_TOLERANCE","_core","_MathUtils","EPSILON20","count","sweep","unitaryMatrix","scratchUnitary","diagonalMatrix","scratchDiagonal","identity","copy","EIGEN_MAX_SWEEPS","epsilon","jMatrix","tolerance","EPSILON15","maxDiagonal","rotAxis","abs","p","q","c","s","qq","pp","qp","tau","t","Matrix3","IDENTITY","to","jMatrixTranspose","transpose","multiplyRight","multiplyLeft","unitary","toTarget","diagonal"]
}
