shadow$provide.module$node_modules$$luma_DOT_gl$gltools$dist$es5$context$context=function(global,require,module,exports){function instrumentGLContext(gl){var options=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{};if(!gl||gl._instrumented)return gl;var JSCompiler_temp;(JSCompiler_temp=gl._version)||(JSCompiler_temp="undefined"!==typeof WebGL2RenderingContext&&gl instanceof WebGL2RenderingContext?2:1);gl._version=JSCompiler_temp;gl.luma=gl.luma||{};gl.luma.canvasSizeInfo=gl.luma.canvasSizeInfo||
{};JSCompiler_temp=options=Object.assign({},CONTEXT_DEFAULTS,options);var debug=JSCompiler_temp.debug;JSCompiler_temp.manageState&&(0,_trackContextState["default"])(gl,{copyState:!1,log:function(){for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _utils.log.log.apply(_utils.log,[1].concat(args))()}});isBrowser&&debug&&(_env.global.makeDebugContext?(gl=_env.global.makeDebugContext(gl,options),_utils.log.level=Math.max(_utils.log.level,1)):_utils.log.warn('WebGL debug mode not activated. import "@luma.gl/debug" to enable.')());
gl._instrumented=!0;return gl}function getContextDebugInfo(gl){var vendorMasked=gl.getParameter(7936),rendererMasked=gl.getParameter(7937),ext=gl.getExtension("WEBGL_debug_renderer_info"),vendorUnmasked=ext&&gl.getParameter(ext.UNMASKED_VENDOR_WEBGL||7936);ext=ext&&gl.getParameter(ext.UNMASKED_RENDERER_WEBGL||7937);return{vendor:vendorUnmasked||vendorMasked,renderer:ext||rendererMasked,vendorMasked:vendorMasked,rendererMasked:rendererMasked,version:gl.getParameter(7938),shadingLanguageVersion:gl.getParameter(35724)}}
function createBrowserContext(canvas,options){var onError=options.onError,onCreateError=function(error){return onError("WebGL context: ".concat(error.statusMessage||"error"))};canvas.addEventListener("webglcontextcreationerror",onCreateError,!1);var _options$webgl=options.webgl1;_options$webgl=void 0===_options$webgl?!0:_options$webgl;var _options$webgl2=options.webgl2;_options$webgl2=void 0===_options$webgl2?!0:_options$webgl2;var gl=null;_options$webgl2&&(gl=(gl=gl||canvas.getContext("webgl2",options))||
canvas.getContext("experimental-webgl2",options));_options$webgl&&(gl=(gl=gl||canvas.getContext("webgl",options))||canvas.getContext("experimental-webgl",options));canvas.removeEventListener("webglcontextcreationerror",onCreateError,!1);return gl?gl:onError("Failed to create ".concat(_options$webgl2&&!_options$webgl?"WebGL2":"WebGL"," context"))}function getCanvas(_ref){var canvas=_ref.canvas,_ref$width=_ref.width;_ref$width=void 0===_ref$width?800:_ref$width;var _ref$height=_ref.height;_ref$height=
void 0===_ref$height?600:_ref$height;_ref=_ref.onError;"string"===typeof canvas?(isPage&&"complete"===document.readyState||_ref("createGLContext called on canvas '".concat(canvas,"' before page was loaded")),canvas=document.getElementById(canvas)):canvas||(canvas=document.createElement("canvas"),canvas.id="lumagl-canvas",canvas.style.width=Number.isFinite(_ref$width)?"".concat(_ref$width,"px"):"100%",canvas.style.height=Number.isFinite(_ref$height)?"".concat(_ref$height,"px"):"100%",document.body.insertBefore(canvas,
document.body.firstChild));return canvas}function logInfo(gl){var webGL=(0,_utils.isWebGL2)(gl)?"WebGL2":"WebGL1",info=getContextDebugInfo(gl);info=info?"(".concat(info.vendor,",").concat(info.renderer,")"):"";gl=gl.debug?" debug":"";_utils.log.info(1,"".concat(webGL).concat(gl," context ").concat(info))()}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.createGLContext=function(){function onError(message){if(options.throwOnError)throw Error(message);
console.error(message);return null}var options=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};(0,_utils.assert)(isBrowser,"createGLContext on available in the browser.\nCreate your own headless context or use 'createHeadlessContext' from @luma.gl/test-utils");var _options=options=Object.assign({},CONTEXT_DEFAULTS,options),width=_options.width;_options=_options.height;options.onError=onError;width=getCanvas({canvas:options.canvas,width:width,height:_options,onError:onError});width=createBrowserContext(width,
options);if(!width)return null;width=instrumentGLContext(width,options);logInfo(width);return width};exports.instrumentGLContext=instrumentGLContext;exports.getContextDebugInfo=getContextDebugInfo;exports.resizeGLContext=function(gl){var options=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{};if(gl.canvas){var devicePixelRatio=(0,_utils.getDevicePixelRatio)(options.useDevicePixels),clientWidth="width"in options?options.width:gl.canvas.clientWidth;options="height"in options?options.height:
gl.canvas.clientHeight;clientWidth&&options||(_utils.log.log(1,"Canvas clientWidth/clientHeight is 0")(),devicePixelRatio=1,clientWidth=gl.canvas.width||1,options=gl.canvas.height||1);gl.luma=gl.luma||{};gl.luma.canvasSizeInfo=gl.luma.canvasSizeInfo||{};var cachedSize=gl.luma.canvasSizeInfo;if(cachedSize.clientWidth!==clientWidth||cachedSize.clientHeight!==options||cachedSize.devicePixelRatio!==devicePixelRatio){var clampedPixelRatio=devicePixelRatio;cachedSize=Math.floor(clientWidth*clampedPixelRatio);
clampedPixelRatio=Math.floor(options*clampedPixelRatio);gl.canvas.width=cachedSize;gl.canvas.height=clampedPixelRatio;if(gl.drawingBufferWidth!==cachedSize||gl.drawingBufferHeight!==clampedPixelRatio)_utils.log.warn("Device pixel ratio clamped")(),clampedPixelRatio=Math.min(gl.drawingBufferWidth/clientWidth,gl.drawingBufferHeight/options),gl.canvas.width=Math.floor(clientWidth*clampedPixelRatio),gl.canvas.height=Math.floor(options*clampedPixelRatio);Object.assign(gl.luma.canvasSizeInfo,{clientWidth:clientWidth,
clientHeight:options,devicePixelRatio:devicePixelRatio})}}else(devicePixelRatio=gl.getExtension("STACKGL_resize_drawingbuffer"))&&"width"in options&&"height"in options&&devicePixelRatio.resize(options.width,options.height)};exports.ERR_WEBGL2=exports.ERR_WEBGL=exports.ERR_CONTEXT=void 0;var _env=require("module$node_modules$probe_DOT_gl$env"),_trackContextState=global(require("module$node_modules$$luma_DOT_gl$gltools$dist$es5$state_tracker$track_context_state")),_utils=require("module$node_modules$$luma_DOT_gl$gltools$dist$es5$utils$index");
exports.ERR_CONTEXT="Invalid WebGLRenderingContext";exports.ERR_WEBGL="Invalid WebGLRenderingContext";exports.ERR_WEBGL2="Requires WebGL2";var isBrowser=(0,_env.isBrowser)(),isPage=isBrowser&&"undefined"!==typeof document,CONTEXT_DEFAULTS={webgl2:!0,webgl1:!0,throwOnError:!0,manageState:!0,canvas:null,debug:!1,width:800,height:600}}
//# sourceMappingURL=module$node_modules$$luma_DOT_gl$gltools$dist$es5$context$context.js.map
