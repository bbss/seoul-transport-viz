{
"version":3,
"file":"module$node_modules$$deck_DOT_gl$layers$dist$es5$solid_polygon_layer$solid_polygon_layer.js",
"lineCount":18,
"mappings":"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",
"sources":["node_modules/@deck_DOT_gl/layers/dist/es5/solid-polygon-layer/solid-polygon-layer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$deck_DOT_gl$layers$dist$es5$solid_polygon_layer$solid_polygon_layer\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _core = require(\"@deck.gl/core\");\n\nvar _core2 = require(\"@luma.gl/core\");\n\nvar _polygonTesselator = _interopRequireDefault(require(\"./polygon-tesselator\"));\n\nvar _solidPolygonLayerVertexTop = _interopRequireDefault(require(\"./solid-polygon-layer-vertex-top.glsl\"));\n\nvar _solidPolygonLayerVertexSide = _interopRequireDefault(require(\"./solid-polygon-layer-vertex-side.glsl\"));\n\nvar _solidPolygonLayerFragment = _interopRequireDefault(require(\"./solid-polygon-layer-fragment.glsl\"));\n\nvar DEFAULT_COLOR = [0, 0, 0, 255];\nvar defaultProps = {\n  filled: true,\n  extruded: false,\n  wireframe: false,\n  _normalize: true,\n  elevationScale: {\n    type: 'number',\n    min: 0,\n    value: 1\n  },\n  getPolygon: {\n    type: 'accessor',\n    value: function value(f) {\n      return f.polygon;\n    }\n  },\n  getElevation: {\n    type: 'accessor',\n    value: 1000\n  },\n  getFillColor: {\n    type: 'accessor',\n    value: DEFAULT_COLOR\n  },\n  getLineColor: {\n    type: 'accessor',\n    value: DEFAULT_COLOR\n  },\n  material: true\n};\nvar ATTRIBUTE_TRANSITION = {\n  enter: function enter(value, chunk) {\n    return chunk.length ? chunk.subarray(chunk.length - value.length) : value;\n  }\n};\n\nvar SolidPolygonLayer = function (_Layer) {\n  (0, _inherits2[\"default\"])(SolidPolygonLayer, _Layer);\n\n  function SolidPolygonLayer() {\n    (0, _classCallCheck2[\"default\"])(this, SolidPolygonLayer);\n    return (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(SolidPolygonLayer).apply(this, arguments));\n  }\n\n  (0, _createClass2[\"default\"])(SolidPolygonLayer, [{\n    key: \"getShaders\",\n    value: function getShaders(vs) {\n      return (0, _get2[\"default\"])((0, _getPrototypeOf2[\"default\"])(SolidPolygonLayer.prototype), \"getShaders\", this).call(this, {\n        vs: vs,\n        fs: _solidPolygonLayerFragment[\"default\"],\n        defines: {},\n        modules: [_core.project32, _core.gouraudLighting, _core.picking]\n      });\n    }\n  }, {\n    key: \"initializeState\",\n    value: function initializeState() {\n      var _this = this;\n\n      var _this$context = this.context,\n          gl = _this$context.gl,\n          viewport = _this$context.viewport;\n      var coordinateSystem = this.props.coordinateSystem;\n\n      if (viewport.isGeospatial && coordinateSystem === _core.COORDINATE_SYSTEM.DEFAULT) {\n        coordinateSystem = _core.COORDINATE_SYSTEM.LNGLAT;\n      }\n\n      this.setState({\n        numInstances: 0,\n        polygonTesselator: new _polygonTesselator[\"default\"]({\n          preproject: coordinateSystem === _core.COORDINATE_SYSTEM.LNGLAT && viewport.projectFlat,\n          fp64: this.use64bitPositions(),\n          IndexType: !gl || (0, _core2.hasFeatures)(gl, _core2.FEATURES.ELEMENT_INDEX_UINT32) ? Uint32Array : Uint16Array\n        })\n      });\n      var attributeManager = this.getAttributeManager();\n      var noAlloc = true;\n      attributeManager.remove(['instancePickingColors']);\n      attributeManager.add({\n        indices: {\n          size: 1,\n          isIndexed: true,\n          update: this.calculateIndices,\n          noAlloc: noAlloc\n        },\n        positions: {\n          size: 3,\n          type: 5130,\n          fp64: this.use64bitPositions(),\n          transition: ATTRIBUTE_TRANSITION,\n          accessor: 'getPolygon',\n          update: this.calculatePositions,\n          noAlloc: noAlloc,\n          shaderAttributes: {\n            positions: {\n              vertexOffset: 0,\n              divisor: 0\n            },\n            instancePositions: {\n              vertexOffset: 0,\n              divisor: 1\n            },\n            nextPositions: {\n              vertexOffset: 1,\n              divisor: 1\n            }\n          }\n        },\n        vertexValid: {\n          size: 1,\n          divisor: 1,\n          type: 5121,\n          update: this.calculateVertexValid,\n          noAlloc: noAlloc\n        },\n        elevations: {\n          size: 1,\n          transition: ATTRIBUTE_TRANSITION,\n          accessor: 'getElevation',\n          shaderAttributes: {\n            elevations: {\n              divisor: 0\n            },\n            instanceElevations: {\n              divisor: 1\n            }\n          }\n        },\n        fillColors: {\n          alias: 'colors',\n          size: this.props.colorFormat.length,\n          type: 5121,\n          normalized: true,\n          transition: ATTRIBUTE_TRANSITION,\n          accessor: 'getFillColor',\n          defaultValue: DEFAULT_COLOR,\n          shaderAttributes: {\n            fillColors: {\n              divisor: 0\n            },\n            instanceFillColors: {\n              divisor: 1\n            }\n          }\n        },\n        lineColors: {\n          alias: 'colors',\n          size: this.props.colorFormat.length,\n          type: 5121,\n          normalized: true,\n          transition: ATTRIBUTE_TRANSITION,\n          accessor: 'getLineColor',\n          defaultValue: DEFAULT_COLOR,\n          shaderAttributes: {\n            lineColors: {\n              divisor: 0\n            },\n            instanceLineColors: {\n              divisor: 1\n            }\n          }\n        },\n        pickingColors: {\n          size: 3,\n          type: 5121,\n          accessor: function accessor(object, _ref) {\n            var index = _ref.index,\n                value = _ref.target;\n            return _this.encodePickingColor(object && object.__source ? object.__source.index : index, value);\n          },\n          shaderAttributes: {\n            pickingColors: {\n              divisor: 0\n            },\n            instancePickingColors: {\n              divisor: 1\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: \"getPickingInfo\",\n    value: function getPickingInfo(params) {\n      var info = (0, _get2[\"default\"])((0, _getPrototypeOf2[\"default\"])(SolidPolygonLayer.prototype), \"getPickingInfo\", this).call(this, params);\n      var index = info.index;\n      var data = this.props.data;\n\n      if (data[0] && data[0].__source) {\n        info.object = data.find(function (d) {\n          return d.__source.index === index;\n        });\n      }\n\n      return info;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(_ref2) {\n      var uniforms = _ref2.uniforms;\n      var _this$props = this.props,\n          extruded = _this$props.extruded,\n          filled = _this$props.filled,\n          wireframe = _this$props.wireframe,\n          elevationScale = _this$props.elevationScale;\n      var _this$state = this.state,\n          topModel = _this$state.topModel,\n          sideModel = _this$state.sideModel,\n          polygonTesselator = _this$state.polygonTesselator;\n      var renderUniforms = Object.assign({}, uniforms, {\n        extruded: Boolean(extruded),\n        elevationScale: elevationScale\n      });\n\n      if (sideModel) {\n        sideModel.setInstanceCount(polygonTesselator.instanceCount - 1);\n        sideModel.setUniforms(renderUniforms);\n\n        if (wireframe) {\n          sideModel.setDrawMode(3);\n          sideModel.setUniforms({\n            isWireframe: true\n          }).draw();\n        }\n\n        if (filled) {\n          sideModel.setDrawMode(6);\n          sideModel.setUniforms({\n            isWireframe: false\n          }).draw();\n        }\n      }\n\n      if (topModel) {\n        topModel.setVertexCount(polygonTesselator.vertexCount);\n        topModel.setUniforms(renderUniforms).draw();\n      }\n    }\n  }, {\n    key: \"updateState\",\n    value: function updateState(updateParams) {\n      (0, _get2[\"default\"])((0, _getPrototypeOf2[\"default\"])(SolidPolygonLayer.prototype), \"updateState\", this).call(this, updateParams);\n      this.updateGeometry(updateParams);\n      var props = updateParams.props,\n          oldProps = updateParams.oldProps,\n          changeFlags = updateParams.changeFlags;\n      var attributeManager = this.getAttributeManager();\n      var regenerateModels = changeFlags.extensionsChanged || props.filled !== oldProps.filled || props.extruded !== oldProps.extruded;\n\n      if (regenerateModels) {\n        if (this.state.models) {\n          this.state.models.forEach(function (model) {\n            return model[\"delete\"]();\n          });\n        }\n\n        this.setState(this._getModels(this.context.gl));\n        attributeManager.invalidateAll();\n      }\n    }\n  }, {\n    key: \"updateGeometry\",\n    value: function updateGeometry(_ref3) {\n      var props = _ref3.props,\n          oldProps = _ref3.oldProps,\n          changeFlags = _ref3.changeFlags;\n      var geometryConfigChanged = changeFlags.dataChanged || changeFlags.updateTriggersChanged && (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getPolygon);\n\n      if (geometryConfigChanged) {\n        var polygonTesselator = this.state.polygonTesselator;\n        var buffers = props.data.attributes || {};\n        polygonTesselator.updateGeometry({\n          data: props.data,\n          normalize: props._normalize,\n          geometryBuffer: buffers.getPolygon,\n          buffers: buffers,\n          getGeometry: props.getPolygon,\n          positionFormat: props.positionFormat,\n          wrapLongitude: props.wrapLongitude,\n          resolution: this.context.viewport.resolution,\n          fp64: this.use64bitPositions(),\n          dataChanged: changeFlags.dataChanged\n        });\n        this.setState({\n          numInstances: polygonTesselator.instanceCount,\n          startIndices: polygonTesselator.vertexStarts\n        });\n\n        if (!changeFlags.dataChanged) {\n          this.getAttributeManager().invalidateAll();\n        }\n      }\n    }\n  }, {\n    key: \"_getModels\",\n    value: function _getModels(gl) {\n      var _this$props2 = this.props,\n          id = _this$props2.id,\n          filled = _this$props2.filled,\n          extruded = _this$props2.extruded;\n      var topModel;\n      var sideModel;\n\n      if (filled) {\n        var shaders = this.getShaders(_solidPolygonLayerVertexTop[\"default\"]);\n        shaders.defines.NON_INSTANCED_MODEL = 1;\n        topModel = new _core2.Model(gl, Object.assign({}, shaders, {\n          id: \"\".concat(id, \"-top\"),\n          drawMode: 4,\n          attributes: {\n            vertexPositions: new Float32Array([0, 1])\n          },\n          uniforms: {\n            isWireframe: false,\n            isSideVertex: false\n          },\n          vertexCount: 0,\n          isIndexed: true\n        }));\n      }\n\n      if (extruded) {\n        sideModel = new _core2.Model(gl, Object.assign({}, this.getShaders(_solidPolygonLayerVertexSide[\"default\"]), {\n          id: \"\".concat(id, \"-side\"),\n          geometry: new _core2.Geometry({\n            drawMode: 1,\n            vertexCount: 4,\n            attributes: {\n              vertexPositions: {\n                size: 2,\n                value: new Float32Array([1, 0, 0, 0, 0, 1, 1, 1])\n              }\n            }\n          }),\n          instanceCount: 0,\n          isInstanced: 1\n        }));\n        sideModel.userData.excludeAttributes = {\n          indices: true\n        };\n      }\n\n      return {\n        models: [sideModel, topModel].filter(Boolean),\n        topModel: topModel,\n        sideModel: sideModel\n      };\n    }\n  }, {\n    key: \"calculateIndices\",\n    value: function calculateIndices(attribute) {\n      var polygonTesselator = this.state.polygonTesselator;\n      attribute.startIndices = polygonTesselator.indexStarts;\n      attribute.value = polygonTesselator.get('indices');\n    }\n  }, {\n    key: \"calculatePositions\",\n    value: function calculatePositions(attribute) {\n      var polygonTesselator = this.state.polygonTesselator;\n      attribute.startIndices = polygonTesselator.vertexStarts;\n      attribute.value = polygonTesselator.get('positions');\n    }\n  }, {\n    key: \"calculateVertexValid\",\n    value: function calculateVertexValid(attribute) {\n      attribute.value = this.state.polygonTesselator.get('vertexValid');\n    }\n  }, {\n    key: \"wrapLongitude\",\n    get: function get() {\n      return false;\n    }\n  }]);\n  return SolidPolygonLayer;\n}(_core.Layer);\n\nexports[\"default\"] = SolidPolygonLayer;\nSolidPolygonLayer.layerName = 'SolidPolygonLayer';\nSolidPolygonLayer.defaultProps = defaultProps;\n//# sourceMappingURL=solid-polygon-layer.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","Object","defineProperty","value","_classCallCheck2","_createClass2","_possibleConstructorReturn2","_getPrototypeOf2","_get2","_inherits2","_core","_core2","_polygonTesselator","_solidPolygonLayerVertexTop","_solidPolygonLayerVertexSide","_solidPolygonLayerFragment","DEFAULT_COLOR","defaultProps","filled","extruded","wireframe","_normalize","elevationScale","type","min","getPolygon","f","polygon","getElevation","getFillColor","getLineColor","material","ATTRIBUTE_TRANSITION","enter","chunk","length","subarray","SolidPolygonLayer","_Layer","apply","arguments","key","getShaders","vs","prototype","call","fs","defines","modules","project32","gouraudLighting","picking","initializeState","_this","_this$context","context","gl","viewport","coordinateSystem","props","isGeospatial","COORDINATE_SYSTEM","DEFAULT","LNGLAT","setState","numInstances","polygonTesselator","preproject","projectFlat","fp64","use64bitPositions","IndexType","hasFeatures","FEATURES","ELEMENT_INDEX_UINT32","Uint32Array","Uint16Array","attributeManager","getAttributeManager","remove","add","indices","size","isIndexed","update","calculateIndices","noAlloc","positions","transition","accessor","calculatePositions","shaderAttributes","vertexOffset","divisor","instancePositions","nextPositions","vertexValid","calculateVertexValid","elevations","instanceElevations","fillColors","alias","colorFormat","normalized","defaultValue","instanceFillColors","lineColors","instanceLineColors","pickingColors","object","_ref","index","encodePickingColor","__source","target","instancePickingColors","getPickingInfo","params","info","data","find","d","draw","_ref2","_this$props","_this$state","state","topModel","sideModel","renderUniforms","assign","uniforms","setInstanceCount","instanceCount","setUniforms","setDrawMode","isWireframe","setVertexCount","vertexCount","updateState","updateParams","updateGeometry","oldProps","changeFlags","extensionsChanged","models","forEach","model","_getModels","invalidateAll","_ref3","dataChanged","updateTriggersChanged","all","buffers","attributes","normalize","geometryBuffer","getGeometry","positionFormat","wrapLongitude","resolution","startIndices","vertexStarts","_this$props2","id","shaders","NON_INSTANCED_MODEL","Model","concat","drawMode","vertexPositions","Float32Array","isSideVertex","geometry","Geometry","isInstanced","userData","excludeAttributes","filter","Boolean","attribute","indexStarts","get","Layer","layerName"]
}
