{
"version":3,
"file":"module$node_modules$$deck_DOT_gl$layers$dist$es5$icon_layer$icon_layer.js",
"lineCount":13,
"mappings":"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",
"sources":["node_modules/@deck_DOT_gl/layers/dist/es5/icon-layer/icon-layer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$deck_DOT_gl$layers$dist$es5$icon_layer$icon_layer\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _core = require(\"@deck.gl/core\");\n\nvar _core2 = require(\"@luma.gl/core\");\n\nvar _iconLayerVertex = _interopRequireDefault(require(\"./icon-layer-vertex.glsl\"));\n\nvar _iconLayerFragment = _interopRequireDefault(require(\"./icon-layer-fragment.glsl\"));\n\nvar _iconManager = _interopRequireDefault(require(\"./icon-manager\"));\n\nvar DEFAULT_COLOR = [0, 0, 0, 255];\nvar defaultProps = {\n  iconAtlas: {\n    type: 'object',\n    value: null,\n    async: true\n  },\n  iconMapping: {\n    type: 'object',\n    value: {},\n    async: true\n  },\n  sizeScale: {\n    type: 'number',\n    value: 1,\n    min: 0\n  },\n  billboard: true,\n  sizeUnits: 'pixels',\n  sizeMinPixels: {\n    type: 'number',\n    min: 0,\n    value: 0\n  },\n  sizeMaxPixels: {\n    type: 'number',\n    min: 0,\n    value: Number.MAX_SAFE_INTEGER\n  },\n  alphaCutoff: {\n    type: 'number',\n    value: 0.05,\n    min: 0,\n    max: 1\n  },\n  getPosition: {\n    type: 'accessor',\n    value: function value(x) {\n      return x.position;\n    }\n  },\n  getIcon: {\n    type: 'accessor',\n    value: function value(x) {\n      return x.icon;\n    }\n  },\n  getColor: {\n    type: 'accessor',\n    value: DEFAULT_COLOR\n  },\n  getSize: {\n    type: 'accessor',\n    value: 1\n  },\n  getAngle: {\n    type: 'accessor',\n    value: 0\n  },\n  getPixelOffset: {\n    type: 'accessor',\n    value: [0, 0]\n  }\n};\n\nvar IconLayer = function (_Layer) {\n  (0, _inherits2[\"default\"])(IconLayer, _Layer);\n\n  function IconLayer() {\n    (0, _classCallCheck2[\"default\"])(this, IconLayer);\n    return (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(IconLayer).apply(this, arguments));\n  }\n\n  (0, _createClass2[\"default\"])(IconLayer, [{\n    key: \"getShaders\",\n    value: function getShaders() {\n      return (0, _get2[\"default\"])((0, _getPrototypeOf2[\"default\"])(IconLayer.prototype), \"getShaders\", this).call(this, {\n        vs: _iconLayerVertex[\"default\"],\n        fs: _iconLayerFragment[\"default\"],\n        modules: [_core.project32, _core.picking]\n      });\n    }\n  }, {\n    key: \"initializeState\",\n    value: function initializeState() {\n      var _this = this;\n\n      this.state = {\n        iconManager: new _iconManager[\"default\"](this.context.gl, {\n          onUpdate: function onUpdate() {\n            return _this._onUpdate();\n          }\n        })\n      };\n      var attributeManager = this.getAttributeManager();\n      attributeManager.addInstanced({\n        instancePositions: {\n          size: 3,\n          type: 5130,\n          fp64: this.use64bitPositions(),\n          transition: true,\n          accessor: 'getPosition'\n        },\n        instanceSizes: {\n          size: 1,\n          transition: true,\n          accessor: 'getSize',\n          defaultValue: 1\n        },\n        instanceOffsets: {\n          size: 2,\n          accessor: 'getIcon',\n          transform: this.getInstanceOffset\n        },\n        instanceIconFrames: {\n          size: 4,\n          accessor: 'getIcon',\n          transform: this.getInstanceIconFrame\n        },\n        instanceColorModes: {\n          size: 1,\n          type: 5121,\n          accessor: 'getIcon',\n          transform: this.getInstanceColorMode\n        },\n        instanceColors: {\n          size: this.props.colorFormat.length,\n          type: 5121,\n          normalized: true,\n          transition: true,\n          accessor: 'getColor',\n          defaultValue: DEFAULT_COLOR\n        },\n        instanceAngles: {\n          size: 1,\n          transition: true,\n          accessor: 'getAngle'\n        },\n        instancePixelOffset: {\n          size: 2,\n          transition: true,\n          accessor: 'getPixelOffset'\n        }\n      });\n    }\n  }, {\n    key: \"updateState\",\n    value: function updateState(_ref) {\n      var oldProps = _ref.oldProps,\n          props = _ref.props,\n          changeFlags = _ref.changeFlags;\n      (0, _get2[\"default\"])((0, _getPrototypeOf2[\"default\"])(IconLayer.prototype), \"updateState\", this).call(this, {\n        props: props,\n        oldProps: oldProps,\n        changeFlags: changeFlags\n      });\n      var attributeManager = this.getAttributeManager();\n      var iconAtlas = props.iconAtlas,\n          iconMapping = props.iconMapping,\n          data = props.data,\n          getIcon = props.getIcon;\n      var iconManager = this.state.iconManager;\n      iconManager.setProps({\n        loadOptions: props.loadOptions\n      });\n      var iconMappingChanged = false;\n      var prePacked = iconAtlas || this.internalState.isAsyncPropLoading('iconAtlas');\n\n      if (prePacked) {\n        if (oldProps.iconAtlas !== props.iconAtlas) {\n          iconManager.setProps({\n            iconAtlas: iconAtlas,\n            autoPacking: false\n          });\n        }\n\n        if (oldProps.iconMapping !== props.iconMapping) {\n          iconManager.setProps({\n            iconMapping: iconMapping\n          });\n          iconMappingChanged = true;\n        }\n      } else {\n        iconManager.setProps({\n          autoPacking: true\n        });\n      }\n\n      if (changeFlags.dataChanged || changeFlags.updateTriggersChanged && (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getIcon)) {\n        iconManager.setProps({\n          data: data,\n          getIcon: getIcon\n        });\n        iconMappingChanged = true;\n      }\n\n      if (iconMappingChanged) {\n        attributeManager.invalidate('instanceOffsets');\n        attributeManager.invalidate('instanceIconFrames');\n        attributeManager.invalidate('instanceColorModes');\n      }\n\n      if (changeFlags.extensionsChanged) {\n        var gl = this.context.gl;\n\n        if (this.state.model) {\n          this.state.model[\"delete\"]();\n        }\n\n        this.setState({\n          model: this._getModel(gl)\n        });\n        attributeManager.invalidateAll();\n      }\n    }\n  }, {\n    key: \"finalizeState\",\n    value: function finalizeState() {\n      (0, _get2[\"default\"])((0, _getPrototypeOf2[\"default\"])(IconLayer.prototype), \"finalizeState\", this).call(this);\n      this.state.iconManager.finalize();\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(_ref2) {\n      var uniforms = _ref2.uniforms;\n      var _this$props = this.props,\n          sizeScale = _this$props.sizeScale,\n          sizeMinPixels = _this$props.sizeMinPixels,\n          sizeMaxPixels = _this$props.sizeMaxPixels,\n          sizeUnits = _this$props.sizeUnits,\n          billboard = _this$props.billboard,\n          alphaCutoff = _this$props.alphaCutoff;\n      var iconManager = this.state.iconManager;\n      var viewport = this.context.viewport;\n      var iconsTexture = iconManager.getTexture();\n\n      if (iconsTexture && iconsTexture.loaded) {\n        this.state.model.setUniforms(Object.assign({}, uniforms, {\n          iconsTexture: iconsTexture,\n          iconsTextureDim: [iconsTexture.width, iconsTexture.height],\n          sizeScale: sizeScale * (sizeUnits === 'pixels' ? viewport.metersPerPixel : 1),\n          sizeMinPixels: sizeMinPixels,\n          sizeMaxPixels: sizeMaxPixels,\n          billboard: billboard,\n          alphaCutoff: alphaCutoff\n        })).draw();\n      }\n    }\n  }, {\n    key: \"_getModel\",\n    value: function _getModel(gl) {\n      var positions = [-1, -1, -1, 1, 1, 1, 1, -1];\n      return new _core2.Model(gl, Object.assign({}, this.getShaders(), {\n        id: this.props.id,\n        geometry: new _core2.Geometry({\n          drawMode: 6,\n          attributes: {\n            positions: {\n              size: 2,\n              value: new Float32Array(positions)\n            }\n          }\n        }),\n        isInstanced: true\n      }));\n    }\n  }, {\n    key: \"_onUpdate\",\n    value: function _onUpdate() {\n      this.setNeedsRedraw();\n    }\n  }, {\n    key: \"getInstanceOffset\",\n    value: function getInstanceOffset(icon) {\n      var rect = this.state.iconManager.getIconMapping(icon);\n      return [rect.width / 2 - rect.anchorX || 0, rect.height / 2 - rect.anchorY || 0];\n    }\n  }, {\n    key: \"getInstanceColorMode\",\n    value: function getInstanceColorMode(icon) {\n      var mapping = this.state.iconManager.getIconMapping(icon);\n      return mapping.mask ? 1 : 0;\n    }\n  }, {\n    key: \"getInstanceIconFrame\",\n    value: function getInstanceIconFrame(icon) {\n      var rect = this.state.iconManager.getIconMapping(icon);\n      return [rect.x || 0, rect.y || 0, rect.width || 0, rect.height || 0];\n    }\n  }, {\n    key: \"isLoaded\",\n    get: function get() {\n      return (0, _get2[\"default\"])((0, _getPrototypeOf2[\"default\"])(IconLayer.prototype), \"isLoaded\", this) && this.state.iconManager.isLoaded;\n    }\n  }]);\n  return IconLayer;\n}(_core.Layer);\n\nexports[\"default\"] = IconLayer;\nIconLayer.layerName = 'IconLayer';\nIconLayer.defaultProps = defaultProps;\n//# sourceMappingURL=icon-layer.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","Object","defineProperty","value","_classCallCheck2","_createClass2","_possibleConstructorReturn2","_getPrototypeOf2","_get2","_inherits2","_core","_core2","_iconLayerVertex","_iconLayerFragment","_iconManager","DEFAULT_COLOR","defaultProps","iconAtlas","type","async","iconMapping","sizeScale","min","billboard","sizeUnits","sizeMinPixels","sizeMaxPixels","Number","MAX_SAFE_INTEGER","alphaCutoff","max","getPosition","x","position","getIcon","icon","getColor","getSize","getAngle","getPixelOffset","IconLayer","_Layer","apply","arguments","key","getShaders","prototype","call","vs","fs","modules","project32","picking","initializeState","_this","state","iconManager","context","gl","onUpdate","_onUpdate","getAttributeManager","attributeManager","addInstanced","instancePositions","size","fp64","use64bitPositions","transition","accessor","instanceSizes","defaultValue","instanceOffsets","transform","getInstanceOffset","instanceIconFrames","getInstanceIconFrame","instanceColorModes","getInstanceColorMode","instanceColors","props","colorFormat","length","normalized","instanceAngles","instancePixelOffset","updateState","_ref","oldProps","changeFlags","data","setProps","loadOptions","iconMappingChanged","internalState","isAsyncPropLoading","autoPacking","dataChanged","updateTriggersChanged","all","invalidate","extensionsChanged","model","setState","_getModel","invalidateAll","finalizeState","finalize","draw","_ref2","uniforms","_this$props","viewport","iconsTexture","getTexture","loaded","setUniforms","assign","iconsTextureDim","width","height","metersPerPixel","Model","id","geometry","Geometry","drawMode","attributes","positions","Float32Array","isInstanced","setNeedsRedraw","rect","getIconMapping","anchorX","anchorY","mapping","mask","y","get","isLoaded","Layer","layerName"]
}
