shadow$provide.module$node_modules$rxjs$dist$cjs$internal$operators$retry=function(global,require,module,exports){var __extends=this&&this.__extends||function(){var extendStatics=function(d$jscomp$0,b$jscomp$0){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])};return extendStatics(d$jscomp$0,b$jscomp$0)};return function(d,b){function __(){this.constructor=d}extendStatics(d,b);d.prototype=
null===b?Object.create(b):(__.prototype=b.prototype,new __)}}();Object.defineProperty(exports,"__esModule",{value:!0});exports.retry=void 0;global=require("module$node_modules$rxjs$dist$cjs$internal$Subscriber");exports.retry=function(configOrCount){void 0===configOrCount&&(configOrCount=-1);var config=configOrCount&&"object"===typeof configOrCount?configOrCount:{count:configOrCount};return function(source){return source.lift(new RetryOperator(config.count,!!config.resetOnSuccess,source))}};var RetryOperator=
function(){function RetryOperator(count,resetOnSuccess,source){this.count=count;this.resetOnSuccess=resetOnSuccess;this.source=source}RetryOperator.prototype.call=function(subscriber,source){return source.subscribe(new RetrySubscriber(subscriber,this.count,this.resetOnSuccess,this.source))};return RetryOperator}(),RetrySubscriber=function(_super){function RetrySubscriber(destination,count,resetOnSuccess,source){destination=_super.call(this,destination)||this;destination.count=count;destination.resetOnSuccess=
resetOnSuccess;destination.source=source;destination.initialCount=destination.count;return destination}__extends(RetrySubscriber,_super);RetrySubscriber.prototype.next=function(value){_super.prototype.next.call(this,value);this.resetOnSuccess&&(this.count=this.initialCount)};RetrySubscriber.prototype.error=function(err){if(!this.isStopped){var source=this.source,count=this.count;if(0===count)return _super.prototype.error.call(this,err);-1<count&&(this.count=count-1);source.subscribe(this._unsubscribeAndRecycle())}};
return RetrySubscriber}(global.Subscriber)}
//# sourceMappingURL=module$node_modules$rxjs$dist$cjs$internal$operators$retry.js.map
