{
"version":3,
"file":"module$node_modules$hammerjs$hammer.js",
"lineCount":62,
"mappings":"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",
"sources":["node_modules/hammerjs/hammer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$hammerjs$hammer\"] = function(global,require,module,exports) {\n/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n\n};"],
"names":["shadow$provide","global","require","module","exports","window","document","exportName","undefined","setTimeoutContext","fn","timeout","context","setTimeout","bindFn","invokeArrayArg","arg","Array","isArray","each","obj","iterator","i","forEach","length","call","hasOwnProperty","deprecate","method","name","message","deprecationMessage","e","Error","stack","replace","log","console","warn","apply","arguments","inherit","child","base","properties","baseP","prototype","childP","Object","create","constructor","_super","assign","boundFn","boolOrFn","val","args","TYPE_FUNCTION","addEventListeners","target","types","handler","splitStr","type","addEventListener","removeEventListeners","removeEventListener","hasParent","node","parent","parentNode","str","trim","split","inArray","src","find","findByKey","indexOf","toArray","slice","uniqueArray","key","sort","results","values","push","sortUniqueArray","a","b","prefixed","property","prefix","camelProp","toUpperCase","VENDOR_PREFIXES","prop","getWindowForElement","element","doc","ownerDocument","defaultView","parentWindow","Input","manager","callback","self","options","inputTarget","domHandler","this.domHandler","ev","enable","init","createInputInstance","inputClass","Type","SUPPORT_POINTER_EVENTS","PointerEventInput","SUPPORT_ONLY_TOUCH","TouchInput","SUPPORT_TOUCH","TouchMouseInput","MouseInput","inputHandler","eventType","input","pointersLen","pointers","changedPointersLen","changedPointers","isFirst","INPUT_START","isFinal","session","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","center","getCenter","timeStamp","now","deltaTime","angle","getAngle","distance","getDistance","offset","offsetDelta","prevDelta","prevInput","INPUT_END","x","deltaX","y","deltaY","offsetDirection","getDirection","overallVelocityX","overallVelocityY","overallVelocity","abs","end","PROPS_CLIENT_XY","start","scale","rotation","maxPointers","last","lastInterval","INPUT_CANCEL","COMPUTE_INTERVAL","velocity","velocityX","velocityY","direction","srcEvent","emit","recognize","clientX","round","clientY","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","p1","p2","props","PROPS_XY","Math","sqrt","atan2","PI","evEl","MOUSE_ELEMENT_EVENTS","evWin","MOUSE_WINDOW_EVENTS","pressed","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","store","pointerEvents","SingleTouchInput","evTarget","SINGLE_TOUCH_TARGET_EVENTS","SINGLE_TOUCH_WINDOW_EVENTS","started","TOUCH_TARGET_EVENTS","targetIds","getTouches","allTouches","touches","identifier","changedTouches","changedTargetTouches","targetTouches","filter","touch","concat","mouse","primaryTouch","lastTouches","setLastTouch","eventData","lastTouch","lts","removeLastTouch","splice","DEDUP_TIMEOUT","TouchAction","value","set","cleanTouchActions","actions","TOUCH_ACTION_NONE","hasPanX","TOUCH_ACTION_PAN_X","hasPanY","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_AUTO","Recognizer","defaults","id","_uniqueId","val1","val2","state","STATE_POSSIBLE","simultaneous","requireFail","stateStr","STATE_CANCELLED","STATE_ENDED","STATE_CHANGED","STATE_BEGAN","directionStr","getRecognizerByNameIfManager","otherRecognizer","recognizer","get","AttrRecognizer","PanRecognizer","pY","pX","PinchRecognizer","PressRecognizer","_input","_timer","RotateRecognizer","SwipeRecognizer","TapRecognizer","pCenter","pTime","count","Hammer","recognizers","preset","Manager","handlers","oldCssProps","touchAction","toggleCssProps","item","add","recognizeWith","requireFailure","style","cssProps","triggerDomEvent","event","data","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","TEST_ELEMENT","createElement","Date","TypeError","output","index","source","nextKey","extend","dest","merge","keys","MOBILE_REGEX","test","navigator","userAgent","destroy","MOUSE_INPUT_MAP","mousedown","mousemove","INPUT_MOVE","mouseup","MEhandler","button","which","pointerType","INPUT_TYPE_MOUSE","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","INPUT_TYPE_TOUCH","INPUT_TYPE_PEN","INPUT_TYPE_KINECT","MSPointerEvent","PointerEvent","PEhandler","removePointer","eventTypeNormalized","toLowerCase","isTouch","storeIndex","pointerId","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","TEhandler","all","changed","TOUCH_INPUT_MAP","MTEhandler","TMEhandler","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","t","dy","DEDUP_DISTANCE","dx","PREFIXED_TOUCH_ACTION","NATIVE_TOUCH_ACTION","TOUCH_ACTION_MAP","getTouchActionProps","touchMap","cssSupports","CSS","supports","TOUCH_ACTION_COMPUTE","compute","update","getTouchAction","join","preventDefaults","prevented","preventDefault","hasNone","isTapMovement","isTapTouchTime","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","preventSrc","dropRecognizeWith","dropRequireFailure","hasRequireFailures","canRecognizeWith","additionalEvent","tryEmit","canEmit","STATE_FAILED","inputDataClone","process","reset","attrTest","optionPointers","isRecognized","isValid","threshold","DIRECTION_ALL","directionTest","hasMoved","inOut","time","validPointers","validMovement","validTime","clearTimeout","taps","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","stop","force","stopped","FORCED_STOP","STOP","curRecognizer","existing","remove","on","events","off","data.preventDefault","STATE_RECOGNIZED","Tap","Pan","Swipe","Pinch","Rotate","Press","freeGlobal","define","amd"]
}
