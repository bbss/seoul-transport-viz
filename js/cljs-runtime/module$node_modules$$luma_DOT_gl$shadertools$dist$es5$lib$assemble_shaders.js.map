{
"version":3,
"file":"module$node_modules$$luma_DOT_gl$shadertools$dist$es5$lib$assemble_shaders.js",
"lineCount":15,
"mappings":"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",
"sources":["node_modules/@luma_DOT_gl/shadertools/dist/es5/lib/assemble-shaders.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$luma_DOT_gl$shadertools$dist$es5$lib$assemble_shaders\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assembleShaders = assembleShaders;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _constants = require(\"./constants\");\n\nvar _resolveModules = require(\"./resolve-modules\");\n\nvar _platformDefines = require(\"./platform-defines\");\n\nvar _injectShader = _interopRequireWildcard(require(\"./inject-shader\"));\n\nvar _transpileShader = _interopRequireDefault(require(\"./transpile-shader\"));\n\nvar _utils = require(\"../utils\");\n\nvar _SHADER_TYPE;\n\nvar INJECT_SHADER_DECLARATIONS = \"\\n\\n\".concat(_injectShader.DECLARATION_INJECT_MARKER, \"\\n\\n\");\nvar SHADER_TYPE = (_SHADER_TYPE = {}, (0, _defineProperty2[\"default\"])(_SHADER_TYPE, _constants.VERTEX_SHADER, 'vertex'), (0, _defineProperty2[\"default\"])(_SHADER_TYPE, _constants.FRAGMENT_SHADER, 'fragment'), _SHADER_TYPE);\nvar FRAGMENT_SHADER_PROLOGUE = \"precision highp float;\\n\\n\";\n\nfunction assembleShaders(gl, opts) {\n  var vs = opts.vs,\n      fs = opts.fs;\n  var modules = (0, _resolveModules.resolveModules)(opts.modules || []);\n  return {\n    gl: gl,\n    vs: assembleShader(gl, Object.assign({}, opts, {\n      source: vs,\n      type: _constants.VERTEX_SHADER,\n      modules: modules\n    })),\n    fs: assembleShader(gl, Object.assign({}, opts, {\n      source: fs,\n      type: _constants.FRAGMENT_SHADER,\n      modules: modules\n    })),\n    getUniforms: assembleGetUniforms(modules)\n  };\n}\n\nfunction assembleShader(gl, _ref) {\n  var id = _ref.id,\n      source = _ref.source,\n      type = _ref.type,\n      modules = _ref.modules,\n      _ref$defines = _ref.defines,\n      defines = _ref$defines === void 0 ? {} : _ref$defines,\n      _ref$hookFunctions = _ref.hookFunctions,\n      hookFunctions = _ref$hookFunctions === void 0 ? [] : _ref$hookFunctions,\n      _ref$inject = _ref.inject,\n      inject = _ref$inject === void 0 ? {} : _ref$inject,\n      _ref$transpileToGLSL = _ref.transpileToGLSL100,\n      transpileToGLSL100 = _ref$transpileToGLSL === void 0 ? false : _ref$transpileToGLSL,\n      _ref$prologue = _ref.prologue,\n      prologue = _ref$prologue === void 0 ? true : _ref$prologue,\n      log = _ref.log;\n  (0, _utils.assert)(typeof source === 'string', 'shader source must be a string');\n  var isVertex = type === _constants.VERTEX_SHADER;\n  var sourceLines = source.split('\\n');\n  var glslVersion = 100;\n  var versionLine = '';\n  var coreSource = source;\n\n  if (sourceLines[0].indexOf('#version ') === 0) {\n    glslVersion = 300;\n    versionLine = sourceLines[0];\n    coreSource = sourceLines.slice(1).join('\\n');\n  } else {\n    versionLine = \"#version \".concat(glslVersion);\n  }\n\n  var allDefines = {};\n  modules.forEach(function (module) {\n    Object.assign(allDefines, module.getDefines());\n  });\n  Object.assign(allDefines, defines);\n  var assembledSource = prologue ? \"\".concat(versionLine, \"\\n\").concat(getShaderName({\n    id: id,\n    source: source,\n    type: type\n  }), \"\\n\").concat(getShaderType({\n    type: type\n  }), \"\\n\").concat((0, _platformDefines.getPlatformShaderDefines)(gl), \"\\n\").concat((0, _platformDefines.getVersionDefines)(gl, glslVersion, !isVertex), \"\\n\").concat(getApplicationDefines(allDefines), \"\\n\").concat(isVertex ? '' : FRAGMENT_SHADER_PROLOGUE, \"\\n\") : \"\".concat(versionLine, \"\\n\");\n  hookFunctions = normalizeHookFunctions(hookFunctions);\n  var hookInjections = {};\n  var declInjections = {};\n  var mainInjections = {};\n\n  for (var key in inject) {\n    var injection = typeof inject[key] === 'string' ? {\n      injection: inject[key],\n      order: 0\n    } : inject[key];\n    var match = key.match(/^(v|f)s:(#)?([\\w-]+)$/);\n\n    if (match) {\n      var hash = match[2];\n      var name = match[3];\n\n      if (hash) {\n        if (name === 'decl') {\n          declInjections[key] = [injection];\n        } else {\n          mainInjections[key] = [injection];\n        }\n      } else {\n        hookInjections[key] = [injection];\n      }\n    } else {\n      mainInjections[key] = [injection];\n    }\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = modules[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var module = _step.value;\n\n      if (log) {\n        module.checkDeprecations(coreSource, log);\n      }\n\n      var moduleSource = module.getModuleSource(type, glslVersion);\n      assembledSource += moduleSource;\n      var injections = module.injections[type];\n\n      for (var _key in injections) {\n        var _match = _key.match(/^(v|f)s:#([\\w-]+)$/);\n\n        if (_match) {\n          var _name = _match[2];\n          var injectionType = _name === 'decl' ? declInjections : mainInjections;\n          injectionType[_key] = injectionType[_key] || [];\n\n          injectionType[_key].push(injections[_key]);\n        } else {\n          hookInjections[_key] = hookInjections[_key] || [];\n\n          hookInjections[_key].push(injections[_key]);\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n        _iterator[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  assembledSource += INJECT_SHADER_DECLARATIONS;\n  assembledSource = (0, _injectShader[\"default\"])(assembledSource, type, declInjections);\n  assembledSource += getHookFunctions(hookFunctions[type], hookInjections);\n  assembledSource += coreSource;\n  assembledSource = (0, _injectShader[\"default\"])(assembledSource, type, mainInjections);\n  assembledSource = (0, _transpileShader[\"default\"])(assembledSource, transpileToGLSL100 ? 100 : glslVersion, isVertex);\n  return assembledSource;\n}\n\nfunction assembleGetUniforms(modules) {\n  return function getUniforms(opts) {\n    var uniforms = {};\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n      for (var _iterator2 = modules[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n        var module = _step2.value;\n        var moduleUniforms = module.getUniforms(opts, uniforms);\n        Object.assign(uniforms, moduleUniforms);\n      }\n    } catch (err) {\n      _didIteratorError2 = true;\n      _iteratorError2 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n          _iterator2[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError2) {\n          throw _iteratorError2;\n        }\n      }\n    }\n\n    return uniforms;\n  };\n}\n\nfunction getShaderType(_ref2) {\n  var type = _ref2.type;\n  return \"\\n#define SHADER_TYPE_\".concat(SHADER_TYPE[type].toUpperCase(), \"\\n\");\n}\n\nfunction getShaderName(_ref3) {\n  var id = _ref3.id,\n      source = _ref3.source,\n      type = _ref3.type;\n  var injectShaderName = id && typeof id === 'string' && source.indexOf('SHADER_NAME') === -1;\n  return injectShaderName ? \"\\n#define SHADER_NAME \".concat(id, \"_\").concat(SHADER_TYPE[type], \"\\n\\n\") : '';\n}\n\nfunction getApplicationDefines() {\n  var defines = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var count = 0;\n  var sourceText = '';\n\n  for (var define in defines) {\n    if (count === 0) {\n      sourceText += '\\n// APPLICATION DEFINES\\n';\n    }\n\n    count++;\n    var value = defines[define];\n\n    if (value || Number.isFinite(value)) {\n      sourceText += \"#define \".concat(define.toUpperCase(), \" \").concat(defines[define], \"\\n\");\n    }\n  }\n\n  if (count === 0) {\n    sourceText += '\\n';\n  }\n\n  return sourceText;\n}\n\nfunction getHookFunctions(hookFunctions, hookInjections) {\n  var result = '';\n\n  for (var hookName in hookFunctions) {\n    var hookFunction = hookFunctions[hookName];\n    result += \"void \".concat(hookFunction.signature, \" {\\n\");\n\n    if (hookFunction.header) {\n      result += \"  \".concat(hookFunction.header);\n    }\n\n    if (hookInjections[hookName]) {\n      var injections = hookInjections[hookName];\n      injections.sort(function (a, b) {\n        return a.order - b.order;\n      });\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = injections[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var injection = _step3.value;\n          result += \"  \".concat(injection.injection, \"\\n\");\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n            _iterator3[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    }\n\n    if (hookFunction.footer) {\n      result += \"  \".concat(hookFunction.footer);\n    }\n\n    result += '}\\n';\n  }\n\n  return result;\n}\n\nfunction normalizeHookFunctions(hookFunctions) {\n  var result = {\n    vs: {},\n    fs: {}\n  };\n  hookFunctions.forEach(function (hook) {\n    var opts;\n\n    if (typeof hook !== 'string') {\n      opts = hook;\n      hook = opts.hook;\n    } else {\n      opts = {};\n    }\n\n    hook = hook.trim();\n\n    var _hook$split = hook.split(':'),\n        _hook$split2 = (0, _slicedToArray2[\"default\"])(_hook$split, 2),\n        stage = _hook$split2[0],\n        signature = _hook$split2[1];\n\n    var name = hook.replace(/\\(.+/, '');\n    result[stage][name] = Object.assign(opts, {\n      signature: signature\n    });\n  });\n  return result;\n}\n//# sourceMappingURL=assemble-shaders.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","assembleShader","gl","_ref","id","source","type","modules","_ref$defines","defines","_ref$hookFunctions","hookFunctions","_ref$inject","inject","_ref$transpileToGLSL","transpileToGLSL100","_ref$prologue","prologue","log","_utils","assert","isVertex","_constants","VERTEX_SHADER","sourceLines","split","glslVersion","versionLine","coreSource","indexOf","slice","join","concat","allDefines","forEach","Object","assign","getDefines","assembledSource","getShaderName","SHADER_TYPE","toUpperCase","_platformDefines","getPlatformShaderDefines","getVersionDefines","getApplicationDefines","FRAGMENT_SHADER_PROLOGUE","normalizeHookFunctions","hookInjections","declInjections","mainInjections","key","injection","order","match","name","hash","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iterator","Symbol","iterator","_step","done","next","value","checkDeprecations","moduleSource","getModuleSource","injections","_key","_match","injectionType","_name","push","err","INJECT_SHADER_DECLARATIONS","_injectShader","getHookFunctions","_transpileShader","assembleGetUniforms","getUniforms","opts","uniforms","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","moduleUniforms","_ref3","arguments","length","count","sourceText","define","Number","isFinite","result","hookName","hookFunction","signature","header","sort","a","b","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","footer","vs","fs","hook","trim","_hook$split","_hook$split2","_slicedToArray2","stage","replace","_interopRequireDefault","_interopRequireWildcard","defineProperty","assembleShaders","_resolveModules","resolveModules","FRAGMENT_SHADER","_defineProperty2","_SHADER_TYPE","DECLARATION_INJECT_MARKER"]
}
