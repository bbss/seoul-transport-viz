shadow$provide.module$node_modules$$math_DOT_gl$culling$dist$es5$algorithms$bounding_sphere_from_points=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports["default"]=function(positions){var result=1<arguments.length&&void 0!==arguments[1]?arguments[1]:new _boundingSphere["default"];if(!positions||0===positions.length)return result.fromCenterRadius([0,0,0],0);var currentPos=
fromPointsCurrentPos.copy(positions[0]),xMin=fromPointsXMin.copy(currentPos),yMin=fromPointsYMin.copy(currentPos),zMin=fromPointsZMin.copy(currentPos),xMax=fromPointsXMax.copy(currentPos),yMax=fromPointsYMax.copy(currentPos),zMax=fromPointsZMax.copy(currentPos),_iteratorNormalCompletion=!0,_didIteratorError=!1,_iteratorError=void 0;try{for(var _iterator=positions[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=!0){currentPos.copy(_step.value);
var x=currentPos.x,y=currentPos.y,z=currentPos.z;x<xMin.x&&currentPos.copy(xMin);x>xMax.x&&currentPos.copy(xMax);y<yMin.y&&currentPos.copy(yMin);y>yMax.y&&currentPos.copy(yMax);z<zMin.z&&currentPos.copy(zMin);z>zMax.z&&currentPos.copy(zMax)}}catch(err){_didIteratorError=!0,_iteratorError=err}finally{try{if(!_iteratorNormalCompletion&&null!=_iterator["return"])_iterator["return"]()}finally{if(_didIteratorError)throw _iteratorError;}}_step=fromPointsScratch.copy(xMax).subtract(xMin).magnitudeSquared();
_iteratorNormalCompletion=fromPointsScratch.copy(yMax).subtract(yMin).magnitudeSquared();_iterator=fromPointsScratch.copy(zMax).subtract(zMin).magnitudeSquared();_didIteratorError=xMin;_iteratorError=xMax;_iteratorNormalCompletion>_step&&(_step=_iteratorNormalCompletion,_didIteratorError=yMin,_iteratorError=yMax);_iterator>_step&&(_didIteratorError=zMin,_iteratorError=zMax);_iteratorNormalCompletion=fromPointsRitterCenter;_iteratorNormalCompletion.x=.5*(_didIteratorError.x+_iteratorError.x);_iteratorNormalCompletion.y=
.5*(_didIteratorError.y+_iteratorError.y);_iteratorNormalCompletion.z=.5*(_didIteratorError.z+_iteratorError.z);_didIteratorError=fromPointsScratch.copy(_iteratorError).subtract(_iteratorNormalCompletion).magnitudeSquared();_iteratorError=Math.sqrt(_didIteratorError);_iterator=fromPointsMinBoxPt;_iterator.x=xMin.x;_iterator.y=yMin.y;_iterator.z=zMin.z;xMin=fromPointsMaxBoxPt;xMin.x=xMax.x;xMin.y=yMax.y;xMin.z=zMax.z;xMax=fromPointsNaiveCenterScratch.copy(_iterator).add(xMin).multiplyByScalar(.5);
yMax=0;zMax=!0;xMin=!1;yMin=void 0;try{for(var _iterator2=positions[Symbol.iterator](),_step2;!(zMax=(_step2=_iterator2.next()).done);zMax=!0){currentPos.copy(_step2.value);var r=fromPointsScratch.copy(currentPos).subtract(xMax).magnitude();r>yMax&&(yMax=r);var oldCenterToPointSquared=fromPointsScratch.copy(currentPos).subtract(_iteratorNormalCompletion).magnitudeSquared();if(oldCenterToPointSquared>_didIteratorError){var oldCenterToPoint=Math.sqrt(oldCenterToPointSquared);_iteratorError=.5*(_iteratorError+
oldCenterToPoint);_didIteratorError=_iteratorError*_iteratorError;zMin=oldCenterToPoint-_iteratorError;_iteratorNormalCompletion.x=(_iteratorError*_iteratorNormalCompletion.x+zMin*currentPos.x)/oldCenterToPoint;_iteratorNormalCompletion.y=(_iteratorError*_iteratorNormalCompletion.y+zMin*currentPos.y)/oldCenterToPoint;_iteratorNormalCompletion.z=(_iteratorError*_iteratorNormalCompletion.z+zMin*currentPos.z)/oldCenterToPoint}}}catch(err$425){xMin=!0,yMin=err$425}finally{try{if(!zMax&&null!=_iterator2["return"])_iterator2["return"]()}finally{if(xMin)throw yMin;
}}_iteratorError<yMax?(_iteratorNormalCompletion.to(result.center),result.radius=_iteratorError):(xMax.to(result.center),result.radius=yMax);return result};exports=require("module$node_modules$$math_DOT_gl$core$dist$es5$index");var _boundingSphere=global(require("module$node_modules$$math_DOT_gl$culling$dist$es5$lib$bounding_sphere")),fromPointsXMin=new exports.Vector3,fromPointsYMin=new exports.Vector3,fromPointsZMin=new exports.Vector3,fromPointsXMax=new exports.Vector3,fromPointsYMax=new exports.Vector3,
fromPointsZMax=new exports.Vector3,fromPointsCurrentPos=new exports.Vector3,fromPointsScratch=new exports.Vector3,fromPointsRitterCenter=new exports.Vector3,fromPointsMinBoxPt=new exports.Vector3,fromPointsMaxBoxPt=new exports.Vector3,fromPointsNaiveCenterScratch=new exports.Vector3}
//# sourceMappingURL=module$node_modules$$math_DOT_gl$culling$dist$es5$algorithms$bounding_sphere_from_points.js.map
