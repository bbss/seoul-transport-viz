{
"version":3,
"file":"module$node_modules$$deck_DOT_gl$geo_layers$dist$es5$s2_layer$s2_layer.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/@deck_DOT_gl/geo-layers/dist/es5/s2-layer/s2-layer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$deck_DOT_gl$geo_layers$dist$es5$s2_layer$s2_layer\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _core = require(\"@deck.gl/core\");\n\nvar _layers = require(\"@deck.gl/layers\");\n\nvar _s2Utils = require(\"./s2-utils\");\n\nvar defaultProps = Object.assign({\n  getS2Token: {\n    type: 'accessor',\n    value: function value(d) {\n      return d.token;\n    }\n  }\n}, _layers.PolygonLayer.defaultProps);\n\nvar S2Layer = function (_CompositeLayer) {\n  (0, _inherits2[\"default\"])(S2Layer, _CompositeLayer);\n\n  function S2Layer() {\n    (0, _classCallCheck2[\"default\"])(this, S2Layer);\n    return (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(S2Layer).apply(this, arguments));\n  }\n\n  (0, _createClass2[\"default\"])(S2Layer, [{\n    key: \"renderLayers\",\n    value: function renderLayers() {\n      var _this$props = this.props,\n          data = _this$props.data,\n          getS2Token = _this$props.getS2Token;\n      var _this$props2 = this.props,\n          elevationScale = _this$props2.elevationScale,\n          extruded = _this$props2.extruded,\n          wireframe = _this$props2.wireframe,\n          filled = _this$props2.filled,\n          stroked = _this$props2.stroked,\n          lineWidthUnits = _this$props2.lineWidthUnits,\n          lineWidthScale = _this$props2.lineWidthScale,\n          lineWidthMinPixels = _this$props2.lineWidthMinPixels,\n          lineWidthMaxPixels = _this$props2.lineWidthMaxPixels,\n          lineJointRounded = _this$props2.lineJointRounded,\n          lineMiterLimit = _this$props2.lineMiterLimit,\n          lineDashJustified = _this$props2.lineDashJustified,\n          getElevation = _this$props2.getElevation,\n          getFillColor = _this$props2.getFillColor,\n          getLineColor = _this$props2.getLineColor,\n          getLineWidth = _this$props2.getLineWidth,\n          getLineDashArray = _this$props2.getLineDashArray;\n      var _this$props3 = this.props,\n          updateTriggers = _this$props3.updateTriggers,\n          material = _this$props3.material;\n      var CellLayer = this.getSubLayerClass('cell', _layers.PolygonLayer);\n      return new CellLayer({\n        filled: filled,\n        wireframe: wireframe,\n        extruded: extruded,\n        elevationScale: elevationScale,\n        stroked: stroked,\n        lineWidthUnits: lineWidthUnits,\n        lineWidthScale: lineWidthScale,\n        lineWidthMinPixels: lineWidthMinPixels,\n        lineWidthMaxPixels: lineWidthMaxPixels,\n        lineJointRounded: lineJointRounded,\n        lineMiterLimit: lineMiterLimit,\n        lineDashJustified: lineDashJustified,\n        material: material,\n        getElevation: getElevation,\n        getFillColor: getFillColor,\n        getLineColor: getLineColor,\n        getLineWidth: getLineWidth,\n        getLineDashArray: getLineDashArray\n      }, this.getSubLayerProps({\n        id: 'cell',\n        updateTriggers: {\n          getElevation: updateTriggers.getElevation,\n          getFillColor: updateTriggers.getFillColor,\n          getLineColor: updateTriggers.getLineColor,\n          getLineWidth: updateTriggers.getLineWidth,\n          getLineDashArray: updateTriggers.getLineDashArray\n        }\n      }), {\n        data: data,\n        _normalize: false,\n        positionFormat: 'XY',\n        getPolygon: function getPolygon(x, objectInfo) {\n          return (0, _s2Utils.getS2Polygon)(getS2Token(x, objectInfo));\n        }\n      });\n    }\n  }]);\n  return S2Layer;\n}(_core.CompositeLayer);\n\nexports[\"default\"] = S2Layer;\nS2Layer.layerName = 'S2Layer';\nS2Layer.defaultProps = defaultProps;\n//# sourceMappingURL=s2-layer.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","Object","defineProperty","value","_classCallCheck2","_createClass2","_possibleConstructorReturn2","_getPrototypeOf2","_inherits2","_core","_layers","_s2Utils","defaultProps","assign","getS2Token","type","d","token","PolygonLayer","S2Layer","_CompositeLayer","apply","arguments","key","renderLayers","_this$props","props","data","_this$props2","elevationScale","extruded","wireframe","filled","stroked","lineWidthUnits","lineWidthScale","lineWidthMinPixels","lineWidthMaxPixels","lineJointRounded","lineMiterLimit","lineDashJustified","getElevation","getFillColor","getLineColor","getLineWidth","getLineDashArray","_this$props3","updateTriggers","material","getSubLayerClass","CellLayer","getSubLayerProps","id","_normalize","positionFormat","getPolygon","x","objectInfo","getS2Polygon","CompositeLayer","layerName"]
}
